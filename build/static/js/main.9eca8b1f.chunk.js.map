{"version":3,"sources":["private/PrivateRoute.jsx","private/RouteLinks.jsx","store/types/AuthTypes.js","store/types/CommonTypes.js","store/reducers/AuthReducer.js","store/types/UserTypes.js","store/reducers/UserReducer.js","store/types/PostTypes.js","store/reducers/PostReducer.js","store/types/CategoryTypes.js","store/reducers/CategoryReducer.js","store/types/CommentTypes.js","store/reducers/CommentReducer.js","store/index.jsx","config/index.jsx","store/asyncMethod/AuthMethod.js","pages/Auth/utils/IconImage.jsx","pages/Auth/utils/PandaIcon.jsx","pages/Auth/Login.jsx","components/Shared/AdminHeader.jsx","components/Shared/AdminSidebar.jsx","pages/Admin/index.jsx","components/Table/index.jsx","store/asyncMethod/UserMethod.js","components/Shared/GoBack.jsx","store/asyncMethod/PostMethod.js","pages/Admin/User/create.jsx","pages/Admin/User/edit.jsx","pages/Admin/Post/index.jsx","pages/Admin/Post/QuillEditor.js","pages/Admin/Post/create.jsx","store/asyncMethod/CategoryMethod.js","pages/Admin/Post/edit.jsx","store/asyncMethod/CommentMethod.js","pages/Admin/Profile/index.jsx","App.js","index.js"],"names":["PrivateRoute","props","useSelector","state","AuthReducer","user","path","exact","component","RouteLinks","role","to","REGISTER_ERROR","LOGIN_ERROR","SET_TOKEN","LOGOUT","SET_LOADER","CLOSE_LOADER","REDIRECT_TRUE","REDIRECT_FALSE","REMOVE_ERROR","initState","loading","registerError","loginError","token","localStorage","getItem","decoded","decodeToken","jwt_decode","expiresIn","Date","exp","removeItem","verifyToken","action","type","payload","email","SET_USERS","SET_USER","USER_REQUEST","USER_RESET","CREATE_USER_ERROR","EDIT_USER_ERROR","DELETE_USER_ERROR","totalDocs","redirect","currentPage","users","createUserError","editUserError","deleteUserError","userStatus","SET_POSTS","CREATE_POST","CREATE_POST_ERROR","SET_MESSAGE","REMOVE_MESSAGE","POST_DETAIL","POST_REQUEST","POST_RESET","createPostError","message","posts","post","postStatus","SET_CATEGORIES","categories","category","SET_COMMENTS","COMMENT_DETAIL","COMMENT_REQUEST","COMMENT_RESET","CREATE_COMMENT_ERROR","EDIT_COMMENT_ERROR","DELETE_COMMENT_ERROR","comments","comment","createCommentError","editCommentError","deleteCommentError","commentStatus","rootReducers","combineReducers","UserReducer","data","PostReducer","CategoryReducer","CommentReducer","middlewares","thunkMiddleware","Store","createStore","composeWithDevTools","applyMiddleware","BASE_URL","login","console","log","dispatch","a","password","window","location","href","error","response","IconImage","className","PandaSvg","viewBox","width","height","fill","d","p-id","PandaIcon","Icon","Login","useState","setState","useDispatch","handleInputs","e","target","name","value","loginForm","preventDefault","useEffect","toast","Helmet","content","position","reverseOrder","gutter","toastOptions","duration","style","background","color","fontSize","onSubmit","marginLeft","placeholder","onChange","padding","checked","shape","icon","FacebookOutlined","size","GoogleOutlined","AdminHeader","history","useHistory","menu","onClick","key","push","Item","ProfileOutlined","EditOutlined","LogoutOutlined","count","trigger","overlay","src","avatar","AdminSidebar","margin","backgroundColor","borderRadius","class","index","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","record","disabled","Index","selectionType","columns","dataSource","pagination","handlePagination","scroll","GoBack","goBack","borderColor","Select","Option","deletePost","id","config","headers","Authorization","axios","delete","status","reload","title","dataIndex","render","text","htmlToText","slice","display","marginRight","image","slug","onConfirm","handleDelete","queryString","parse","search","page","page_size","total","pageSize","parseInt","current","pageSizeOptions","showSizeChanger","showTotal","getState","get","getAllPosts","Table","x","Delta","navigator","userAgent","match","Quill","import","Clipboard","getMetaTagElements","stringContent","el","document","createElement","innerHTML","getElementsByTagName","range","this","quill","getSelection","clipboardData","getData","delta","retain","length","insert","updateContents","setSelection","scrollIntoView","register","BlockEmbed","ImageBlot","imgTag","setAttribute","alt","node","getAttribute","blotName","tagName","VideoBlot","videoTag","iframeTag","FileBlot","prefixTag","innerText","bTag","linkTag","appendChild","querySelector","PollBlot","QuillEditor","handleChange","html","editorHtml","onEditorChange","imageHandler","inputOpenImageRef","click","videoHandler","inputOpenVideoRef","fileHandler","inputOpenFileRef","insertImage","stopPropagation","currentTarget","files","file","formData","FormData","append","header","then","alert","reactQuillRef","getEditor","focus","insertEmbed","url","_isMounted","onFilesChange","insertVideo","success","insertFile","fileName","modules","toolbar","container","handlers","insertPoll","pollHandler","formats","React","createRef","prevProps","prevState","ref","theme","accept","Component","Create","Form","useForm","form","setFiles","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","onFinishFailed","errorInfo","autoComplete","label","rules","required","slugNpm","setFieldsValue","info","maxCount","beforeUpload","UploadOutlined","offset","resetFields","htmlType","Edit","params","editPostError","urlImage","setUrlImage","description","getPostDetail","put","editPost","listType","marginTop","App","store","AdminDashboard","AdminPost","AdminCreatePost","AdminEditPost","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9eca8b1f.chunk.js","sourcesContent":["import { useSelector } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom'\nconst PrivateRoute = (props) => {\n    const { user } = useSelector((state) => state.AuthReducer)\n    return (\n        <Route\n            path={props.path}\n            exact={props.exact}\n            component={props.component}\n        />\n    )\n    // : (\n    //     <Redirect to=\"/admin/login\" />\n    // )\n}\n\nexport default PrivateRoute\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom'\nconst RouteLinks = (props) => {\n    const { user } = useSelector((state) => state.AuthReducer)\n    return user.role === 'admin' ? (\n        <Redirect to=\"/admin/dashboard\" />\n    ) : (\n        <Route\n            path={props.path}\n            exact={props.exact}\n            component={props.component}\n        />\n    )\n}\n\nexport default RouteLinks\n","export const REGISTER_ERROR = 'REGISTER_ERROR'\nexport const LOGIN_ERROR = 'LOGIN_ERROR'\nexport const SET_TOKEN = 'SET_TOKEN'\nexport const LOGOUT = 'LOGOUT'\n","export const SET_LOADER = 'SET_LOADER'\nexport const CLOSE_LOADER = 'CLOSE_LOADER'\nexport const REDIRECT_TRUE = 'REDIRECT_TRUE'\nexport const REDIRECT_FALSE = 'REDIRECT_FALSE'\nexport const REMOVE_ERROR = 'REMOVE_ERROR'\n","import jwt_decode from 'jwt-decode'\nimport {\n    SET_TOKEN,\n    REGISTER_ERROR,\n    LOGIN_ERROR,\n    LOGOUT,\n} from '../types/AuthTypes.js'\nimport { SET_LOADER, CLOSE_LOADER, REMOVE_ERROR } from '../types/CommonTypes.js'\nconst initState = {\n    loading: false,\n    registerError: '',\n    loginError: '',\n    token: '',\n    user: '',\n}\nconst verifyToken = (token) => {\n    const decodeToken = jwt_decode(token)\n    const expiresIn = new Date(decodeToken.exp * 1000)\n    if (new Date() > expiresIn) {\n        localStorage.removeItem('admin_token')\n        return null\n    } else {\n        return decodeToken\n    }\n}\nconst token = localStorage.getItem('admin_token')\nif (token) {\n    const decoded = verifyToken(token)\n    initState.token = token\n    const { user } = decoded\n    initState.user = user\n}\nconst AuthReducer = (state = initState, action) => {\n    const { type, payload } = action\n    if (type === SET_LOADER) {\n        return { ...state, loading: true }\n    } else if (type === CLOSE_LOADER) {\n        return { ...state, loading: false }\n    } else if (type === REGISTER_ERROR) {\n        return { ...state, registerError: payload }\n    } else if (type === LOGIN_ERROR) {\n        return { ...state, loginError: payload }\n    } else if (type === SET_TOKEN) {\n        const user = {\n            email: 'admin',\n        }\n        return { ...state, token: payload, user: user }\n    } else if (type === REMOVE_ERROR) {\n        return { ...state, registerError: '', loginError: '' }\n    } else if (type === LOGOUT) {\n        return { ...state, token: '', user: '' }\n    } else {\n        return state\n    }\n}\nexport default AuthReducer\n","export const REGISTER_ERROR = 'REGISTER_ERROR'\nexport const LOGIN_ERROR = 'LOGIN_ERROR'\nexport const SET_USERS = 'SET_USERS'\nexport const SET_USER = 'SET_USER'\nexport const USER_REQUEST = 'USER_REQUEST'\nexport const USER_RESET = 'USER_RESET'\nexport const CREATE_USER_ERROR = 'CREATE_USER_ERROR'\nexport const EDIT_USER_ERROR = 'EDIT_USER_ERROR'\nexport const DELETE_USER_ERROR = 'DELETE_USER_ERROR'\n","import { SET_USERS, CREATE_USER_ERROR, SET_USER, USER_REQUEST, USER_RESET, EDIT_USER_ERROR, DELETE_USER_ERROR } from '../types/UserTypes.js'\nimport { REDIRECT_TRUE, REMOVE_ERROR, REDIRECT_FALSE } from '../types/CommonTypes.js'\n\nconst initState = {\n    loading: false,\n    totalDocs: 0,\n    redirect: false,\n    currentPage: 0,\n    users: [],\n    user: {},\n    createUserError: '',\n    editUserError: '',\n    deleteUserError: '',\n    userStatus: false\n}\nexport const UserReducer = (state = initState, action) => {\n    const { type, payload } = action\n    if (type === SET_USERS) {\n        return { ...state, users: payload.data, totalDocs: payload.totalDocs, currentPage: payload.currentPage }\n    } else if (type === SET_USER) {\n        return { ...state, user: payload };\n    } else if (type === CREATE_USER_ERROR) {\n        return { ...state, createUserError: payload }\n    } else if (type === EDIT_USER_ERROR) {\n        return { ...state, editUserError: payload }\n    }\n    else if (type === DELETE_USER_ERROR) {\n        return { ...state, deleteUserError: payload }\n    } else if (type === REMOVE_ERROR) {\n        return { ...state, createUserError: '', editUserError: '', deleteUserError: '', }\n    }\n    else if (type === USER_REQUEST) {\n        return { ...state, userStatus: true };\n    } else if (type === USER_RESET) {\n        return { ...state, userStatus: false };\n    }\n    else if (type === REDIRECT_TRUE) {\n        return { ...state, redirect: true }\n    } else if (type === REDIRECT_FALSE) {\n        return { ...state, redirect: false }\n    } else {\n        return state\n    }\n}\n","export const SET_POSTS = 'SET_POSTS';\nexport const CREATE_POST = 'CREATE_POST';\nexport const CREATE_POST_ERROR = 'CREATE_POST_ERROR';\nexport const SET_MESSAGE = 'SET_MESSAGE'\nexport const REMOVE_MESSAGE = 'REMOVE_MESSAGE'\nexport const REMOVE_ERROR = 'REMOVE_ERROR'\nexport const POST_DETAIL = 'POST_DETAIL'\nexport const POST_REQUEST = 'POST_REQUEST'\nexport const POST_RESET = 'POST_RESET'\nexport const EDIT_POST_ERROR = 'EDIT_POST_ERROR'\n\n\n\n\n","import { SET_POSTS, CREATE_POST, CREATE_POST_ERROR, SET_MESSAGE, POST_DETAIL, REMOVE_MESSAGE, POST_REQUEST, POST_RESET } from '../types/PostTypes.js'\nimport { REMOVE_ERROR, SET_LOADER, CLOSE_LOADER, REDIRECT_TRUE, REDIRECT_FALSE } from '../types/CommonTypes.js'\nconst initState = {\n    loading: false,\n    totalDocs: 0,\n    redirect: false,\n    currentPage: 0,\n    createPostError: '',\n    message: '',\n    posts: [],\n    post: {},\n    postStatus: false\n}\nexport const PostReducer = (state = initState, action) => {\n    const { type, payload } = action\n    if (type === SET_POSTS) {\n        return { ...state, posts: payload.data, totalDocs: payload.totalDocs, currentPage: payload.currentPage }\n    }\n    else if (type === SET_LOADER) {\n        return { ...state, loading: true }\n    } else if (type === CLOSE_LOADER) {\n        return { ...state, loading: true }\n    }\n    else if (type === CREATE_POST_ERROR) {\n        return { ...state, createPostError: payload }\n    } else if (type === CREATE_POST) {\n        return { ...state, loading: true }\n    } else if (type === REDIRECT_TRUE) {\n        return { ...state, redirect: true }\n    } else if (type === REDIRECT_FALSE) {\n        return { ...state, redirect: false }\n    }\n    else if (type === SET_MESSAGE) {\n        return { ...state, message: payload }\n    }\n    else if (type === REMOVE_MESSAGE) {\n        return { ...state, message: '' }\n    } else if (type === REMOVE_ERROR) {\n        return { ...state, createPostError: '' }\n    } if (type === POST_DETAIL) {\n        return { ...state, post: payload }\n    }\n    else if (type === POST_REQUEST) {\n        return { ...state, postStatus: true };\n    } else if (type === POST_RESET) {\n        return { ...state, postStatus: false };\n    } else {\n        return state\n    }\n\n}\n","export const SET_CATEGORIES = 'SET_CATEGORIES'","import { SET_CATEGORIES } from '../types/CategoryTypes'\nimport { REDIRECT_TRUE, REMOVE_ERROR } from '../types/CommonTypes.js'\n\nconst initState = {\n    loading: false,\n    totalDocs: 0,\n    redirect: false,\n    currentPage: 0,\n    categories: [],\n    category: {},\n    userStatus: false\n}\nexport const CategoryReducer = (state = initState, action) => {\n    const { type, payload } = action\n    if (type === SET_CATEGORIES) {\n        return { ...state, categories: payload.data, totalDocs: payload.totalDocs, currentPage: payload.currentPage }\n    } else {\n        return state\n    }\n}\n","export const REGISTER_ERROR = 'REGISTER_ERROR';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const SET_TOKEN = 'SET_TOKEN';\nexport const LOGOUT = 'LOGOUT';\nexport const SET_COMMENTS = 'SET_COMMENTS';\nexport const COMMENT_DETAIL = 'COMMENT_DETAIL';\nexport const COMMENT_REQUEST = 'COMMENT_REQUEST';\nexport const COMMENT_RESET = 'COMMENT_RESET'\nexport const CREATE_COMMENT_ERROR = 'CREATE_COMMENT_ERROR';\nexport const EDIT_COMMENT_ERROR = 'EDIT_COMMENT_ERROR';\nexport const DELETE_COMMENT_ERROR = 'DELETE_COMMENT_ERROR';\nexport const REMOVE_ERROR = 'REMOVE_ERROR';\n","import { SET_COMMENTS, CREATE_COMMENT_ERROR, COMMENT_DETAIL, COMMENT_REQUEST, COMMENT_RESET, EDIT_COMMENT_ERROR, DELETE_COMMENT_ERROR } from '../types/CommentTypes.js'\nimport { REDIRECT_TRUE, REMOVE_ERROR } from '../types/CommonTypes.js'\n\nconst initState = {\n    loading: false,\n    totalDocs: 0,\n    redirect: false,\n    currentPage: 0,\n    comments: [],\n    comment: {},\n    createCommentError: '',\n    editCommentError: '',\n    deleteCommentError: '',\n    commentStatus: false\n}\nexport const CommentReducer = (state = initState, action) => {\n    const { type, payload } = action\n    if (type === SET_COMMENTS) {\n        return { ...state, comments: payload.data, totalDocs: payload.totalDocs, currentPage: payload.currentPage }\n    } else if (type === COMMENT_DETAIL) {\n        return { ...state, comment: payload };\n    } else if (type === CREATE_COMMENT_ERROR) {\n        return { ...state, createCommentError: payload }\n    } else if (type === EDIT_COMMENT_ERROR) {\n        return { ...state, editCommentError: payload }\n    }\n    else if (type === DELETE_COMMENT_ERROR) {\n        return { ...state, deleteCommentError: payload }\n    } else if (type === REMOVE_ERROR) {\n        return { ...state, createCommentError: '', editCommentError: '', deleteCommentError: '', }\n    }\n    else if (type === COMMENT_REQUEST) {\n        return { ...state, commentStatus: true };\n    } else if (type === COMMENT_RESET) {\n        return { ...state, commentStatus: false };\n    }\n    else if (type === REDIRECT_TRUE) {\n        return { ...state, redirect: true }\n    } else {\n        return state\n    }\n}\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport AuthReducer from './reducers/AuthReducer'\nimport { UserReducer } from './reducers/UserReducer'\nimport { PostReducer } from './reducers/PostReducer'\nimport { CategoryReducer } from './reducers/CategoryReducer'\nimport { CommentReducer } from './reducers/CommentReducer'\nconst rootReducers = combineReducers({\n    AuthReducer,\n    UserReducer,\n    PostReducer,\n    CategoryReducer,\n    CommentReducer,\n})\nconst middlewares = [thunkMiddleware]\nconst Store = createStore(\n    rootReducers,\n    composeWithDevTools(applyMiddleware(...middlewares))\n)\nexport default Store\n","export const BASE_URL = 'http://149.102.141.242:3001/api'\n","import axios from 'axios'\nimport { SET_TOKEN, REGISTER_ERROR, LOGIN_ERROR } from '../types/AuthTypes.js'\nimport { SET_LOADER, CLOSE_LOADER, REMOVE_ERROR } from '../types/CommonTypes.js'\nimport { BASE_URL } from '../../config'\n\nconst token = localStorage.getItem('token')\nexport const register = (user) => {\n    return async (dispatch) => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        dispatch({ type: SET_LOADER })\n        try {\n            const res = await axios.post(\n                `${BASE_URL}/auth/register`,\n                user,\n                config\n            )\n            dispatch({ type: CLOSE_LOADER })\n            if (res.status === 200) {\n                window.location.href = `/admin/login`\n            }\n        } catch (error) {\n            dispatch({ type: CLOSE_LOADER })\n            dispatch({\n                type: REGISTER_ERROR,\n                payload: error.response.data.message,\n            })\n            dispatch({ type: REMOVE_ERROR })\n        }\n    }\n}\nexport const login = (user) => {\n    console.log('🚀 ~ file: AuthMethod.js ~ line 36 ~ login ~ user', user)\n    return async (dispatch) => {\n        // const config = {\n        //     headers: {\n        //         'Content-Type': 'application/json',\n        //     },\n        // }\n        dispatch({ type: SET_LOADER })\n        try {\n            // user.type = 'admin'\n            // const { data } = await axios.post(\n            //     `${BASE_URL}/auth/login`,\n            //     user,\n            //     config\n            // )\n            if (\n                user.email === 'thanhhuyen155tb@gmail.com' &&\n                user.password === '1'\n            ) {\n                console.log('login successful')\n                window.location.href = '/dashboard'\n                dispatch({ type: SET_TOKEN, payload: '0x' })\n                dispatch({ type: CLOSE_LOADER })\n            } else {\n                dispatch({ type: CLOSE_LOADER })\n                dispatch({\n                    type: LOGIN_ERROR,\n                    payload: 'Sai tài khoản hoặc mật khẩu',\n                })\n                console.log('login fail')\n                // dispatch({ type: REMOVE_ERROR })\n            }\n            // localStorage.setItem('admin_token', data.token)\n        } catch (error) {\n            console.log('error', error.response.data.message)\n        }\n    }\n}\n\nexport const changePassword = async (data) => {\n    const config = {\n        headers: {\n            Authorization: `${token}`,\n        },\n    }\n    await axios\n        .post(`${BASE_URL}/auth/change-password`, data, config)\n        .then((response) => {\n            window.location.href = '/profile'\n        })\n        .catch((error) => {\n            throw error.response.data.message\n        })\n}\n","import React from 'react'\n\nconst IconImage = () => {\n    return <div className=\"icon-image\"></div>\n}\n\nexport default IconImage\n","import Icon from '@ant-design/icons'\n\nconst PandaSvg = () => (\n    <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" fill=\"currentColor\">\n        <path\n            d=\"M99.096 315.634s-82.58-64.032-82.58-132.13c0-66.064 33.032-165.162 148.646-148.646 83.37 11.91 99.096 165.162 99.096 165.162l-165.162 115.614zM924.906 315.634s82.58-64.032 82.58-132.13c0-66.064-33.032-165.162-148.646-148.646-83.37 11.91-99.096 165.162-99.096 165.162l165.162 115.614z\"\n            fill=\"#6B676E\"\n            p-id=\"1143\"\n        />\n        <path\n            d=\"M1024 561.548c0 264.526-229.23 429.42-512.002 429.42S0 826.076 0 561.548 283.96 66.064 512.002 66.064 1024 297.022 1024 561.548z\"\n            fill=\"#FFEBD2\"\n            p-id=\"1144\"\n        />\n        <path\n            d=\"M330.324 842.126c0 82.096 81.34 148.646 181.678 148.646s181.678-66.55 181.678-148.646H330.324z\"\n            fill=\"#E9D7C3\"\n            p-id=\"1145\"\n        />\n        <path\n            d=\"M644.13 611.098C594.582 528.516 561.55 512 512.002 512c-49.548 0-82.58 16.516-132.13 99.096-42.488 70.814-78.73 211.264-49.548 247.742 66.064 82.58 165.162 33.032 181.678 33.032 16.516 0 115.614 49.548 181.678-33.032 29.18-36.476-7.064-176.93-49.55-247.74z\"\n            fill=\"#FFFFFF\"\n            p-id=\"1146\"\n        />\n        <path\n            d=\"M611.098 495.484c0-45.608 36.974-82.58 82.58-82.58 49.548 0 198.194 99.098 198.194 165.162s-79.934 144.904-148.646 99.096c-49.548-33.032-132.128-148.646-132.128-181.678zM412.904 495.484c0-45.608-36.974-82.58-82.58-82.58-49.548 0-198.194 99.098-198.194 165.162s79.934 144.904 148.646 99.096c49.548-33.032 132.128-148.646 132.128-181.678z\"\n            fill=\"#6B676E\"\n            p-id=\"1147\"\n        />\n        <path\n            d=\"M512.002 726.622c-30.06 0-115.614 5.668-115.614 33.032 0 49.638 105.484 85.24 115.614 82.58 10.128 2.66 115.614-32.944 115.614-82.58-0.002-27.366-85.556-33.032-115.614-33.032z\"\n            fill=\"#464655\"\n            p-id=\"1148\"\n        />\n        <path\n            d=\"M330.324 495.484m-33.032 0a33.032 33.032 0 1 0 66.064 0 33.032 33.032 0 1 0-66.064 0Z\"\n            fill=\"#464655\"\n            p-id=\"1149\"\n        />\n        <path\n            d=\"M693.678 495.484m-33.032 0a33.032 33.032 0 1 0 66.064 0 33.032 33.032 0 1 0-66.064 0Z\"\n            fill=\"#464655\"\n            p-id=\"1150\"\n        />\n    </svg>\n)\nconst PandaIcon = (props) => <Icon component={PandaSvg} {...props} />\n\nexport default PandaIcon\n","import { useState, useEffect } from 'react'\nimport toast, { Toaster } from 'react-hot-toast'\nimport { Helmet } from 'react-helmet'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { login } from '../../store/asyncMethod/AuthMethod'\nimport IconImage from '../Auth/utils/IconImage'\nimport PandaIcon from '../Auth/utils/PandaIcon'\nimport { Link } from 'react-router-dom'\nimport { GoogleOutlined, FacebookOutlined } from '@ant-design/icons'\nimport { Button, Checkbox } from 'antd'\n\nconst Login = (props) => {\n    const [state, setState] = useState({\n        email: '',\n        password: '',\n    })\n    const { loading, loginError } = useSelector((state) => state.AuthReducer)\n    const dispatch = useDispatch()\n    const handleInputs = (e) => {\n        setState({\n            ...state,\n            [e.target.name]: e.target.value,\n        })\n    }\n    const loginForm = async (e) => {\n        e.preventDefault()\n        dispatch(login(state))\n    }\n    useEffect(() => {\n        if (loginError) {\n            toast.error(loginError)\n        }\n    }, [loginError])\n    const onChange = (e) => {\n        console.log(`checked = ${e.target.checked}`)\n    }\n    return (\n        <>\n            <Helmet>\n                <title>Đăng nhập</title>\n                <meta name=\"description\" content=\"Đăng nhập cho admin\" />\n            </Helmet>\n            <div className=\"bg\">\n                <div className=\"container pt-15\">\n                    <Toaster\n                        position=\"top-right\"\n                        reverseOrder={false}\n                        gutter={8}\n                        toastOptions={{\n                            duration: 1000,\n                            style: {\n                                background: '#363636',\n                                color: '#fff',\n                                fontSize: 13,\n                            },\n                        }}\n                    />\n                    <div className=\"form-auth col-4\">\n                        <div className=\"form-auth__section\">\n                            <form onSubmit={loginForm}>\n                                <div className=\"group\">\n                                    <div className=\"text-avatar\">\n                                        <Link to=\"/\">ADMIN</Link>\n                                        <PandaIcon\n                                            style={{\n                                                fontSize: '25px',\n                                                marginLeft: '8px',\n                                            }}\n                                        />\n                                    </div>\n                                    <IconImage />\n                                </div>\n                                <div className=\"group\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"group__control\"\n                                        name=\"email\"\n                                        placeholder=\"Nhập email ...\"\n                                        value={state.email}\n                                        onChange={handleInputs}\n                                    />\n                                </div>\n                                <div className=\"group\">\n                                    <input\n                                        type=\"password\"\n                                        className=\"group__control\"\n                                        name=\"password\"\n                                        placeholder=\"Nhập mật khẩu ...\"\n                                        value={state.password}\n                                        onChange={handleInputs}\n                                    />\n                                </div>\n                                <div className=\"group\">\n                                    <input\n                                        type=\"submit\"\n                                        className=\"btn btn-default btn-block\"\n                                        value={loading ? '...' : 'Login'}\n                                    />\n                                </div>\n                            </form>\n                        </div>\n                        <div className=\"form-auth__about\">\n                            <div className=\"group__about d-flex\">\n                                <div className=\"group__about__remember\">\n                                    <Checkbox\n                                        style={{\n                                            fontSize: '14px',\n                                            padding: 0,\n                                        }}\n                                        onChange={onChange}\n                                    >\n                                        Ghi nhớ đăng nhập\n                                    </Checkbox>\n                                </div>\n                                <div className=\"group__about__forget\">\n                                    <Link\n                                        to=\"/auth/forget-password\"\n                                        style={{\n                                            fontSize: '14px',\n                                            padding: 0,\n                                        }}\n                                    >\n                                        Quên mật khẩu\n                                    </Link>\n                                </div>\n                            </div>\n                            <div className=\"divider\">\n                                <span className=\"login-text\">\n                                    Hoặc đăng nhập bằng\n                                </span>\n                            </div>\n                            <div className=\"group__about d-flex pt-3\">\n                                <div className=\"social__facebook\">\n                                    <Button\n                                        style={{ width: '120px' }}\n                                        shape=\"round\"\n                                        icon={<FacebookOutlined />}\n                                        size={'24px'}\n                                    >\n                                        Facebook\n                                    </Button>\n                                </div>\n                                <div className=\"social__google\">\n                                    <Button\n                                        style={{ width: '120px' }}\n                                        shape=\"round\"\n                                        icon={<GoogleOutlined />}\n                                        size={'24px'}\n                                    >\n                                        Google\n                                    </Button>\n                                </div>\n                            </div>\n                            <p className=\"login-text pt-2\">\n                                Bạn chưa có tài khoản -{' '}\n                                <Link to=\"/admin/login\">\n                                    thì kệ bạn chứ !!!{' '}\n                                </Link>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Login\n","import { Menu, Popover, Badge, Avatar } from 'antd'\nimport {\n    ProfileOutlined,\n    EditOutlined,\n    LogoutOutlined,\n} from '@ant-design/icons'\nimport { MdOutlineNotificationsActive } from 'react-icons/md'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LOGOUT } from '../../store/types/AuthTypes.js'\nimport { useHistory, Link } from 'react-router-dom'\n\nconst AdminHeader = () => {\n    const history = useHistory()\n\n    const handleMenuClick = (e) => {\n        if (e.key === 'profile') {\n            history.push('/profile')\n            // window.location.href = '/profile'\n        }\n    }\n    const handleChangePassword = (e) => {\n        if (e.key === 'change-password') {\n            history.push('/change-password')\n            // window.location.href = '/change-password'\n        }\n    }\n\n    const dispatch = useDispatch()\n    const logout = () => {\n        localStorage.removeItem('token')\n        dispatch({ type: LOGOUT })\n    }\n\n    const menu = (\n        <Menu onClick={handleMenuClick}>\n            <Menu.Item key=\"profile\" icon={<ProfileOutlined />}>\n                My profile\n            </Menu.Item>\n            <Menu.Item\n                key=\"change-password\"\n                icon={<EditOutlined />}\n                onClick={handleChangePassword}\n            >\n                Change password\n            </Menu.Item>\n            <Menu.Item key=\"logout\" icon={<LogoutOutlined />} onClick={logout}>\n                Logout\n            </Menu.Item>\n        </Menu>\n    )\n    const { user } = useSelector((state) => state.AuthReducer)\n    return (\n        <>\n            <div className=\"admin__header d-flex\">\n                <div className=\"admin__header__avatar\">\n                    {user && (\n                        <Badge style={{}} count={0}>\n                            <Popover content={menu} trigger=\"hover\">\n                                <Avatar\n                                    overlay={menu}\n                                    style={{}}\n                                    src={user.avatar}\n                                />\n                            </Popover>\n                        </Badge>\n                    )}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default AdminHeader\n","import { Link } from 'react-router-dom'\nimport { IoLogoSnapchat } from 'react-icons/io'\nimport { TiWeatherNight } from 'react-icons/ti'\nimport { FiUsers } from 'react-icons/fi'\nimport { RiFeedbackLine } from 'react-icons/ri'\nimport { BiNote, BiLogInCircle } from 'react-icons/bi'\nimport { CgMail } from 'react-icons/cg'\nimport { HiLogout } from 'react-icons/hi'\nimport {\n    AiOutlineDashboard,\n    AiOutlineComment,\n    AiOutlineSetting,\n} from 'react-icons/ai'\nimport { FcDocument } from 'react-icons/fc'\nimport { useDispatch } from 'react-redux'\nimport { LOGOUT } from '../../store/types/AuthTypes.js'\nconst AdminSidebar = () => {\n    const dispatch = useDispatch()\n    const logout = () => {\n        localStorage.removeItem('token')\n        dispatch({ type: LOGOUT })\n    }\n    return (\n        <>\n            <div className=\"sidebar col-2\">\n                <h2 className=\"sidebar__logo\">\n                    <span\n                        style={{\n                            margin: '5px',\n                            backgroundColor: '#fae814',\n                            borderRadius: '5px',\n                            height: '3rem',\n                        }}\n                    >\n                        ADMIN{' '}\n                    </span>\n                    <span\n                        style={{\n                            margin: '10px',\n                            backgroundColor: '#39c449',\n                            borderRadius: '5px',\n                            height: '3rem',\n                        }}\n                    >\n                        FUNNY{' '}\n                    </span>\n                </h2>\n                <div className=\"sidebar__manager\">\n                    <div className=\"sidebar__title\">\n                        <h3>SITE MANAGER</h3>\n                    </div>\n                    <div className=\"sidebar__item\">\n                        <li class=\"sidebar__item__link\">\n                            <Link to=\"/admin/dashboard\">\n                                <AiOutlineDashboard />\n                                <span class=\"hide-menu\">Dashboard</span>\n                            </Link>\n                        </li>\n\n                        {/* <li class=\"sidebar__item__link\">\n                            <Link to=\"/admin/users\">\n                                <FiUsers />\n                                <span class=\"hide-menu\">Users</span>\n                            </Link>\n                        </li> */}\n                        <li class=\"sidebar__item__link\">\n                            <Link to=\"/admin/posts\">\n                                <BiNote />\n                                <span class=\"hide-menu\">Posts</span>\n                            </Link>\n                        </li>\n                        {/* <li class=\"sidebar__item__link\">\n                            <Link to=\"/admin/comments\">\n                                <AiOutlineComment />\n                                <span class=\"hide-menu\">Comments</span>\n                            </Link>\n                        </li>\n                        <li class=\"sidebar__item__link\">\n                            <Link to=\"/admin/feedback\">\n                                <RiFeedbackLine />\n                                <span class=\"hide-menu\">Feedback</span>\n                            </Link>\n                        </li> */}\n                    </div>\n                </div>\n                <div className=\"sidebar__manager\">\n                    <div className=\"sidebar__title\">\n                        <h3>SITE SETTING</h3>\n                    </div>\n                    <div className=\"sidebar__item\">\n                        <li class=\"sidebar__item__link\">\n                            <Link>\n                                <FcDocument />\n                                <span class=\"hide-menu\">Document</span>\n                            </Link>\n                        </li>\n                        <li class=\"sidebar__item__link\">\n                            <Link onClick={logout}>\n                                <RiFeedbackLine />\n                                <span class=\"hide-menu\">Logout</span>\n                            </Link>\n                        </li>\n                    </div>\n                </div>\n                {/* <div class=\"sidebar__footer\">\n                    <div class=\"sidebar__footer__icon\">\n\n                        <a href=\"\" class=\"link\" data-toggle=\"tooltip\" title=\"Settings\"><AiOutlineSetting /></a>\n                    </div><div class=\"sidebar__footer__icon\">\n\n                        <a href=\"\" class=\"link\" data-toggle=\"tooltip\" title=\"Email\"><CgMail /></a>\n\n                    </div><div class=\"sidebar__footer__icon\">\n\n                        <a href='javascript:;' onclick='logout()' class=\"link\" data-toggle=\"tooltip\" title=\"Settings\"><HiLogout /></a>\n                    </div>\n                </div> */}\n            </div>\n        </>\n    )\n}\n\nexport default AdminSidebar\n","import { Helmet } from 'react-helmet'\n\nconst index = () => {\n    return (\n        <div className=\"dashboard\">\n            <Helmet>\n                <title>Dashboard</title>\n                <meta name=\"description\" content=\"Dashboard\" />\n            </Helmet>\n            Dashboard\n        </div>\n    )\n}\n\nexport default index\n","import React, { useState } from 'react'\nimport { Table } from 'antd'\n\nconst rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n        console.log(\n            `selectedRowKeys: ${selectedRowKeys}`,\n            'selectedRows: ',\n            selectedRows\n        )\n    },\n    getCheckboxProps: (record) => ({\n        disabled: record.name === 'Disabled User',\n        name: record.name,\n    }),\n}\n\nconst Index = (props) => {\n    const [selectionType, setSelectionType] = useState('checkbox')\n\n    return (\n        <Table\n            style={{ margin: '27px 40px' }}\n            rowSelection={{\n                type: selectionType,\n                ...rowSelection,\n            }}\n            columns={props.columns}\n            dataSource={props.data}\n            pagination={props.pagination}\n            onChange={props.handlePagination}\n            scroll={props.scroll}\n        />\n    )\n}\n\nexport default Index\n","import { BASE_URL } from '../../config/index'\nimport {\n    SET_USERS,\n    CREATE_USER_ERROR,\n    SET_USER,\n    USER_REQUEST,\n    EDIT_USER_ERROR,\n    DELETE_USER_ERROR,\n} from '../types/UserTypes.js'\nimport {\n    SET_LOADER,\n    CLOSE_LOADER,\n    REMOVE_ERROR,\n    REDIRECT_TRUE,\n    REDIRECT_FALSE,\n} from '../types/CommonTypes.js'\n\nimport axios from 'axios'\n\nconst token = localStorage.getItem('token')\nexport const getAllUsers = (page, page_size) => {\n    return async (dispatch, getState) => {\n        const {\n            AuthReducer: { token },\n        } = getState()\n        dispatch({ type: SET_LOADER })\n        try {\n            const config = {\n                headers: {\n                    Authorization: `${token}`,\n                },\n            }\n            const {\n                data: { data, totalDocs, currentPage },\n            } = await axios.get(\n                `${BASE_URL}/admin/users?page=${page}&page_size=${page_size}`,\n                config\n            )\n            dispatch({ type: CLOSE_LOADER })\n            dispatch({\n                type: SET_USERS,\n                payload: { data, currentPage, totalDocs },\n            })\n        } catch (error) {\n            console.log('error', error)\n            dispatch({ type: CLOSE_LOADER })\n        }\n    }\n}\nexport const createUser = (user) => {\n    return async (dispatch, getState) => {\n        const {\n            AuthReducer: { token },\n        } = getState()\n        dispatch({ type: SET_LOADER })\n        try {\n            const config = {\n                headers: {\n                    Authorization: `${token}`,\n                },\n            }\n            const res = await axios.post(\n                `${BASE_URL}/admin/users`,\n                user,\n                config\n            )\n            dispatch({ type: REDIRECT_TRUE })\n            dispatch({ type: REMOVE_ERROR })\n            dispatch({ type: CLOSE_LOADER })\n        } catch (error) {\n            console.log('error', error)\n            dispatch({ type: CLOSE_LOADER })\n            dispatch({\n                type: CREATE_USER_ERROR,\n                payload: error.response.data.message,\n            })\n            dispatch({ type: REMOVE_ERROR })\n        }\n    }\n}\nexport const getUserDetail = (id) => {\n    return async (dispatch, getState) => {\n        const {\n            AuthReducer: { token },\n        } = getState()\n        const config = {\n            headers: {\n                Authorization: `${token}`,\n            },\n        }\n        dispatch({ type: SET_LOADER })\n        try {\n            const {\n                data: { data },\n            } = await axios.get(`${BASE_URL}/admin/users/${id}`, config)\n            dispatch({ type: CLOSE_LOADER })\n            dispatch({ type: SET_USER, payload: data })\n            dispatch({ type: USER_REQUEST })\n        } catch (error) {\n            dispatch({ type: CLOSE_LOADER })\n            console.log(error.message)\n        }\n    }\n}\n\nexport const editUser = (id, user) => {\n    return async (dispatch, getState) => {\n        const {\n            AuthReducer: { token },\n        } = getState()\n        dispatch({ type: SET_LOADER })\n        try {\n            const config = {\n                headers: {\n                    Authorization: `${token}`,\n                },\n            }\n            const res = await axios.put(\n                `${BASE_URL}/admin/users/${id}`,\n                user,\n                config\n            )\n            dispatch({ type: REDIRECT_TRUE })\n            dispatch({ type: REMOVE_ERROR })\n            dispatch({ type: CLOSE_LOADER })\n        } catch (error) {\n            console.log('error', error)\n            dispatch({ type: CLOSE_LOADER })\n            dispatch({\n                type: EDIT_USER_ERROR,\n                payload: error.response.data.message,\n            })\n        }\n    }\n}\nexport const deleteUser = async (id) => {\n    try {\n        const config = {\n            headers: {\n                Authorization: `${token}`,\n            },\n        }\n        const res = await axios.delete(`${BASE_URL}/admin/users/${id}`, config)\n        if (res.status === 200) {\n            window.location.reload()\n        }\n    } catch (error) {\n        console.log('error', error)\n    }\n}\n","import React from 'react'\nimport { Button } from 'antd'\nimport { useHistory } from 'react-router-dom'\n\nconst GoBack = () => {\n    const history = useHistory()\n    return (\n        <div>\n            <Button\n                onClick={() => history.goBack()}\n                type=\"primary\"\n                style={{ background: '#39C449', borderColor: 'yellow' }}\n            >\n                Go back\n            </Button>\n        </div>\n    )\n}\n\nexport default GoBack\n","import axios from 'axios'\nimport {\n    CREATE_POST_ERROR,\n    SET_POSTS,\n    POST_DETAIL,\n    POST_REQUEST,\n    EDIT_POST_ERROR,\n} from '../types/PostTypes.js'\nimport {\n    SET_LOADER,\n    CLOSE_LOADER,\n    REMOVE_ERROR,\n    REDIRECT_TRUE,\n} from '../types/CommonTypes.js'\nimport { BASE_URL } from '../../config/index'\nimport { useHistory } from 'react-router-dom'\n\nconst token = localStorage.getItem('token')\n\nexport const getAllPosts = (page, page_size) => {\n    return async (dispatch, getState) => {\n        const {\n            AuthReducer: { token },\n        } = getState()\n        const config = {\n            headers: {\n                Authorization: `${token}`,\n            },\n        }\n        dispatch({ type: SET_LOADER })\n        try {\n            const {\n                data: { data, totalDocs, currentPage },\n            } = await axios.get(\n                `${BASE_URL}/posts?page=${page}&page_size=${page_size}`,\n                config\n            )\n            dispatch({ type: CLOSE_LOADER })\n            dispatch({\n                type: SET_POSTS,\n                payload: { data, currentPage, totalDocs },\n            })\n        } catch (error) {\n            console.log('error', error)\n            dispatch({ type: CLOSE_LOADER })\n        }\n    }\n}\n\nexport const createPost = (post) => {\n    return async (dispatch, getState) => {\n        const {\n            AuthReducer: { token },\n        } = getState()\n        const config = {\n            headers: {\n                Authorization: `${token}`,\n            },\n        }\n        dispatch({ type: SET_LOADER })\n        try {\n            const res = await axios.post(`${BASE_URL}/posts`, post, config)\n            dispatch({ type: REDIRECT_TRUE })\n            dispatch({ type: REMOVE_ERROR })\n            dispatch({ type: CLOSE_LOADER })\n        } catch (error) {\n            dispatch({ type: CLOSE_LOADER })\n            dispatch({\n                type: CREATE_POST_ERROR,\n                payload: error.response.data.message,\n            })\n            dispatch({ type: REMOVE_ERROR })\n        }\n    }\n}\nexport const getPostDetail = (id) => {\n    return async (dispatch, getState) => {\n        const {\n            AuthReducer: { token },\n        } = getState()\n        const config = {\n            headers: {\n                Authorization: `${token}`,\n            },\n        }\n        dispatch({ type: SET_LOADER })\n        try {\n            const {\n                data: { data },\n            } = await axios.get(`${BASE_URL}/posts/${id}`, config)\n            dispatch({ type: CLOSE_LOADER })\n            dispatch({ type: POST_DETAIL, payload: data })\n            dispatch({ type: POST_REQUEST })\n        } catch (error) {\n            dispatch({ type: CLOSE_LOADER })\n            console.log(error.message)\n        }\n    }\n}\n\nexport const editPost = (id, post) => {\n    return async (dispatch, getState) => {\n        const {\n            AuthReducer: { token },\n        } = getState()\n        dispatch({ type: SET_LOADER })\n        try {\n            const config = {\n                headers: {\n                    Authorization: `${token}`,\n                },\n            }\n            const res = await axios.put(`${BASE_URL}/posts/${id}`, post, config)\n            dispatch({ type: REDIRECT_TRUE })\n            dispatch({ type: REMOVE_ERROR })\n            dispatch({ type: CLOSE_LOADER })\n        } catch (error) {\n            console.log('error', error)\n            dispatch({ type: CLOSE_LOADER })\n            dispatch({\n                type: EDIT_POST_ERROR,\n                payload: error.response.data.message,\n            })\n        }\n    }\n}\nexport const deletePost = async (id) => {\n    try {\n        const config = {\n            headers: {\n                Authorization: `${token}`,\n            },\n        }\n        const res = await axios.delete(`${BASE_URL}/posts/${id}`, config)\n        if (res.status === 200) {\n            window.location.reload()\n        }\n    } catch (error) {\n        console.log('error', error)\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Form, Input, Select } from 'antd'\nimport toast, { Toaster } from 'react-hot-toast'\nimport { createUser } from '../../../store/asyncMethod/UserMethod'\nimport GoBack from '../../../components/Shared/GoBack'\nimport { Helmet } from 'react-helmet'\nconst { Option } = Select\n\nconst Create = (props) => {\n    const dispatch = useDispatch()\n    const [form] = Form.useForm()\n\n    const onFinish = (values) => {\n        dispatch(createUser(values))\n    }\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo)\n    }\n    const onReset = () => {\n        form.resetFields()\n    }\n\n    const onGenderChange = (value) => {\n        switch (value) {\n            case 'male':\n                form.setFieldsValue({ gender: 'male' })\n                return\n            case 'female':\n                form.setFieldsValue({ gender: 'female' })\n                return\n            case 'other':\n                form.setFieldsValue({ gender: 'other' })\n        }\n    }\n    const onRoleChange = (value) => {\n        switch (value) {\n            case 'user':\n                form.setFieldsValue({ role: 'user' })\n                return\n            case 'admin':\n                form.setFieldsValue({ role: 'admin' })\n\n                return\n        }\n    }\n    const { loading } = useSelector((state) => state.AuthReducer)\n    const { createUserError, redirect } = useSelector(\n        (state) => state.UserReducer\n    )\n\n    useEffect(() => {\n        if (redirect) {\n            props.history.push('/admin/users')\n        }\n        if (createUserError) {\n            toast.error(createUserError)\n        }\n    }, [createUserError, redirect])\n\n    return (\n        <>\n            <div>\n                <GoBack />\n                <Helmet>\n                    <title>Create new user</title>\n                    <meta name=\"description\" content=\"Create new user\" />\n                </Helmet>\n                <div>\n                    <Toaster\n                        position=\"top-right\"\n                        reverseOrder={false}\n                        gutter={8}\n                        toastOptions={{\n                            duration: 1000,\n                            style: {\n                                background: '#363636',\n                                color: '#fff',\n                                fontSize: 13,\n                            },\n                        }}\n                    />\n                    <div className=\"container\">\n                        <div className=\"form__data\">\n                            <h3 className=\"form__data__text\">\n                                Create new user\n                            </h3>\n                            <Form\n                                form={form}\n                                name=\"basic\"\n                                labelCol={{\n                                    span: 4,\n                                }}\n                                wrapperCol={{\n                                    span: 16,\n                                }}\n                                initialValues={{\n                                    remember: true,\n                                }}\n                                onFinish={onFinish}\n                                onFinishFailed={onFinishFailed}\n                                autoComplete=\"off\"\n                            >\n                                <Form.Item\n                                    label=\"Email\"\n                                    name=\"email\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            type: 'email',\n                                            message:\n                                                'The input is not valid E-mail!',\n                                        },\n                                    ]}\n                                >\n                                    <Input />\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"Username\"\n                                    name=\"name\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message:\n                                                'Please input your username!',\n                                        },\n                                    ]}\n                                >\n                                    <Input />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Password\"\n                                    name=\"password\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message:\n                                                'Please input your password!',\n                                        },\n                                    ]}\n                                >\n                                    <Input.Password />\n                                </Form.Item>\n                                <Form.Item\n                                    name=\"gender\"\n                                    label=\"Gender\"\n                                    rules={[{ required: true }]}\n                                >\n                                    <Select\n                                        placeholder=\"Select a gender and change \"\n                                        onChange={onGenderChange}\n                                        allowClear\n                                    >\n                                        <Option value=\"male\">male</Option>\n                                        <Option value=\"female\">female</Option>\n                                        <Option value=\"other\">other</Option>\n                                    </Select>\n                                </Form.Item>\n                                <Form.Item\n                                    name=\"role\"\n                                    label=\"Role\"\n                                    rules={[{ required: true }]}\n                                >\n                                    <Select\n                                        placeholder=\"Select a role and change \"\n                                        onChange={onRoleChange}\n                                        allowClear\n                                    >\n                                        <Option value=\"user\">user</Option>\n                                        <Option value=\"admin\">admin</Option>\n                                    </Select>\n                                </Form.Item>\n                                <Form.Item label=\"Address\" name=\"address\">\n                                    <Input />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Phone\"\n                                    name=\"phone\"\n                                    rules={[]}\n                                >\n                                    <Input />\n                                </Form.Item>\n                                <Form.Item\n                                    wrapperCol={{\n                                        offset: 4,\n                                        span: 16,\n                                    }}\n                                >\n                                    <Button type=\"button\" onClick={onReset}>\n                                        Cancel\n                                    </Button>\n                                    <Button\n                                        type=\"primary\"\n                                        htmlType=\"submit\"\n                                        style={{ marginLeft: 15 }}\n                                    >\n                                        Create\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Create\n","import React, { useState, useEffect } from 'react'\nimport GoBack from '../../../components/Shared/GoBack'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Form, Input, Select } from 'antd'\nimport toast, { Toaster } from 'react-hot-toast'\nimport { getUserDetail, editUser } from '../../../store/asyncMethod/UserMethod'\nimport { USER_RESET } from '../../../store/types/UserTypes.js'\nimport { REDIRECT_FALSE } from '../../../store/types/CommonTypes.js'\nimport { Helmet } from 'react-helmet'\nconst { Option } = Select\n\nconst Edit = (props) => {\n    const { id } = props.match.params\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [form] = Form.useForm()\n\n    const { loading } = useSelector((state) => state.AuthReducer)\n    const { user, userStatus, editUserError, redirect } = useSelector(\n        (state) => state.UserReducer\n    )\n\n    useEffect(() => {\n        if (userStatus) {\n            form.setFieldsValue({\n                email: user.email,\n                gender: user.gender,\n                name: user.name,\n                address: user.address,\n                role: user.role,\n                phone: user.phone,\n            })\n            dispatch({ type: USER_RESET })\n        } else {\n            dispatch(getUserDetail(id))\n        }\n    }, [user])\n\n    useEffect(() => {\n        if (redirect) {\n            dispatch({ type: REDIRECT_FALSE })\n            props.history.push('/admin/users')\n        }\n    }, [redirect])\n\n    useEffect(() => {\n        if (editUserError) {\n            toast.error(editUserError)\n        }\n    }, [editUserError])\n\n    const onFinish = (values) => {\n        console.log('value', values)\n        dispatch(editUser(id, values))\n    }\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo)\n    }\n    const onReset = () => {\n        form.resetFields()\n    }\n\n    const onGenderChange = (value) => {\n        switch (value) {\n            case 'male':\n                form.setFieldsValue({ gender: 'male' })\n                return\n            case 'female':\n                form.setFieldsValue({ gender: 'female' })\n                return\n            case 'other':\n                form.setFieldsValue({ gender: 'other' })\n        }\n    }\n    const onRoleChange = (value) => {\n        switch (value) {\n            case 'user':\n                form.setFieldsValue({ role: 'user' })\n                return\n            case 'admin':\n                form.setFieldsValue({ role: 'admin' })\n\n                return\n        }\n    }\n\n    return (\n        <>\n            <div>\n                <GoBack />\n                <Helmet>\n                    <title>Edit user</title>\n                    <meta name=\"description\" content=\"Edit user\" />\n                </Helmet>\n                <Toaster\n                    position=\"top-right\"\n                    reverseOrder={false}\n                    gutter={8}\n                    toastOptions={{\n                        duration: 1000,\n                        style: {\n                            background: '#363636',\n                            color: '#fff',\n                            fontSize: 13,\n                        },\n                    }}\n                />\n                <div className=\"container\">\n                    <div className=\"form__data\">\n                        <h3 className=\"form__data__text\">Edit user</h3>\n                        <Form\n                            form={form}\n                            name=\"basic\"\n                            labelCol={{\n                                span: 4,\n                            }}\n                            wrapperCol={{\n                                span: 16,\n                            }}\n                            initialValues={{\n                                remember: true,\n                            }}\n                            onFinish={onFinish}\n                            onFinishFailed={onFinishFailed}\n                            autoComplete=\"off\"\n                        >\n                            <Form.Item\n                                label=\"Email\"\n                                name=\"email\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        type: 'email',\n                                        message:\n                                            'The input is not valid E-mail!',\n                                    },\n                                ]}\n                            >\n                                <Input />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"Username\"\n                                name=\"name\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your username!',\n                                    },\n                                ]}\n                            >\n                                <Input />\n                            </Form.Item>\n                            <Form.Item\n                                name=\"gender\"\n                                label=\"Gender\"\n                                rules={[{ required: true }]}\n                            >\n                                <Select\n                                    placeholder=\"Select a gender and change \"\n                                    onChange={onGenderChange}\n                                    allowClear\n                                >\n                                    <Option value=\"male\">male</Option>\n                                    <Option value=\"female\">female</Option>\n                                    <Option value=\"other\">other</Option>\n                                </Select>\n                            </Form.Item>\n                            <Form.Item\n                                name=\"role\"\n                                label=\"Role\"\n                                rules={[{ required: true }]}\n                            >\n                                <Select\n                                    placeholder=\"Select a role and change \"\n                                    onChange={onRoleChange}\n                                    allowClear\n                                >\n                                    <Option value=\"user\">user</Option>\n                                    <Option value=\"admin\">admin</Option>\n                                </Select>\n                            </Form.Item>\n                            <Form.Item label=\"Address\" name=\"address\">\n                                <Input />\n                            </Form.Item>\n                            <Form.Item\n                                label=\"Phone\"\n                                name=\"phone\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your phone!',\n                                    },\n                                ]}\n                            >\n                                <Input />\n                            </Form.Item>\n                            <Form.Item\n                                wrapperCol={{\n                                    offset: 4,\n                                    span: 16,\n                                }}\n                            >\n                                <Button type=\"button\" onClick={onReset}>\n                                    Cancel\n                                </Button>\n                                <Button\n                                    type=\"primary\"\n                                    htmlType=\"submit\"\n                                    style={{ marginLeft: 15 }}\n                                >\n                                    Edit\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Edit\n","import React, { useEffect } from 'react'\nimport queryString from 'query-string'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Table from '../../../components/Table/index'\nimport { GrEdit } from 'react-icons/gr'\nimport { RiDeleteBinLine } from 'react-icons/ri'\nimport { Space, Button, Tag, Popconfirm } from 'antd'\nimport { Helmet } from 'react-helmet'\nimport { useHistory, Link } from 'react-router-dom'\nimport { deletePost, getAllPosts } from '../../../store/asyncMethod/PostMethod'\nimport { htmlToText } from 'html-to-text'\nconst colorStatus = [\n    {\n        status: 'approved',\n        color: 'green',\n    },\n    {\n        status: 'pending',\n        color: 'blue',\n    },\n    {\n        status: 'fail',\n        color: 'volcano',\n    },\n]\nconst columns = [\n    {\n        title: 'ID',\n        dataIndex: 'id',\n        width: 20,\n    },\n    {\n        title: 'Tiêu đề',\n        dataIndex: 'title',\n        width: 150,\n    },\n    {\n        title: 'Nội dung',\n        dataIndex: 'content',\n        width: 700,\n        height: 300,\n        render: (text, record) => <>{htmlToText(text.slice(0, 600))}</>,\n    },\n    {\n        title: 'Chi tiết bài viết',\n        width: 100,\n        render: (text, record) => (\n            <>\n                <Button\n                    type=\"primary\"\n                    shape=\"round\"\n                    onClick={() => console.log(text)}\n                >\n                    {'Xem thêm'}\n                </Button>\n            </>\n        ),\n    },\n    {\n        title: 'Hình ảnh',\n        dataIndex: 'image',\n        // width: 100,\n        render: (text, record) => (\n            <img\n                width=\"150\"\n                height=\"150\"\n                style={{\n                    borderRadius: '8px',\n                    display: 'block',\n                    marginLeft: 'auto',\n                    marginRight: 'auto',\n                }}\n                src={`${record.image}`}\n            />\n        ),\n    },\n    {\n        title: 'Hành động',\n        key: 'action',\n        render: (text, record) => (\n            <Space size=\"middle\">\n                <Link to={`/admin/edit-post/${record.slug}`}>\n                    <GrEdit />\n                </Link>\n                <Popconfirm\n                    title=\"Bạn có chắc chắn muốn xoá?\"\n                    onConfirm={() => handleDelete(record.id)}\n                >\n                    <Link>\n                        <RiDeleteBinLine />\n                    </Link>\n                </Popconfirm>\n            </Space>\n        ),\n    },\n]\n\nconst handleDelete = async (id) => {\n    await deletePost(id)\n}\n\nconst Index = () => {\n    const { loading } = useSelector((state) => state.AuthReducer)\n    const { posts, totalDocs } = useSelector((state) => state.PostReducer)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    // eslint-disable-next-line no-restricted-globals\n    let { page = 1, page_size = 5 } = queryString.parse(location.search)\n\n    const pagination = {\n        position: ['none', 'bottomCenter'],\n        total: totalDocs,\n        pageSize: parseInt(page_size) ?? 5,\n        current: parseInt(page) ?? 1,\n        pageSizeOptions: ['5', '10', '20', '30', '50'],\n        showSizeChanger: true,\n        showTotal: (total) => `Total: ${totalDocs} items `,\n    }\n    const handlePagination = ({ current, pageSize }) => {\n        history.push(`/admin/posts?page=${current}&page_size=${pageSize}`)\n    }\n    useEffect(() => {\n        dispatch(getAllPosts(page, page_size))\n    }, [page, page_size])\n\n    return (\n        <div className=\"post\">\n            <Helmet>\n                <title>Xem toàn bộ bài viết</title>\n                <meta name=\"description\" content=\"Get all post\" />\n            </Helmet>\n            <Button\n                onClick={() => history.push('/admin/create-post')}\n                type=\"primary\"\n                style={{ background: '#39C449', borderColor: 'yellow' }}\n            >\n                Tạo mới bài viết\n            </Button>\n            <Table\n                columns={columns}\n                data={posts}\n                pagination={pagination}\n                handlePagination={handlePagination}\n                scroll={{ x: 'max-content' }}\n            />\n        </div>\n    )\n}\n\nexport default Index\n","\nimport React from 'react';\nimport ReactQuill, { Quill } from 'react-quill';\nimport \"react-quill/dist/quill.snow.css\";\nimport 'react-quill/dist/quill.core.css';\nimport 'react-quill/dist/quill.bubble.css';\nimport { BASE_URL } from '../../../config'\nimport axios from 'axios';\nconst __ISMSIE__ = navigator.userAgent.match(/Trident/i) ? true : false;\nconst Delta = Quill.import('delta')\n//Quill.register('modules/clipboard', PlainClipboard, true);\n\nconst QuillClipboard = Quill.import('modules/clipboard');\n\nclass Clipboard extends QuillClipboard {\n\n    getMetaTagElements = (stringContent) => {\n        const el = document.createElement('div');\n        el.innerHTML = stringContent;\n        return el.getElementsByTagName('meta');\n    };\n\n    // async onPaste(e) {\n    //     let clipboardData = e.clipboardData || window.clipboardData;\n    //     let pastedData = await clipboardData.getData('Text');\n\n    //     const urlMatches = pastedData.match(/\\b(http|https)?:\\/\\/\\S+/gi) || [];\n    //     if (urlMatches.length > 0) {\n    //         e.preventDefault();\n    //         urlMatches.forEach(link => {\n    //             axios.get(link)\n    //                 .then(payload => {\n    //                     // let title, image, url, description;\n    //                     let title, image, url;\n    //                     for (let node of this.getMetaTagElements(payload)) {\n    //                         if (node.getAttribute(\"property\") === \"og:title\") {\n    //                             title = node.getAttribute(\"content\");\n    //                         }\n    //                         if (node.getAttribute(\"property\") === \"og:image\") {\n    //                             image = node.getAttribute(\"content\");\n    //                         }\n    //                         if (node.getAttribute(\"property\") === \"og:url\") {\n    //                             url = node.getAttribute(\"content\");\n    //                         }\n    //                         // if (node.getAttribute(\"property\") === \"og:description\") {\n    //                         //     description = node.getAttribute(\"content\");\n    //                         // }\n    //                     }\n\n    //                     const rendered = `<a href=${url} target=\"_blank\"><div><img src=${image} alt=${title} width=\"20%\"/><span>${title}</span></div></a>`;\n\n    //                     let range = this.quill.getSelection();\n    //                     let position = range ? range.index : 0;\n    //                     this.quill.pasteHTML(position, rendered, 'silent');\n    //                     this.quill.setSelection(position + rendered.length);\n    //                 })\n    //                 .catch(error => console.error(error));\n    //         });\n\n    //     } else {\n    //         //console.log('when to use this') 보통 다른 곳에서  paste 한다음에  copy하면 이쪽 걸로 한다.\n    //         super.onPaste(e);\n    //     }\n    // }\n    async onPaste(e) {\n        e.preventDefault()\n        const range = this.quill.getSelection()\n        const text = e.clipboardData.getData('text/plain')\n        const delta = new Delta()\n            .retain(range.index)\n            .delete(range.length)\n            .insert(text)\n        const index = text.length + range.index\n        const length = 0\n        this.quill.updateContents(delta, 'silent')\n        this.quill.setSelection(index, length, 'silent')\n        this.quill.scrollIntoView()\n    }\n\n}\nQuill.register('modules/clipboard', Clipboard, true);\n\nconst BlockEmbed = Quill.import('blots/block/embed');\n\nclass ImageBlot extends BlockEmbed {\n\n    static create(value) {\n        const imgTag = super.create();\n        imgTag.setAttribute('src', value.src);\n        imgTag.setAttribute('alt', value.alt);\n        imgTag.setAttribute('width', '100%');\n        return imgTag;\n    }\n\n    static value(node) {\n        return { src: node.getAttribute('src'), alt: node.getAttribute('alt') };\n    }\n\n}\n\nImageBlot.blotName = 'image';\nImageBlot.tagName = 'img';\nQuill.register(ImageBlot);\n\nclass VideoBlot extends BlockEmbed {\n\n    static create(value) {\n        if (value && value.src) {\n            const videoTag = super.create();\n            videoTag.setAttribute('src', value.src);\n            videoTag.setAttribute('title', value.title);\n            videoTag.setAttribute('width', '100%');\n            videoTag.setAttribute('controls', '');\n\n            return videoTag;\n        } else {\n            const iframeTag = document.createElement('iframe');\n            iframeTag.setAttribute('src', value);\n            iframeTag.setAttribute('frameborder', '0');\n            iframeTag.setAttribute('allowfullscreen', true);\n            iframeTag.setAttribute('width', '100%');\n            return iframeTag;\n        }\n    }\n\n    static value(node) {\n        if (node.getAttribute('title')) {\n            return { src: node.getAttribute('src'), alt: node.getAttribute('title') };\n        } else {\n            return node.getAttribute('src');\n        }\n        // return { src: node.getAttribute('src'), alt: node.getAttribute('title') };\n    }\n\n}\n\nVideoBlot.blotName = 'video';\nVideoBlot.tagName = 'video';\nQuill.register(VideoBlot);\n\nclass FileBlot extends BlockEmbed {\n\n    static create(value) {\n        const prefixTag = document.createElement('span');\n        prefixTag.innerText = \"첨부파일 - \";\n\n        const bTag = document.createElement('b');\n        //위에 첨부파일 글자 옆에  파일 이름이 b 태그를 사용해서 나온다.\n        bTag.innerText = value;\n\n        const linkTag = document.createElement('a');\n        linkTag.setAttribute('href', value);\n        linkTag.setAttribute(\"target\", \"_blank\");\n        linkTag.setAttribute(\"className\", \"file-link-inner-post\");\n        linkTag.appendChild(bTag);\n        //linkTag 이런식으로 나온다 <a href=\"btn_editPic@3x.png\" target=\"_blank\" classname=\"file-link-inner-post\"><b>btn_editPic@3x.png</b></a>\n\n        const node = super.create();\n        node.appendChild(prefixTag);\n        node.appendChild(linkTag);\n\n        return node;\n    }\n\n    static value(node) {\n        const linkTag = node.querySelector('a');\n        return linkTag.getAttribute('href');\n    }\n\n}\n\nFileBlot.blotName = 'file';\nFileBlot.tagName = 'p';\nFileBlot.className = 'file-inner-post';\nQuill.register(FileBlot);\n\nclass PollBlot extends BlockEmbed {\n\n    static create(value) {\n        const prefixTag = document.createElement('span');\n        prefixTag.innerText = \"투표 - \";\n\n        const bTag = document.createElement('b');\n        bTag.innerText = value.title;\n\n        const node = super.create();\n        node.setAttribute('id', value.id);\n        node.appendChild(prefixTag);\n        node.appendChild(bTag);\n\n        return node;\n    }\n\n    static value(node) {\n        const id = node.getAttribute('id');\n        const bTag = node.querySelector('b');\n        const title = bTag.innerText;\n        return { id, title };\n    }\n\n}\n\nPollBlot.blotName = 'poll';\nPollBlot.tagName = 'p';\nPollBlot.className = 'poll-inner-post';\nQuill.register(PollBlot);\n\nclass QuillEditor extends React.Component {\n\n    bandId;\n    placeholder;\n    onEditorChange;\n    onFilesChange;\n    onPollsChange;\n    _isMounted;\n\n    value;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // editorHtml: __ISMSIE__ ? \"<p>&nbsp;</p>\" : \"\",\n            editorHtml: props.value || \"\",\n            files: [],\n        };\n\n        this.reactQuillRef = null;\n\n        this.inputOpenImageRef = React.createRef();\n        this.inputOpenVideoRef = React.createRef();\n        this.inputOpenFileRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    handleChange = (html) => {\n\n        this.setState({\n            editorHtml: html\n        }, () => {\n            this.props.onEditorChange(this.state.editorHtml);\n        });\n    };\n\n    imageHandler = () => {\n        this.inputOpenImageRef.current.click();\n    };\n\n    videoHandler = () => {\n        this.inputOpenVideoRef.current.click();\n    };\n\n    fileHandler = () => {\n        this.inputOpenFileRef.current.click();\n    };\n\n\n    insertImage = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (e.currentTarget && e.currentTarget.files && e.currentTarget.files.length > 0) {\n            const file = e.currentTarget.files[0];\n\n            let formData = new FormData();\n            const config = {\n                header: { 'content-type': 'multipart/form-data' }\n            }\n            formData.append(\"file\", file);\n\n            axios.post(`${BASE_URL}/common/upload-file`, formData, config)\n                .then(response => {\n                    if (response.status === 200) {\n\n                        const quill = this.reactQuillRef.getEditor();\n                        quill.focus();\n\n                        let range = quill.getSelection();\n                        let position = range ? range.index : 0;\n\n                        quill.insertEmbed(position, \"image\", { src: response.data.data.url });\n                        quill.setSelection(position + 1);\n\n                        if (this._isMounted) {\n                            this.setState({\n                                files: [...this.state.files, file]\n                            }, () => { this.props.onFilesChange(this.state.files) });\n                        }\n                    } else {\n                        return alert('failed to upload file')\n                    }\n                })\n        }\n    };\n\n    insertVideo = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (e.currentTarget && e.currentTarget.files && e.currentTarget.files.length > 0) {\n            const file = e.currentTarget.files[0];\n\n            let formData = new FormData();\n            const config = {\n                header: { 'content-type': 'multipart/form-data' }\n            }\n            formData.append(\"file\", file);\n\n            axios.post(`${BASE_URL}/common/upload-file`, formData, config)\n                .then(response => {\n                    if (response.data.success) {\n\n                        const quill = this.reactQuillRef.getEditor();\n                        quill.focus();\n\n                        let range = quill.getSelection();\n                        let position = range ? range.index : 0;\n                        quill.insertEmbed(position, \"video\", { src: response.data.data.url });\n                        quill.setSelection(position + 1);\n\n                        if (this._isMounted) {\n                            this.setState({\n                                files: [...this.state.files, file]\n                            }, () => { this.props.onFilesChange(this.state.files) });\n                        }\n                    } else {\n                        return alert('failed to upload file')\n                    }\n                })\n        }\n    }\n\n    insertFile = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (e.currentTarget && e.currentTarget.files && e.currentTarget.files.length > 0) {\n            const file = e.currentTarget.files[0];\n            console.log(file);\n\n            let formData = new FormData();\n            const config = {\n                header: { 'content-type': 'multipart/form-data' }\n            }\n            formData.append(\"file\", file);\n\n            axios.post(`${BASE_URL}/common/upload-file`, formData, config)\n                .then(response => {\n                    if (response.data.success) {\n\n                        const quill = this.reactQuillRef.getEditor();\n                        quill.focus();\n\n                        let range = quill.getSelection();\n                        let position = range ? range.index : 0;\n\n                        quill.insertEmbed(position, \"file\", response.data.fileName);\n                        quill.setSelection(position + 1);\n\n                        if (this._isMounted) {\n                            this.setState({\n                                files: [...this.state.files, file]\n                            }, () => { this.props.onFilesChange(this.state.files) });\n                        }\n                    };\n                })\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.value !== prevProps.value) {\n            this.setState({ editorHtml: this.props.value })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div id=\"toolbar\">\n                    {/* <select className=\"ql-header\" defaultValue={\"\"} onChange={e => e.persist()}>\n                        <option value=\"1\" />\n                        <option value=\"2\" />\n                        <option value=\"\" />\n                    </select> */}\n                    <button className=\"ql-header\" value=\"1\"></button>\n                    <button className=\"ql-header\" value=\"2\"></button>\n\n                    <span className=\"ql-header\">\n                        <select className=\"ql-font\"></select>\n                        <select className=\"ql-size\"></select>\n                    </span>\n                    <span className=\"ql-header\">\n                        <select className=\"ql-color\"></select>\n                        <select className=\"ql-background\"></select>\n                    </span>\n\n                    <span className=\"ql-header\">\n                        <button className=\"ql-bold\" />\n                        <button className=\"ql-italic\" />\n                        <button className=\"ql-underline\" />\n                        <button className=\"ql-strike\" />\n                    </span>\n\n                    <span class=\"ql-header\">\n                        <button className=\"ql-insertImage ql-image\">\n                        </button>\n                        <button className=\"ql-insertVideo ql-video\">\n                            V\n                        </button>\n                        <button className=\"ql-insertFile ql-file\">\n                            F\n                        </button>\n                    </span>\n                    <span class=\"ql-header\">\n                        <button className=\"ql-script\" value=\"sub\"></button>\n                        <button className=\"ql-script\" value=\"super\"></button>\n                    </span>\n                    <span className=\"ql-header\">\n                        <button className=\"ql-direction\" value=\"rtl\"></button>\n                        <select className=\"ql-align\"></select>\n                    </span>\n\n                    <span class=\"ql-header\">\n                        <button className=\"ql-link\" />\n                        <button className=\"ql-code-block\" />\n                        <button className=\"ql-blockquote\" />\n                        <button className=\"ql-clean\" />\n                    </span>\n\n                    <span class=\"ql-header\">\n                        <button className=\"ql-list\" value=\"ordered\" type=\"button\"></button>\n                        <button className=\"ql-list\" value=\"bullet\" type=\"button\"></button>\n                        <button className=\"ql-indent\" value=\"-1\" type=\"button\"></button>\n                        <button className=\"ql-indent\" value=\"+1\" type=\"button\"></button>\n                    </span>\n\n\n\n                </div>\n                <ReactQuill\n                    ref={(el) => { this.reactQuillRef = el }}\n                    theme={'snow'}\n                    onChange={this.handleChange}\n                    modules={this.modules}\n                    formats={this.formats}\n                    value={this.state.editorHtml}\n                    placeholder={this.props.placeholder}\n                />\n                <input type=\"file\" accept=\"image/*\" ref={this.inputOpenImageRef} style={{ display: \"none\" }} onChange={this.insertImage} />\n                <input type=\"file\" accept=\"video/*\" ref={this.inputOpenVideoRef} style={{ display: \"none\" }} onChange={this.insertVideo} />\n                <input type=\"file\" accept=\"*\" ref={this.inputOpenFileRef} style={{ display: \"none\" }} onChange={this.insertFile} />\n            </div>\n        )\n    }\n\n    modules = {\n        //syntax: true,\n        toolbar: {\n            container: \"#toolbar\",\n            handlers: {\n                insertImage: this.imageHandler,\n                insertVideo: this.videoHandler,\n                insertFile: this.fileHandler,\n                insertPoll: this.pollHandler,\n            }\n        },\n\n    };\n\n    formats = [\n        'header', 'script', 'direction', 'align',\n        'bold', 'italic', 'underline', 'strike', 'list', 'indent', 'color', 'background', 'font', 'size',\n        'image', 'video', 'file', 'link', \"code-block\", \"video\", \"blockquote\", \"clean\"\n    ];\n}\n\nexport default QuillEditor;\n","import { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport GoBack from '../../../components/Shared/GoBack'\nimport { Button, Form, Input, Select, Upload, Tag } from 'antd'\nimport toast, { Toaster } from 'react-hot-toast'\nimport { UploadOutlined, PlusOutlined } from '@ant-design/icons'\nimport { getAllCategories } from '../../../store/asyncMethod/CategoryMethod'\nimport { createPost } from '../../../store/asyncMethod/PostMethod'\nimport { BASE_URL } from '../../../config'\nimport QuillEditor from './QuillEditor'\nimport { REDIRECT_FALSE } from '../../../store/types/CommonTypes.js'\nimport slugNpm from 'slug'\nimport axios from 'axios'\n\nimport { Helmet } from 'react-helmet'\n\nconst Create = (props) => {\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [form] = Form.useForm()\n\n    const { user, loading } = useSelector((state) => state.AuthReducer)\n    const { createPostError, redirect } = useSelector(\n        (state) => state.PostReducer\n    )\n\n    const [files, setFiles] = useState([])\n\n    useEffect(() => {\n        dispatch(getAllCategories(1, 20))\n    }, [])\n\n    useEffect(() => {}, [])\n\n    useEffect(() => {\n        if (redirect) {\n            dispatch({ type: REDIRECT_FALSE })\n            props.history.push('/admin/posts')\n        }\n    }, [redirect])\n\n    useEffect(() => {\n        if (createPostError) {\n            toast.error(createPostError)\n        }\n    }, [createPostError])\n\n    const beforeUpload = (file) => {\n        const isJPG = file.type === 'image/jpeg/png'\n        if (!isJPG) {\n            alert('You can only upload JPG file!')\n        }\n        return false\n    }\n\n    const uploadImagePost = (info) => {\n        return `${BASE_URL}/common/upload-file`\n    }\n\n    const handleTitleChange = (e) => {\n        const slug = slugNpm(e.target.value)\n\n        form.setFieldsValue({ slug })\n    }\n\n    const onEditorChange = (value) => {\n        form.setFieldsValue({ content: value })\n    }\n\n    const onFilesChange = (files) => {\n        setFiles(files)\n    }\n    const onFinish = (values) => {\n        console.log(\n            '🚀 ~ file: create.jsx ~ line 137 ~ onFinish ~ values',\n            values\n        )\n        values.image = values.image.file.response.data.url\n\n        dispatch(createPost(values))\n    }\n\n    const onFinishFailed = (errorInfo) => {\n        console.log(errorInfo)\n    }\n    const onReset = () => {\n        form.resetFields()\n    }\n\n    return (\n        <>\n            <div className=\"post\">\n                <GoBack />\n                <Helmet>\n                    <title>Tạo mới bài viết</title>\n                    <meta name=\"description\" content=\"Tạo mới bài viết\" />\n                </Helmet>\n                <div className=\"\">\n                    <Toaster\n                        position=\"top-right\"\n                        reverseOrder={false}\n                        gutter={8}\n                        toastOptions={{\n                            duration: 1000,\n                            style: {\n                                background: '#363636',\n                                color: '#fff',\n                                fontSize: 13,\n                            },\n                        }}\n                    />\n                    <div className=\"container\">\n                        <div className=\"form__data\">\n                            <h3 className=\"form__data__text\">\n                                Tạo mới bài viết\n                            </h3>\n                            <Form\n                                form={form}\n                                name=\"basic\"\n                                labelCol={{\n                                    span: 2,\n                                }}\n                                wrapperCol={{\n                                    span: 20,\n                                }}\n                                initialValues={{\n                                    remember: true,\n                                }}\n                                onFinish={onFinish}\n                                onFinishFailed={onFinishFailed}\n                                autoComplete=\"off\"\n                            >\n                                <Form.Item\n                                    label=\"Tiêu đề\"\n                                    name=\"title\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Vui lòng nhập tiêu đề !',\n                                        },\n                                    ]}\n                                >\n                                    <Input onChange={handleTitleChange} />\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"Hình ảnh\"\n                                    name=\"image\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Vui lòng nhập hình ảnh',\n                                        },\n                                    ]}\n                                >\n                                    <Upload\n                                        action={uploadImagePost}\n                                        maxCount={1}\n                                        beforeUpload={(file) => {\n                                            const isJPG =\n                                                file.type === 'image/jpeg' ||\n                                                file.type === 'image/png'\n                                            if (!isJPG) {\n                                                alert(\n                                                    'Bạn chỉ có thể nhập ảnh JPG hoặc PNG !'\n                                                )\n                                                return false\n                                            } else {\n                                                return true\n                                            }\n                                        }}\n                                    >\n                                        <Button icon={<UploadOutlined />}>\n                                            Click to upload\n                                        </Button>\n                                    </Upload>\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Slug\"\n                                    name=\"slug\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Vui lòng nhập slug!',\n                                        },\n                                    ]}\n                                >\n                                    <Input />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Nội dung\"\n                                    name=\"content\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Vui lòng nhập nội dung!',\n                                        },\n                                    ]}\n                                >\n                                    <QuillEditor\n                                        onEditorChange={onEditorChange}\n                                        onFilesChange={onFilesChange}\n                                    />\n                                </Form.Item>\n                                <Form.Item\n                                    wrapperCol={{\n                                        offset: 2,\n                                        span: 20,\n                                    }}\n                                >\n                                    <Button type=\"button\" onClick={onReset}>\n                                        Huỷ bỏ\n                                    </Button>\n                                    <Button\n                                        type=\"primary\"\n                                        htmlType=\"submit\"\n                                        style={{ marginLeft: 15 }}\n                                    >\n                                        Tạo mới\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Create\n","import axios from 'axios'\nimport { BASE_URL } from '../../config'\nimport { SET_LOADER, CLOSE_LOADER } from '../types/CommonTypes.js'\nimport { SET_CATEGORIES } from '../types/CategoryTypes'\n\nexport const getAllCategories = (page, page_size) => {\n    return async (dispatch, getState) => {\n        const {\n            AuthReducer: { token },\n        } = getState()\n        const config = {\n            headers: {\n                Authorization: `${token}`,\n            },\n        }\n        dispatch({ type: SET_LOADER })\n        try {\n            const {\n                data: { data, currentPage, totalDocs },\n            } = await axios.get(\n                `${BASE_URL}/post?page=${page}&page_size=${page_size}`,\n                config\n            )\n            dispatch({ type: CLOSE_LOADER })\n            dispatch({\n                type: SET_CATEGORIES,\n                payload: { currentPage, data, totalDocs },\n            })\n        } catch (error) {\n            console.log('error', error)\n            dispatch({ type: CLOSE_LOADER })\n        }\n    }\n}\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Form, Input, Select, Upload, Tag, Image } from 'antd'\nimport toast, { Toaster } from 'react-hot-toast'\nimport _ from 'lodash'\nimport GoBack from '../../../components/Shared/GoBack'\nimport { getPostDetail, editPost } from '../../../store/asyncMethod/PostMethod'\nimport { UploadOutlined, PlusOutlined } from '@ant-design/icons'\nimport { POST_RESET } from '../../../store/types/PostTypes.js'\nimport QuillEditor from './QuillEditor'\nimport { Helmet } from 'react-helmet'\nimport { REDIRECT_FALSE } from '../../../store/types/CommonTypes.js'\nimport { BASE_URL } from '../../../config'\n\nconst Edit = (props) => {\n    const { id } = props.match.params\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [form] = Form.useForm()\n    const { post, postStatus, editPostError, redirect } = useSelector(\n        (state) => state.PostReducer\n    )\n    const [urlImage, setUrlImage] = useState(post?.image)\n\n    const uploadImagePost = (info) => {\n        return `${BASE_URL}/common/upload-file`\n    }\n    useEffect(() => {\n        if (postStatus) {\n            form.setFieldsValue({\n                title: post.title,\n                description: post.description,\n                slug: post.slug,\n                image: post.image,\n                content: post.content,\n            })\n            setUrlImage(post.image)\n            dispatch({ type: POST_RESET })\n        } else {\n            dispatch(getPostDetail(id))\n        }\n    }, [post])\n\n    useEffect(() => {\n        if (redirect) {\n            dispatch({ type: REDIRECT_FALSE })\n            props.history.push('/admin/posts')\n        }\n    }, [redirect])\n\n    useEffect(() => {\n        if (editPostError) {\n            toast.error(editPostError)\n        }\n    }, [editPostError])\n\n    const handleUpload = (info) => {\n        if (info.file.status === 'done') {\n            setUrlImage(info.file.response.data.url)\n            // form.setFieldsValue('image', info.file.response.data.url)\n            form.setFieldsValue('image', urlImage)\n        } else if (info.file.status === 'error') {\n            toast.error(`${info.file.name} file upload failed.`)\n        }\n    }\n\n    const onFinish = (values) => {\n        values.image = urlImage\n        dispatch(editPost(id, values))\n    }\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo)\n    }\n    const onReset = () => {\n        form.resetFields()\n    }\n\n    const onEditorChange = (value) => {\n        // console.log(value)\n        form.setFieldsValue({ content: value })\n    }\n\n    const onFilesChange = (files) => {\n        // eslint-disable-next-line no-undef\n        setFiles(files)\n    }\n\n    return (\n        <div>\n            <GoBack />\n            <Helmet>\n                <title>Edit post</title>\n                <meta name=\"description\" content=\"Edit post\" />\n            </Helmet>\n            <div>\n                <Toaster\n                    position=\"top-right\"\n                    reverseOrder={false}\n                    gutter={8}\n                    toastOptions={{\n                        duration: 1000,\n                        style: {\n                            background: '#363636',\n                            color: '#fff',\n                            fontSize: 13,\n                        },\n                    }}\n                />\n                <div className=\"container\">\n                    <div className=\"form__data\">\n                        <h3 className=\"form__data__text\">Edit post</h3>\n                        <Form\n                            form={form}\n                            name=\"basic\"\n                            className=\"formCreatePost\"\n                            labelCol={{\n                                span: 2,\n                            }}\n                            wrapperCol={{\n                                span: 20,\n                            }}\n                            initialValues={{\n                                remember: true,\n                            }}\n                            onFinish={onFinish}\n                            onFinishFailed={onFinishFailed}\n                            autoComplete=\"off\"\n                        >\n                            <Form.Item\n                                label=\"Title\"\n                                name=\"title\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Vui lòng nhập tiêu đề!',\n                                    },\n                                ]}\n                            >\n                                <Input />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"Image\"\n                                name=\"image\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Vui lòng upload ảnh!',\n                                    },\n                                ]}\n                            >\n                                <Image width={200} src={urlImage} />\n                                <Upload\n                                    action={uploadImagePost}\n                                    onChange={handleUpload}\n                                    listType=\"picture\"\n                                    maxCount={1}\n                                >\n                                    <Button\n                                        style={{\n                                            marginTop: '2rem',\n                                        }}\n                                        icon={<UploadOutlined />}\n                                    >\n                                        Click to upload\n                                    </Button>\n                                </Upload>\n                            </Form.Item>\n                            <Form.Item\n                                label=\"Slug\"\n                                name=\"slug\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Vui lòng nhập slug !',\n                                    },\n                                ]}\n                            >\n                                <Input />\n                            </Form.Item>\n                            <Form.Item\n                                label=\"Content\"\n                                name=\"content\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message:\n                                            'Vui lòng nhập nội dung bài viết!',\n                                    },\n                                ]}\n                            >\n                                <QuillEditor\n                                    value={post.content}\n                                    onEditorChange={onEditorChange}\n                                    onFilesChange={onFilesChange}\n                                />\n                            </Form.Item>\n                            <Form.Item\n                                wrapperCol={{\n                                    offset: 2,\n                                    span: 20,\n                                }}\n                            >\n                                <Button type=\"button\" onClick={onReset}>\n                                    Cancel\n                                </Button>\n                                <Button\n                                    type=\"primary\"\n                                    htmlType=\"submit\"\n                                    style={{ marginLeft: 15 }}\n                                >\n                                    Edit\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Edit\n","import { BASE_URL } from '../../config'\nimport { SET_COMMENTS, CREATE_COMMENT_ERROR, COMMENT_DETAIL, COMMENT_REQUEST, EDIT_COMMENT_ERROR, DELETE_COMMENT_ERROR } from '../types/CommentTypes.js'\nimport { SET_LOADER, CLOSE_LOADER, REMOVE_ERROR, REDIRECT_TRUE } from '../types/CommonTypes.js'\n\nimport axios from 'axios';\n\nconst token = localStorage.getItem('token')\nexport const getAllComments = (page, page_size) => {\n    return async (dispatch, getState) => {\n        const { AuthReducer: { token } } = getState();\n        dispatch({ type: SET_LOADER })\n        try {\n            const config = {\n                headers: {\n                    \"Authorization\": `${token}`\n                }\n            }\n            const { data: { data, totalDocs, currentPage } } = await axios.get(`${BASE_URL}/comments?page=${page}&page_size=${page_size}`, config)\n            dispatch({ type: CLOSE_LOADER })\n            dispatch({ type: SET_COMMENTS, payload: { data, currentPage, totalDocs } })\n        } catch (error) {\n            console.log('error', error);\n            dispatch({ type: CLOSE_LOADER })\n\n        }\n    }\n}\nexport const createComment = (comment) => {\n    return async (dispatch, getState) => {\n        const { AuthReducer: { token } } = getState();\n        dispatch({ type: SET_LOADER })\n        try {\n            const config = {\n                headers: {\n                    \"Authorization\": `${token}`\n                }\n            }\n            const res = await axios.post(`${BASE_URL}/comments`, comment, config)\n            dispatch({ type: REDIRECT_TRUE })\n            dispatch({ type: REMOVE_ERROR })\n            dispatch({ type: CLOSE_LOADER })\n        } catch (error) {\n            console.log('error', error);\n            dispatch({ type: CLOSE_LOADER })\n            dispatch({ type: CREATE_COMMENT_ERROR, payload: error.response.data.message })\n            dispatch({ type: REMOVE_ERROR })\n        }\n    }\n}\nexport const getCommentDetail = (id) => {\n    return async (dispatch, getState) => {\n        const {\n            AuthReducer: { token },\n        } = getState();\n        const config = {\n            headers: {\n                Authorization: `Bearer ${token}`,\n            },\n        };\n        dispatch({ type: SET_LOADER });\n        try {\n            const {\n                data:\n                { data }\n            } = await axios.get(`${BASE_URL}/comments/${id}`, config);\n            dispatch({ type: CLOSE_LOADER });\n            dispatch({ type: COMMENT_DETAIL, payload: data });\n            dispatch({ type: COMMENT_REQUEST });\n        } catch (error) {\n            dispatch({ type: CLOSE_LOADER });\n            console.log(error.message);\n        }\n    };\n};\n\nexport const editComment = (id, Comment) => {\n    return async (dispatch, getState) => {\n        const { AuthReducer: { token } } = getState();\n        dispatch({ type: SET_LOADER })\n        try {\n            const config = {\n                headers: {\n                    \"Authorization\": `${token}`\n                }\n            }\n            const res = await axios.put(`${BASE_URL}/admin/Comments/${id}`, Comment, config)\n            dispatch({ type: REDIRECT_TRUE })\n            dispatch({ type: REMOVE_ERROR })\n            dispatch({ type: CLOSE_LOADER })\n        } catch (error) {\n            console.log('error', error);\n            dispatch({ type: CLOSE_LOADER })\n            dispatch({ type: EDIT_COMMENT_ERROR, payload: error.response.data.message })\n        }\n    }\n}\nexport const deleteComment = async (id) => {\n    try {\n        const config = {\n            headers: {\n                \"Authorization\": `${token}`\n            }\n        }\n        const res = await axios.delete(`${BASE_URL}/comments/${id}`, config)\n        if (res.status === 200) {\n            window.location.reload();\n        }\n\n    } catch (error) {\n        console.log('error', error);\n    }\n}","import React, { useState, useEffect } from 'react'\nimport GoBack from '../../../components/Shared/GoBack'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Form, Input, Select } from 'antd'\nimport toast, { Toaster } from 'react-hot-toast'\nimport { getUserDetail, editUser } from '../../../store/asyncMethod/UserMethod'\nimport { USER_RESET } from '../../../store/types/UserTypes.js'\nimport { REDIRECT_FALSE } from '../../../store/types/CommonTypes.js'\nimport { Helmet } from 'react-helmet'\nconst { Option } = Select\n\nconst Index = (props) => {\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [form] = Form.useForm()\n\n    const userData = useSelector((state) => state.AuthReducer.user)\n    const { user, userStatus, editUserError, redirect } = useSelector(\n        (state) => state.UserReducer\n    )\n    useEffect(() => {\n        if (userStatus) {\n            form.setFieldsValue({\n                email: user.email,\n                gender: user.gender,\n                name: user.name,\n                address: user.address,\n                role: user.role,\n                phone: user.phone,\n            })\n            dispatch({ type: USER_RESET })\n        } else {\n            dispatch(getUserDetail(userData._id))\n        }\n    }, [user])\n\n    useEffect(() => {\n        if (redirect) {\n            dispatch({ type: REDIRECT_FALSE })\n            props.history.push('/admin/users')\n        }\n    }, [redirect])\n\n    useEffect(() => {\n        if (editUserError) {\n            toast.error(editUserError)\n        }\n    }, [editUserError])\n\n    const onFinish = (values) => {\n        console.log('value', values)\n        dispatch(editUser(userData._id, values))\n    }\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo)\n    }\n    const onReset = () => {\n        form.resetFields()\n    }\n\n    const onGenderChange = (value) => {\n        switch (value) {\n            case 'male':\n                form.setFieldsValue({ gender: 'male' })\n                return\n            case 'female':\n                form.setFieldsValue({ gender: 'female' })\n                return\n            case 'other':\n                form.setFieldsValue({ gender: 'other' })\n        }\n    }\n    const onRoleChange = (value) => {\n        switch (value) {\n            case 'user':\n                form.setFieldsValue({ role: 'user' })\n                return\n            case 'admin':\n                form.setFieldsValue({ role: 'admin' })\n\n                return\n        }\n    }\n\n    return (\n        <>\n            <div>\n                <GoBack />\n                <Helmet>\n                    <title>Edit user</title>\n                    <meta name=\"description\" content=\"Edit user\" />\n                </Helmet>\n                <Toaster\n                    position=\"top-right\"\n                    reverseOrder={false}\n                    gutter={8}\n                    toastOptions={{\n                        duration: 1000,\n                        style: {\n                            background: '#363636',\n                            color: '#fff',\n                            fontSize: 13,\n                        },\n                    }}\n                />\n                <div className=\"container\">\n                    <div className=\"form__data\">\n                        <h3 className=\"form__data__text\">My profile</h3>\n                        <Form\n                            form={form}\n                            name=\"basic\"\n                            labelCol={{\n                                span: 4,\n                            }}\n                            wrapperCol={{\n                                span: 16,\n                            }}\n                            initialValues={{\n                                remember: true,\n                            }}\n                            onFinish={onFinish}\n                            onFinishFailed={onFinishFailed}\n                            autoComplete=\"off\"\n                        >\n                            <Form.Item label=\"Email\" name=\"email\">\n                                <Input disabled={true} />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"Username\"\n                                name=\"name\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your username!',\n                                    },\n                                ]}\n                            >\n                                <Input />\n                            </Form.Item>\n                            <Form.Item\n                                name=\"gender\"\n                                label=\"Gender\"\n                                rules={[{ required: true }]}\n                            >\n                                <Select\n                                    placeholder=\"Select a gender and change \"\n                                    onChange={onGenderChange}\n                                    allowClear\n                                >\n                                    <Option value=\"male\">male</Option>\n                                    <Option value=\"female\">female</Option>\n                                    <Option value=\"other\">other</Option>\n                                </Select>\n                            </Form.Item>\n                            <Form.Item\n                                name=\"role\"\n                                label=\"Role\"\n                                rules={[{ required: true }]}\n                            >\n                                <Select\n                                    placeholder=\"Select a role and change \"\n                                    onChange={onRoleChange}\n                                    allowClear\n                                >\n                                    <Option value=\"user\">user</Option>\n                                    <Option value=\"admin\">admin</Option>\n                                </Select>\n                            </Form.Item>\n                            <Form.Item label=\"Address\" name=\"address\">\n                                <Input />\n                            </Form.Item>\n                            <Form.Item\n                                label=\"Phone\"\n                                name=\"phone\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your phone!',\n                                    },\n                                ]}\n                            >\n                                <Input />\n                            </Form.Item>\n                            <Form.Item\n                                wrapperCol={{\n                                    offset: 4,\n                                    span: 16,\n                                }}\n                            >\n                                <Button type=\"button\" onClick={onReset}>\n                                    Cancel\n                                </Button>\n                                <Button\n                                    type=\"primary\"\n                                    htmlType=\"submit\"\n                                    style={{ marginLeft: 15 }}\n                                >\n                                    Edit\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Index\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport './scss/main.scss'\nimport { Provider } from 'react-redux'\nimport PrivateRoute from './private/PrivateRoute'\nimport RouteLinks from './private/RouteLinks'\nimport Store from './store'\nimport Login from './pages/Auth/Login'\nimport AdminHeader from './components/Shared/AdminHeader'\nimport AdminSidebar from './components/Shared/AdminSidebar'\nimport AdminDashboard from './pages/Admin'\nimport NotFound from './components/NotFound'\nimport AdminUser from './pages/Admin/User'\nimport AdminCreateUser from './pages/Admin/User/create'\nimport AdminEditUser from './pages/Admin/User/edit'\nimport AdminPost from './pages/Admin/Post'\nimport AdminCreatePost from './pages/Admin/Post/create'\nimport AdminEditPost from './pages/Admin/Post/edit'\nimport AdminComment from './pages/Admin/Comment'\nimport ChangePassword from './pages/Auth/ChangePassword'\nimport AdminProfile from './pages/Admin/Profile'\n\nfunction App() {\n    return (\n        <Provider store={Store}>\n            <Router>\n                <Switch>\n                    <RouteLinks path=\"/admin/login\" component={Login} />\n                    <div className=\"d-flex\">\n                        <AdminSidebar />\n                        <div className=\"col-10\">\n                            <AdminHeader />\n                            <PrivateRoute\n                                path=\"/admin/dashboard\"\n                                exact={true}\n                                component={AdminDashboard}\n                            />\n                            {/* <PrivateRoute path='/admin/users' component={AdminUser} />\n              <PrivateRoute path='/admin/create-user' component={AdminCreateUser} />\n              <PrivateRoute path='/admin/edit-user/:id' component={AdminEditUser} /> */}\n                            <PrivateRoute\n                                path=\"/admin/posts\"\n                                component={AdminPost}\n                            />\n                            <PrivateRoute\n                                path=\"/admin/create-post\"\n                                component={AdminCreatePost}\n                            />\n                            <PrivateRoute\n                                path=\"/admin/edit-post/:id\"\n                                component={AdminEditPost}\n                            />\n                            {/* <PrivateRoute path='/admin/comments' component={AdminComment} />\n              <PrivateRoute path='/admin/change-password' component={ChangePassword} />\n              <PrivateRoute path='/admin/profile' component={AdminProfile} /> */}\n                        </div>\n                    </div>\n\n                    {/* <Route path='*' component={NotFound} /> */}\n                </Switch>\n            </Router>\n        </Provider>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
{"version":3,"sources":["private/PrivateRoute.jsx","private/RouteLinks.jsx","store/types/AuthTypes.js","store/types/CommonTypes.js","store/reducers/AuthReducer.js","store/types/UserTypes.js","store/reducers/UserReducer.js","store/types/PostTypes.js","store/reducers/PostReducer.js","store/types/CategoryTypes.js","store/reducers/CategoryReducer.js","store/types/CommentTypes.js","store/reducers/CommentReducer.js","store/index.jsx","config/index.jsx","store/asyncMethod/AuthMethod.js","pages/Auth/utils/IconImage.jsx","pages/Auth/utils/PandaIcon.jsx","pages/Auth/Register.jsx","pages/Auth/Login.jsx","components/Shared/AdminHeader.jsx","components/Shared/AdminSidebar.jsx","pages/Admin/index.jsx","components/Table/index.jsx","store/asyncMethod/UserMethod.js","pages/Admin/User/index.jsx","components/Shared/GoBack.jsx","pages/Admin/User/create.jsx","pages/Admin/User/edit.jsx","store/asyncMethod/PostMethod.js","pages/Admin/Post/index.jsx","store/asyncMethod/CategoryMethod.js","pages/Admin/Post/QuillEditor.js","pages/Admin/Post/create.jsx","pages/Admin/Post/edit.jsx","store/asyncMethod/CommentMethod.js","pages/Admin/Comment/index.jsx","pages/Auth/ChangePassword.jsx","pages/Admin/Profile/index.jsx","App.js","index.js"],"names":["PrivateRoute","props","useSelector","state","AuthReducer","user","role","path","exact","component","to","RouteLinks","REGISTER_ERROR","LOGIN_ERROR","SET_TOKEN","LOGOUT","SET_LOADER","CLOSE_LOADER","REDIRECT_TRUE","REDIRECT_FALSE","REMOVE_ERROR","initState","loading","registerError","loginError","token","verifyToken","decodeToken","jwt_decode","expiresIn","Date","exp","localStorage","removeItem","getItem","decoded","action","type","payload","SET_USERS","SET_USER","USER_REQUEST","USER_RESET","CREATE_USER_ERROR","EDIT_USER_ERROR","DELETE_USER_ERROR","totalDocs","redirect","currentPage","users","createUserError","editUserError","deleteUserError","userStatus","SET_POSTS","CREATE_POST","CREATE_POST_ERROR","SET_MESSAGE","REMOVE_MESSAGE","POST_DETAIL","POST_REQUEST","POST_RESET","createPostError","message","posts","post","postStatus","SET_CATEGORIES","categories","category","SET_COMMENTS","COMMENT_DETAIL","COMMENT_REQUEST","COMMENT_RESET","CREATE_COMMENT_ERROR","EDIT_COMMENT_ERROR","DELETE_COMMENT_ERROR","comments","comment","createCommentError","editCommentError","deleteCommentError","commentStatus","rootReducers","combineReducers","UserReducer","data","PostReducer","CategoryReducer","CommentReducer","middlewares","thunkMiddleware","Store","createStore","composeWithDevTools","applyMiddleware","BASE_URL","register","dispatch","a","config","headers","axios","res","console","log","status","window","location","href","response","login","setItem","changePassword","then","catch","error","IconImage","className","PandaSvg","viewBox","width","height","fill","d","p-id","PandaIcon","Icon","Register","useDispatch","useState","name","email","password","confirm_password","setState","handleInputs","e","target","value","registerForm","toast","preventDefault","useEffect","Helmet","content","position","reverseOrder","gutter","toastOptions","duration","style","background","color","fontSize","onSubmit","marginLeft","placeholder","onChange","Login","loginForm","padding","checked","shape","icon","FacebookOutlined","size","GoogleOutlined","AdminHeader","history","useHistory","menu","onClick","key","push","Item","ProfileOutlined","EditOutlined","LogoutOutlined","count","trigger","overlay","src","avatar","AdminSidebar","class","index","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","record","disabled","Index","selectionType","margin","columns","dataSource","pagination","handlePagination","scroll","getUserDetail","id","getState","Authorization","get","editUser","put","deleteUser","delete","reload","colorRoles","title","dataIndex","render","map","item","toLowerCase","text","_id","onConfirm","handleDelete","queryString","parse","search","page","page_size","total","pageSize","parseInt","current","pageSizeOptions","showSizeChanger","showTotal","getAllUsers","borderColor","Table","GoBack","goBack","Option","Select","Create","Form","useForm","form","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","onFinishFailed","errorInfo","autoComplete","label","rules","required","Password","setFieldsValue","gender","allowClear","offset","resetFields","htmlType","Edit","match","params","address","phone","deletePost","colorStatus","htmlToText","slice","borderRadius","display","marginRight","image","tags","tag","length","slug","getAllPosts","x","getAllCategories","Clipboard","navigator","userAgent","getMetaTagElements","stringContent","el","document","createElement","innerHTML","getElementsByTagName","clipboardData","getData","pastedData","urlMatches","forEach","link","url","node","getAttribute","rendered","range","quill","getSelection","pasteHTML","setSelection","Quill","import","BlockEmbed","ImageBlot","imgTag","setAttribute","alt","blotName","tagName","VideoBlot","videoTag","iframeTag","FileBlot","prefixTag","innerText","bTag","linkTag","appendChild","querySelector","PollBlot","QuillEditor","handleChange","html","editorHtml","onEditorChange","imageHandler","inputOpenImageRef","click","videoHandler","inputOpenVideoRef","fileHandler","inputOpenFileRef","insertImage","stopPropagation","currentTarget","files","file","formData","FormData","append","header","alert","reactQuillRef","getEditor","focus","insertEmbed","_isMounted","onFilesChange","insertVideo","success","insertFile","fileName","modules","toolbar","container","handlers","insertPoll","pollHandler","formats","React","createRef","this","prevProps","prevState","ref","theme","accept","Component","inputVisible","inputValue","tagState","setTagState","setFiles","handleInputConfirm","indexOf","tagChild","tagElem","closable","onClose","removedTag","filter","handleClose","userId","slugNpm","info","listType","maxCount","UploadOutlined","onBlur","onPressEnter","PlusOutlined","editPostError","urlImage","setUrlImage","_","isEmpty","description","categoryId","getPostDetail","editPost","marginTop","deleteComment","getAllComments","ChangePassword","dependencies","hasFeedback","getFieldValue","validator","Promise","reject","Error","resolve","userData","App","store","AdminDashboard","AdminUser","AdminCreateUser","AdminEditUser","AdminPost","AdminCreatePost","AdminEditPost","AdminComment","AdminProfile","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c323ab4b.chunk.js","sourcesContent":["import { useSelector } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom'\nconst PrivateRoute = (props) => {\n    const { user } = useSelector((state) => state.AuthReducer)\n    return user.role === 'admin' ? (\n        <Route\n            path={props.path}\n            exact={props.exact}\n            component={props.component}\n        />\n    ) : (\n        <Redirect to=\"/auth/login\" />\n    )\n}\n\nexport default PrivateRoute\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Route, Redirect } from 'react-router-dom'\nconst RouteLinks = (props) => {\n    const { user } = useSelector((state) => state.AuthReducer)\n    return user.role === 'admin' ? (\n        <Redirect to=\"/admin/dashboard\" />\n    ) : (\n        <Route\n            path={props.path}\n            exact={props.exact}\n            component={props.component}\n        />\n    )\n}\n\nexport default RouteLinks\n","export const REGISTER_ERROR = 'REGISTER_ERROR'\nexport const LOGIN_ERROR = 'LOGIN_ERROR'\nexport const SET_TOKEN = 'SET_TOKEN'\nexport const LOGOUT = 'LOGOUT'\n","export const SET_LOADER = 'SET_LOADER'\nexport const CLOSE_LOADER = 'CLOSE_LOADER'\nexport const REDIRECT_TRUE = 'REDIRECT_TRUE'\nexport const REDIRECT_FALSE = 'REDIRECT_FALSE'\nexport const REMOVE_ERROR = 'REMOVE_ERROR'\n","import jwt_decode from 'jwt-decode'\nimport {\n    SET_TOKEN,\n    REGISTER_ERROR,\n    LOGIN_ERROR,\n    LOGOUT,\n} from '../types/AuthTypes.js'\nimport { SET_LOADER, CLOSE_LOADER, REMOVE_ERROR } from '../types/CommonTypes.js'\nconst initState = {\n    loading: false,\n    registerError: '',\n    loginError: '',\n    token: '',\n    user: '',\n}\nconst verifyToken = (token) => {\n    const decodeToken = jwt_decode(token)\n    const expiresIn = new Date(decodeToken.exp * 1000)\n    if (new Date() > expiresIn) {\n        localStorage.removeItem('token')\n        return null\n    } else {\n        return decodeToken\n    }\n}\nconst token = localStorage.getItem('token')\nif (token) {\n    const decoded = verifyToken(token)\n    initState.token = token\n    const { user } = decoded\n    initState.user = user\n}\nconst AuthReducer = (state = initState, action) => {\n    const { type, payload } = action\n    if (type === SET_LOADER) {\n        return { ...state, loading: true }\n    } else if (type === CLOSE_LOADER) {\n        return { ...state, loading: false }\n    } else if (type === REGISTER_ERROR) {\n        return { ...state, registerError: payload }\n    } else if (type === LOGIN_ERROR) {\n        return { ...state, loginError: payload }\n    } else if (type === SET_TOKEN) {\n        const decoded = verifyToken(payload)\n        const { user } = decoded\n        return { ...state, token: payload, user: user }\n    } else if (type === REMOVE_ERROR) {\n        return { ...state, registerError: '', loginError: '' }\n    } else if (type === LOGOUT) {\n        return { ...state, token: '', user: '' }\n    } else {\n        return state\n    }\n}\nexport default AuthReducer\n","export const REGISTER_ERROR = 'REGISTER_ERROR'\nexport const LOGIN_ERROR = 'LOGIN_ERROR'\nexport const SET_USERS = 'SET_USERS'\nexport const SET_USER = 'SET_USER'\nexport const USER_REQUEST = 'USER_REQUEST'\nexport const USER_RESET = 'USER_RESET'\nexport const CREATE_USER_ERROR = 'CREATE_USER_ERROR'\nexport const EDIT_USER_ERROR = 'EDIT_USER_ERROR'\nexport const DELETE_USER_ERROR = 'DELETE_USER_ERROR'\n","import { SET_USERS, CREATE_USER_ERROR, SET_USER, USER_REQUEST, USER_RESET, EDIT_USER_ERROR, DELETE_USER_ERROR } from '../types/UserTypes.js'\nimport { REDIRECT_TRUE, REMOVE_ERROR, REDIRECT_FALSE } from '../types/CommonTypes.js'\n\nconst initState = {\n    loading: false,\n    totalDocs: 0,\n    redirect: false,\n    currentPage: 0,\n    users: [],\n    user: {},\n    createUserError: '',\n    editUserError: '',\n    deleteUserError: '',\n    userStatus: false\n}\nexport const UserReducer = (state = initState, action) => {\n    const { type, payload } = action\n    if (type === SET_USERS) {\n        return { ...state, users: payload.data, totalDocs: payload.totalDocs, currentPage: payload.currentPage }\n    } else if (type === SET_USER) {\n        return { ...state, user: payload };\n    } else if (type === CREATE_USER_ERROR) {\n        return { ...state, createUserError: payload }\n    } else if (type === EDIT_USER_ERROR) {\n        return { ...state, editUserError: payload }\n    }\n    else if (type === DELETE_USER_ERROR) {\n        return { ...state, deleteUserError: payload }\n    } else if (type === REMOVE_ERROR) {\n        return { ...state, createUserError: '', editUserError: '', deleteUserError: '', }\n    }\n    else if (type === USER_REQUEST) {\n        return { ...state, userStatus: true };\n    } else if (type === USER_RESET) {\n        return { ...state, userStatus: false };\n    }\n    else if (type === REDIRECT_TRUE) {\n        return { ...state, redirect: true }\n    } else if (type === REDIRECT_FALSE) {\n        return { ...state, redirect: false }\n    } else {\n        return state\n    }\n}\n","export const SET_POSTS = 'SET_POSTS';\nexport const CREATE_POST = 'CREATE_POST';\nexport const CREATE_POST_ERROR = 'CREATE_POST_ERROR';\nexport const SET_MESSAGE = 'SET_MESSAGE'\nexport const REMOVE_MESSAGE = 'REMOVE_MESSAGE'\nexport const REMOVE_ERROR = 'REMOVE_ERROR'\nexport const POST_DETAIL = 'POST_DETAIL'\nexport const POST_REQUEST = 'POST_REQUEST'\nexport const POST_RESET = 'POST_RESET'\nexport const EDIT_POST_ERROR = 'EDIT_POST_ERROR'\n\n\n\n\n","import { SET_POSTS, CREATE_POST, CREATE_POST_ERROR, SET_MESSAGE, POST_DETAIL, REMOVE_MESSAGE, POST_REQUEST, POST_RESET } from '../types/PostTypes.js'\nimport { REMOVE_ERROR, SET_LOADER, CLOSE_LOADER, REDIRECT_TRUE, REDIRECT_FALSE } from '../types/CommonTypes.js'\nconst initState = {\n    loading: false,\n    totalDocs: 0,\n    redirect: false,\n    currentPage: 0,\n    createPostError: '',\n    message: '',\n    posts: [],\n    post: {},\n    postStatus: false\n}\nexport const PostReducer = (state = initState, action) => {\n    const { type, payload } = action\n    if (type === SET_POSTS) {\n        return { ...state, posts: payload.data, totalDocs: payload.totalDocs, currentPage: payload.currentPage }\n    }\n    else if (type === SET_LOADER) {\n        return { ...state, loading: true }\n    } else if (type === CLOSE_LOADER) {\n        return { ...state, loading: true }\n    }\n    else if (type === CREATE_POST_ERROR) {\n        return { ...state, createPostError: payload }\n    } else if (type === CREATE_POST) {\n        return { ...state, loading: true }\n    } else if (type === REDIRECT_TRUE) {\n        return { ...state, redirect: true }\n    } else if (type === REDIRECT_FALSE) {\n        return { ...state, redirect: false }\n    }\n    else if (type === SET_MESSAGE) {\n        return { ...state, message: payload }\n    }\n    else if (type === REMOVE_MESSAGE) {\n        return { ...state, message: '' }\n    } else if (type === REMOVE_ERROR) {\n        return { ...state, createPostError: '' }\n    } if (type === POST_DETAIL) {\n        return { ...state, post: payload }\n    }\n    else if (type === POST_REQUEST) {\n        return { ...state, postStatus: true };\n    } else if (type === POST_RESET) {\n        return { ...state, postStatus: false };\n    } else {\n        return state\n    }\n\n}\n","export const SET_CATEGORIES = 'SET_CATEGORIES'","import { SET_CATEGORIES } from '../types/CategoryTypes'\nimport { REDIRECT_TRUE, REMOVE_ERROR } from '../types/CommonTypes.js'\n\nconst initState = {\n    loading: false,\n    totalDocs: 0,\n    redirect: false,\n    currentPage: 0,\n    categories: [],\n    category: {},\n    userStatus: false\n}\nexport const CategoryReducer = (state = initState, action) => {\n    const { type, payload } = action\n    if (type === SET_CATEGORIES) {\n        return { ...state, categories: payload.data, totalDocs: payload.totalDocs, currentPage: payload.currentPage }\n    } else {\n        return state\n    }\n}\n","export const REGISTER_ERROR = 'REGISTER_ERROR';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const SET_TOKEN = 'SET_TOKEN';\nexport const LOGOUT = 'LOGOUT';\nexport const SET_COMMENTS = 'SET_COMMENTS';\nexport const COMMENT_DETAIL = 'COMMENT_DETAIL';\nexport const COMMENT_REQUEST = 'COMMENT_REQUEST';\nexport const COMMENT_RESET = 'COMMENT_RESET'\nexport const CREATE_COMMENT_ERROR = 'CREATE_COMMENT_ERROR';\nexport const EDIT_COMMENT_ERROR = 'EDIT_COMMENT_ERROR';\nexport const DELETE_COMMENT_ERROR = 'DELETE_COMMENT_ERROR';\nexport const REMOVE_ERROR = 'REMOVE_ERROR';\n","import { SET_COMMENTS, CREATE_COMMENT_ERROR, COMMENT_DETAIL, COMMENT_REQUEST, COMMENT_RESET, EDIT_COMMENT_ERROR, DELETE_COMMENT_ERROR } from '../types/CommentTypes.js'\nimport { REDIRECT_TRUE, REMOVE_ERROR } from '../types/CommonTypes.js'\n\nconst initState = {\n    loading: false,\n    totalDocs: 0,\n    redirect: false,\n    currentPage: 0,\n    comments: [],\n    comment: {},\n    createCommentError: '',\n    editCommentError: '',\n    deleteCommentError: '',\n    commentStatus: false\n}\nexport const CommentReducer = (state = initState, action) => {\n    const { type, payload } = action\n    if (type === SET_COMMENTS) {\n        return { ...state, comments: payload.data, totalDocs: payload.totalDocs, currentPage: payload.currentPage }\n    } else if (type === COMMENT_DETAIL) {\n        return { ...state, comment: payload };\n    } else if (type === CREATE_COMMENT_ERROR) {\n        return { ...state, createCommentError: payload }\n    } else if (type === EDIT_COMMENT_ERROR) {\n        return { ...state, editCommentError: payload }\n    }\n    else if (type === DELETE_COMMENT_ERROR) {\n        return { ...state, deleteCommentError: payload }\n    } else if (type === REMOVE_ERROR) {\n        return { ...state, createCommentError: '', editCommentError: '', deleteCommentError: '', }\n    }\n    else if (type === COMMENT_REQUEST) {\n        return { ...state, commentStatus: true };\n    } else if (type === COMMENT_RESET) {\n        return { ...state, commentStatus: false };\n    }\n    else if (type === REDIRECT_TRUE) {\n        return { ...state, redirect: true }\n    } else {\n        return state\n    }\n}\n","import { createStore, applyMiddleware, combineReducers } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport AuthReducer from './reducers/AuthReducer'\nimport { UserReducer } from './reducers/UserReducer'\nimport { PostReducer } from './reducers/PostReducer'\nimport { CategoryReducer } from './reducers/CategoryReducer'\nimport { CommentReducer } from './reducers/CommentReducer'\nconst rootReducers = combineReducers({\n    AuthReducer,\n    UserReducer,\n    PostReducer,\n    CategoryReducer,\n    CommentReducer,\n})\nconst middlewares = [thunkMiddleware]\nconst Store = createStore(\n    rootReducers,\n    composeWithDevTools(applyMiddleware(...middlewares))\n)\nexport default Store\n","export const BASE_URL = 'https://funny-code-9x.herokuapp.com/api'\n","import axios from 'axios'\nimport { SET_TOKEN, REGISTER_ERROR, LOGIN_ERROR } from '../types/AuthTypes.js'\nimport { SET_LOADER, CLOSE_LOADER, REMOVE_ERROR } from '../types/CommonTypes.js'\nimport { BASE_URL } from '../../config'\n\nconst token = localStorage.getItem('token')\nexport const register = (state) => {\n    return async (dispatch) => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        dispatch({ type: SET_LOADER })\n        try {\n            const res = await axios.post(\n                `${BASE_URL}/auth/register`,\n                state,\n                config\n            )\n            dispatch({ type: CLOSE_LOADER })\n            console.log(res)\n            if (res.status === 200) {\n                window.location.href = `/auth/login`\n            }\n        } catch (error) {\n            dispatch({ type: CLOSE_LOADER })\n            dispatch({\n                type: REGISTER_ERROR,\n                payload: error.response.data.message,\n            })\n            dispatch({ type: REMOVE_ERROR })\n        }\n    }\n}\nexport const login = (state) => {\n    return async (dispatch) => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n        dispatch({ type: SET_LOADER })\n        try {\n            const { data } = await axios.post(\n                `${BASE_URL}/auth/login`,\n                state,\n                config\n            )\n            dispatch({ type: CLOSE_LOADER })\n            localStorage.setItem('token', data.token)\n            dispatch({ type: SET_TOKEN, payload: data.token })\n        } catch (error) {\n            dispatch({ type: CLOSE_LOADER })\n            console.log('error', error.response.data.message)\n            dispatch({\n                type: LOGIN_ERROR,\n                payload: error.response.data.message,\n            })\n            dispatch({ type: REMOVE_ERROR })\n        }\n    }\n}\n\nexport const changePassword = async (data) => {\n    const config = {\n        headers: {\n            \"Authorization\": `${token}`\n        }\n    }\n    await axios.post(`${BASE_URL}/auth/change-password`, data, config).then((response) => {\n        window.location.href = '/profile';\n    }).catch((error) => {\n        throw error.response.data.message\n    })\n}","import React from 'react'\n\nconst IconImage = () => {\n    return <div className=\"icon-image\"></div>\n}\n\nexport default IconImage\n","import Icon from '@ant-design/icons'\n\nconst PandaSvg = () => (\n    <svg viewBox=\"0 0 1024 1024\" width=\"1em\" height=\"1em\" fill=\"currentColor\">\n        <path\n            d=\"M99.096 315.634s-82.58-64.032-82.58-132.13c0-66.064 33.032-165.162 148.646-148.646 83.37 11.91 99.096 165.162 99.096 165.162l-165.162 115.614zM924.906 315.634s82.58-64.032 82.58-132.13c0-66.064-33.032-165.162-148.646-148.646-83.37 11.91-99.096 165.162-99.096 165.162l165.162 115.614z\"\n            fill=\"#6B676E\"\n            p-id=\"1143\"\n        />\n        <path\n            d=\"M1024 561.548c0 264.526-229.23 429.42-512.002 429.42S0 826.076 0 561.548 283.96 66.064 512.002 66.064 1024 297.022 1024 561.548z\"\n            fill=\"#FFEBD2\"\n            p-id=\"1144\"\n        />\n        <path\n            d=\"M330.324 842.126c0 82.096 81.34 148.646 181.678 148.646s181.678-66.55 181.678-148.646H330.324z\"\n            fill=\"#E9D7C3\"\n            p-id=\"1145\"\n        />\n        <path\n            d=\"M644.13 611.098C594.582 528.516 561.55 512 512.002 512c-49.548 0-82.58 16.516-132.13 99.096-42.488 70.814-78.73 211.264-49.548 247.742 66.064 82.58 165.162 33.032 181.678 33.032 16.516 0 115.614 49.548 181.678-33.032 29.18-36.476-7.064-176.93-49.55-247.74z\"\n            fill=\"#FFFFFF\"\n            p-id=\"1146\"\n        />\n        <path\n            d=\"M611.098 495.484c0-45.608 36.974-82.58 82.58-82.58 49.548 0 198.194 99.098 198.194 165.162s-79.934 144.904-148.646 99.096c-49.548-33.032-132.128-148.646-132.128-181.678zM412.904 495.484c0-45.608-36.974-82.58-82.58-82.58-49.548 0-198.194 99.098-198.194 165.162s79.934 144.904 148.646 99.096c49.548-33.032 132.128-148.646 132.128-181.678z\"\n            fill=\"#6B676E\"\n            p-id=\"1147\"\n        />\n        <path\n            d=\"M512.002 726.622c-30.06 0-115.614 5.668-115.614 33.032 0 49.638 105.484 85.24 115.614 82.58 10.128 2.66 115.614-32.944 115.614-82.58-0.002-27.366-85.556-33.032-115.614-33.032z\"\n            fill=\"#464655\"\n            p-id=\"1148\"\n        />\n        <path\n            d=\"M330.324 495.484m-33.032 0a33.032 33.032 0 1 0 66.064 0 33.032 33.032 0 1 0-66.064 0Z\"\n            fill=\"#464655\"\n            p-id=\"1149\"\n        />\n        <path\n            d=\"M693.678 495.484m-33.032 0a33.032 33.032 0 1 0 66.064 0 33.032 33.032 0 1 0-66.064 0Z\"\n            fill=\"#464655\"\n            p-id=\"1150\"\n        />\n    </svg>\n)\nconst PandaIcon = (props) => <Icon component={PandaSvg} {...props} />\n\nexport default PandaIcon\n","import { useState, useEffect } from 'react'\nimport toast, { Toaster } from 'react-hot-toast'\nimport { Helmet } from 'react-helmet'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { register } from '../../store/asyncMethod/AuthMethod'\nimport IconImage from '../Auth/utils/IconImage'\nimport PandaIcon from '../Auth/utils/PandaIcon'\nimport { Link } from 'react-router-dom'\n\nconst Register = (props) => {\n    const dispatch = useDispatch()\n    const [state, setState] = useState({\n        name: '',\n        email: '',\n        password: '',\n        confirm_password: '',\n    })\n    const { loading, registerError } = useSelector((state) => state.AuthReducer)\n\n    const handleInputs = (e) => {\n        setState({\n            ...state,\n            [e.target.name]: e.target.value,\n        })\n    }\n    const registerForm = async (e) => {\n        if (state.password !== state.confirm_password) {\n            toast.error('Xác nhận 2 mật khẩu không khớp nhau')\n        }\n        e.preventDefault()\n        dispatch(register(state))\n    }\n    useEffect(() => {\n        if (registerError) {\n            toast.error(registerError)\n        }\n    }, [registerError])\n    return (\n        <>\n            <Helmet>\n                <title>Đăng kí</title>\n                <meta name=\"description\" content=\"Đăng kí\" />\n            </Helmet>\n            <div className=\"bg\">\n                <div className=\"container pt-15\">\n                    <Toaster\n                        position=\"top-right\"\n                        reverseOrder={false}\n                        gutter={8}\n                        toastOptions={{\n                            duration: 1000,\n                            style: {\n                                background: '#363636',\n                                color: '#fff',\n                                fontSize: 13,\n                            },\n                        }}\n                    />\n                    <div className=\"form-auth col-4\">\n                        <div className=\"form-auth__section\">\n                            <form onSubmit={registerForm}>\n                                <div className=\"group\">\n                                    <div className=\"text-avatar\">\n                                        <Link to=\"/\">FUNNY CODE</Link>\n                                        <PandaIcon\n                                            style={{\n                                                fontSize: '25px',\n                                                marginLeft: '8px',\n                                            }}\n                                        />\n                                    </div>\n                                    <IconImage />\n                                </div>\n                                <div className=\"group\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"group__control\"\n                                        name=\"name\"\n                                        placeholder=\"Nhập họ tên ...\"\n                                        value={state.name}\n                                        onChange={handleInputs}\n                                    />\n                                </div>\n                                <div className=\"group\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"group__control\"\n                                        name=\"email\"\n                                        placeholder=\"Nhập email ...\"\n                                        value={state.email}\n                                        onChange={handleInputs}\n                                    />\n                                </div>\n                                <div className=\"group\">\n                                    <input\n                                        type=\"password\"\n                                        className=\"group__control\"\n                                        name=\"password\"\n                                        placeholder=\"Nhập mật khẩu ...\"\n                                        value={state.password}\n                                        onChange={handleInputs}\n                                    />\n                                </div>\n                                <div className=\"group\">\n                                    <input\n                                        type=\"password\"\n                                        className=\"group__control\"\n                                        name=\"confirm_password\"\n                                        placeholder=\"Xác nhận mật khẩu ...\"\n                                        onChange={handleInputs}\n                                    />\n                                </div>\n                                <div className=\"group\">\n                                    <input\n                                        type=\"submit\"\n                                        className=\"btn btn-default btn-block\"\n                                        value={loading ? '...' : 'Đăng kí'}\n                                    />\n                                </div>\n                            </form>\n                        </div>\n                        <div className=\"form-auth__about\">\n                            <p className=\"login-text pt-2\">\n                                Bạn đã có tài khoản -{' '}\n                                <a href=\"/auth/login\">Đăng nhập ngay</a>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Register\n","import { useState, useEffect } from 'react'\nimport toast, { Toaster } from 'react-hot-toast'\nimport { Helmet } from 'react-helmet'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { login } from '../../store/asyncMethod/AuthMethod'\nimport IconImage from '../Auth/utils/IconImage'\nimport PandaIcon from '../Auth/utils/PandaIcon'\nimport { Link } from 'react-router-dom'\nimport { GoogleOutlined, FacebookOutlined } from '@ant-design/icons'\nimport { Button, Checkbox } from 'antd'\n\nconst Login = (props) => {\n    const [state, setState] = useState({\n        email: '',\n        password: '',\n    })\n    const { loading, loginError, user } = useSelector(\n        (state) => state.AuthReducer\n    )\n    const dispatch = useDispatch()\n    const handleInputs = (e) => {\n        setState({\n            ...state,\n            [e.target.name]: e.target.value,\n        })\n    }\n    const loginForm = async (e) => {\n        e.preventDefault()\n        dispatch(login(state))\n    }\n    useEffect(() => {\n        if (loginError) {\n            toast.error(loginError)\n        }\n        if (user.role === 'user') {\n            toast.error('Bạn không có quyền vào trang này')\n        }\n    }, [loginError, user])\n    const onChange = (e) => {\n        console.log(`checked = ${e.target.checked}`)\n    }\n    return (\n        <>\n            <Helmet>\n                <title>Đăng nhập</title>\n                <meta name=\"description\" content=\"Đăng nhập\" />\n            </Helmet>\n            <div className=\"bg\">\n                <div className=\"container pt-15\">\n                    <Toaster\n                        position=\"top-right\"\n                        reverseOrder={false}\n                        gutter={8}\n                        toastOptions={{\n                            duration: 1000,\n                            style: {\n                                background: '#363636',\n                                color: '#fff',\n                                fontSize: 13,\n                            },\n                        }}\n                    />\n                    <div className=\"form-auth col-4\">\n                        <div className=\"form-auth__section\">\n                            <form onSubmit={loginForm}>\n                                <div className=\"group\">\n                                    <div className=\"text-avatar\">\n                                        <Link to=\"/\">FUNNY CODE</Link>\n                                        <PandaIcon\n                                            style={{\n                                                fontSize: '25px',\n                                                marginLeft: '8px',\n                                            }}\n                                        />\n                                    </div>\n                                    <IconImage />\n                                </div>\n                                <div className=\"group\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"group__control\"\n                                        name=\"email\"\n                                        placeholder=\"Nhập email ...\"\n                                        value={state.email}\n                                        onChange={handleInputs}\n                                    />\n                                </div>\n                                <div className=\"group\">\n                                    <input\n                                        type=\"password\"\n                                        className=\"group__control\"\n                                        name=\"password\"\n                                        placeholder=\"Nhập mật khẩu ...\"\n                                        value={state.password}\n                                        onChange={handleInputs}\n                                    />\n                                </div>\n                                <div className=\"group\">\n                                    <input\n                                        type=\"submit\"\n                                        className=\"btn btn-default btn-block\"\n                                        value={loading ? '...' : 'Login'}\n                                    />\n                                </div>\n                            </form>\n                        </div>\n                        <div className=\"form-auth__about\">\n                            <div className=\"group__about d-flex\">\n                                <div className=\"group__about__remember\">\n                                    <Checkbox\n                                        style={{\n                                            fontSize: '14px',\n                                            padding: 0,\n                                        }}\n                                        onChange={onChange}\n                                    >\n                                        Ghi nhớ đăng nhập\n                                    </Checkbox>\n                                </div>\n                                <div className=\"group__about__forget\">\n                                    <Link\n                                        to=\"/auth/forget-password\"\n                                        style={{\n                                            fontSize: '14px',\n                                            padding: 0,\n                                        }}\n                                    >\n                                        Quên mật khẩu\n                                    </Link>\n                                </div>\n                            </div>\n                            <div className=\"divider\">\n                                <span className=\"login-text\">\n                                    Hoặc đăng nhập bằng\n                                </span>\n                            </div>\n                            <div className=\"group__about d-flex pt-3\">\n                                <div className=\"social__facebook\">\n                                    <Button\n                                        style={{ width: '120px' }}\n                                        shape=\"round\"\n                                        icon={<FacebookOutlined />}\n                                        size={'24px'}\n                                    >\n                                        Facebook\n                                    </Button>\n                                </div>\n                                <div className=\"social__google\">\n                                    <Button\n                                        style={{ width: '120px' }}\n                                        shape=\"round\"\n                                        icon={<GoogleOutlined />}\n                                        size={'24px'}\n                                    >\n                                        Google\n                                    </Button>\n                                </div>\n                            </div>\n                            <p className=\"login-text pt-2\">\n                                Bạn chưa có tài khoản -{' '}\n                                <a href=\"/auth/register\">Đăng kí ngay</a>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Login\n","import { Menu, Popover, Badge, Avatar } from 'antd'\nimport {\n    ProfileOutlined,\n    EditOutlined,\n    LogoutOutlined,\n} from '@ant-design/icons'\nimport { MdOutlineNotificationsActive } from 'react-icons/md'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LOGOUT } from '../../store/types/AuthTypes.js'\nimport { useHistory, Link } from 'react-router-dom'\n\nconst AdminHeader = () => {\n    const history = useHistory()\n\n    const handleMenuClick = (e) => {\n        if (e.key === 'profile') {\n            history.push('/profile')\n            // window.location.href = '/profile'\n        }\n    }\n    const handleChangePassword = (e) => {\n        if (e.key === 'change-password') {\n            history.push('/change-password')\n            // window.location.href = '/change-password'\n        }\n    }\n\n    const dispatch = useDispatch()\n    const logout = () => {\n        localStorage.removeItem('token')\n        dispatch({ type: LOGOUT })\n    }\n\n    const menu = (\n        <Menu onClick={handleMenuClick}>\n            <Menu.Item key=\"profile\" icon={<ProfileOutlined />}>\n                My profile\n            </Menu.Item>\n            <Menu.Item\n                key=\"change-password\"\n                icon={<EditOutlined />}\n                onClick={handleChangePassword}\n            >\n                Change password\n            </Menu.Item>\n            <Menu.Item key=\"logout\" icon={<LogoutOutlined />} onClick={logout}>\n                Logout\n            </Menu.Item>\n        </Menu>\n    )\n    const { user } = useSelector((state) => state.AuthReducer)\n    return (\n        <>\n            <div className=\"admin__header d-flex\">\n                <div className=\"admin__header__avatar\">\n                    {user && (\n                        <Badge style={{}} count={0}>\n                            <Popover content={menu} trigger=\"hover\">\n                                <Avatar\n                                    overlay={menu}\n                                    style={{}}\n                                    src={user.avatar}\n                                />\n                            </Popover>\n                        </Badge>\n                    )}\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default AdminHeader\n","import { Link } from 'react-router-dom'\nimport { IoLogoSnapchat } from 'react-icons/io'\nimport { TiWeatherNight } from 'react-icons/ti'\nimport { FiUsers } from 'react-icons/fi'\nimport { RiFeedbackLine } from 'react-icons/ri'\nimport { BiNote, BiLogInCircle } from 'react-icons/bi'\nimport { CgMail } from 'react-icons/cg'\nimport { HiLogout } from 'react-icons/hi'\nimport {\n    AiOutlineDashboard,\n    AiOutlineComment,\n    AiOutlineSetting,\n} from 'react-icons/ai'\nimport { FcDocument } from 'react-icons/fc'\nimport { useDispatch } from 'react-redux'\nimport { LOGOUT } from '../../store/types/AuthTypes.js'\nconst AdminSidebar = () => {\n    const dispatch = useDispatch()\n    const logout = () => {\n        localStorage.removeItem('token')\n        dispatch({ type: LOGOUT })\n    }\n    return (\n        <>\n            <div className=\"sidebar col-2\">\n                <div className=\"sidebar__logo\">\n                    <IoLogoSnapchat />\n                    <TiWeatherNight />\n                </div>\n                <div className=\"sidebar__manager\">\n                    <div className=\"sidebar__title\">\n                        <h3>SITE MANAGER</h3>\n                    </div>\n                    <div className=\"sidebar__item\">\n                        <li class=\"sidebar__item__link\">\n                            <Link to=\"/admin/dashboard\">\n                                <AiOutlineDashboard />\n                                <span class=\"hide-menu\">Dashboard</span>\n                            </Link>\n                        </li>\n\n                        <li class=\"sidebar__item__link\">\n                            <Link to=\"/admin/users\">\n                                <FiUsers />\n                                <span class=\"hide-menu\">Users</span>\n                            </Link>\n                        </li>\n                        <li class=\"sidebar__item__link\">\n                            <Link to=\"/admin/posts\">\n                                <BiNote />\n                                <span class=\"hide-menu\">Posts</span>\n                            </Link>\n                        </li>\n                        <li class=\"sidebar__item__link\">\n                            <Link to=\"/admin/comments\">\n                                <AiOutlineComment />\n                                <span class=\"hide-menu\">Comments</span>\n                            </Link>\n                        </li>\n                        <li class=\"sidebar__item__link\">\n                            <Link to=\"/admin/feedback\">\n                                <RiFeedbackLine />\n                                <span class=\"hide-menu\">Feedback</span>\n                            </Link>\n                        </li>\n                    </div>\n                </div>\n                <div className=\"sidebar__manager\">\n                    <div className=\"sidebar__title\">\n                        <h3>SITE SETTING</h3>\n                    </div>\n                    <div className=\"sidebar__item\">\n                        <li class=\"sidebar__item__link\">\n                            <Link>\n                                <FcDocument />\n                                <span class=\"hide-menu\">Document</span>\n                            </Link>\n                        </li>\n                        <li class=\"sidebar__item__link\">\n                            <Link onClick={logout}>\n                                <RiFeedbackLine />\n                                <span class=\"hide-menu\">Logout</span>\n                            </Link>\n                        </li>\n                    </div>\n                </div>\n                {/* <div class=\"sidebar__footer\">\n                    <div class=\"sidebar__footer__icon\">\n\n                        <a href=\"\" class=\"link\" data-toggle=\"tooltip\" title=\"Settings\"><AiOutlineSetting /></a>\n                    </div><div class=\"sidebar__footer__icon\">\n\n                        <a href=\"\" class=\"link\" data-toggle=\"tooltip\" title=\"Email\"><CgMail /></a>\n\n                    </div><div class=\"sidebar__footer__icon\">\n\n                        <a href='javascript:;' onclick='logout()' class=\"link\" data-toggle=\"tooltip\" title=\"Settings\"><HiLogout /></a>\n                    </div>\n                </div> */}\n            </div>\n        </>\n    )\n}\n\nexport default AdminSidebar\n","import { Helmet } from 'react-helmet'\n\nconst index = () => {\n    return (\n        <div className=\"dashboard\">\n            <Helmet>\n                <title>Dashboard</title>\n                <meta name=\"description\" content=\"Dashboard\" />\n            </Helmet>\n            Dashboard\n        </div>\n    )\n}\n\nexport default index\n","import React, { useState } from 'react'\nimport { Table } from 'antd'\n\nconst rowSelection = {\n    onChange: (selectedRowKeys, selectedRows) => {\n        console.log(\n            `selectedRowKeys: ${selectedRowKeys}`,\n            'selectedRows: ',\n            selectedRows\n        )\n    },\n    getCheckboxProps: (record) => ({\n        disabled: record.name === 'Disabled User',\n        name: record.name,\n    }),\n}\n\nconst Index = (props) => {\n    const [selectionType, setSelectionType] = useState('checkbox')\n\n    return (\n        <Table\n            style={{ margin: '27px 40px' }}\n            rowSelection={{\n                type: selectionType,\n                ...rowSelection,\n            }}\n            columns={props.columns}\n            dataSource={props.data}\n            pagination={props.pagination}\n            onChange={props.handlePagination}\n            scroll={props.scroll}\n        />\n    )\n}\n\nexport default Index\n","import { BASE_URL } from '../../config/index'\nimport {\n    SET_USERS,\n    CREATE_USER_ERROR,\n    SET_USER,\n    USER_REQUEST,\n    EDIT_USER_ERROR,\n    DELETE_USER_ERROR,\n} from '../types/UserTypes.js'\nimport {\n    SET_LOADER,\n    CLOSE_LOADER,\n    REMOVE_ERROR,\n    REDIRECT_TRUE,\n    REDIRECT_FALSE,\n} from '../types/CommonTypes.js'\n\nimport axios from 'axios'\n\nconst token = localStorage.getItem('token')\nexport const getAllUsers = (page, page_size) => {\n    return async (dispatch, getState) => {\n        const {\n            AuthReducer: { token },\n        } = getState()\n        dispatch({ type: SET_LOADER })\n        try {\n            const config = {\n                headers: {\n                    Authorization: `${token}`,\n                },\n            }\n            const {\n                data: { data, totalDocs, currentPage },\n            } = await axios.get(\n                `${BASE_URL}/admin/users?page=${page}&page_size=${page_size}`,\n                config\n            )\n            dispatch({ type: CLOSE_LOADER })\n            dispatch({\n                type: SET_USERS,\n                payload: { data, currentPage, totalDocs },\n            })\n        } catch (error) {\n            console.log('error', error)\n            dispatch({ type: CLOSE_LOADER })\n        }\n    }\n}\nexport const createUser = (user) => {\n    return async (dispatch, getState) => {\n        const {\n            AuthReducer: { token },\n        } = getState()\n        dispatch({ type: SET_LOADER })\n        try {\n            const config = {\n                headers: {\n                    Authorization: `${token}`,\n                },\n            }\n            const res = await axios.post(\n                `${BASE_URL}/admin/users`,\n                user,\n                config\n            )\n            dispatch({ type: REDIRECT_TRUE })\n            dispatch({ type: REMOVE_ERROR })\n            dispatch({ type: CLOSE_LOADER })\n        } catch (error) {\n            console.log('error', error)\n            dispatch({ type: CLOSE_LOADER })\n            dispatch({\n                type: CREATE_USER_ERROR,\n                payload: error.response.data.message,\n            })\n            dispatch({ type: REMOVE_ERROR })\n        }\n    }\n}\nexport const getUserDetail = (id) => {\n    return async (dispatch, getState) => {\n        const {\n            AuthReducer: { token },\n        } = getState()\n        const config = {\n            headers: {\n                Authorization: `${token}`,\n            },\n        }\n        dispatch({ type: SET_LOADER })\n        try {\n            const {\n                data: { data },\n            } = await axios.get(`${BASE_URL}/admin/users/${id}`, config)\n            dispatch({ type: CLOSE_LOADER })\n            dispatch({ type: SET_USER, payload: data })\n            dispatch({ type: USER_REQUEST })\n        } catch (error) {\n            dispatch({ type: CLOSE_LOADER })\n            console.log(error.message)\n        }\n    }\n}\n\nexport const editUser = (id, user) => {\n    return async (dispatch, getState) => {\n        const {\n            AuthReducer: { token },\n        } = getState()\n        dispatch({ type: SET_LOADER })\n        try {\n            const config = {\n                headers: {\n                    Authorization: `${token}`,\n                },\n            }\n            const res = await axios.put(\n                `${BASE_URL}/admin/users/${id}`,\n                user,\n                config\n            )\n            dispatch({ type: REDIRECT_TRUE })\n            dispatch({ type: REMOVE_ERROR })\n            dispatch({ type: CLOSE_LOADER })\n        } catch (error) {\n            console.log('error', error)\n            dispatch({ type: CLOSE_LOADER })\n            dispatch({\n                type: EDIT_USER_ERROR,\n                payload: error.response.data.message,\n            })\n        }\n    }\n}\nexport const deleteUser = async (id) => {\n    try {\n        const config = {\n            headers: {\n                Authorization: `${token}`,\n            },\n        }\n        const res = await axios.delete(`${BASE_URL}/admin/users/${id}`, config)\n        if (res.status === 200) {\n            window.location.reload()\n        }\n    } catch (error) {\n        console.log('error', error)\n    }\n}\n","import { useEffect } from 'react'\nimport Table from '../../../components/Table/index'\nimport { GrEdit } from 'react-icons/gr'\nimport { RiDeleteBinLine } from 'react-icons/ri'\nimport { Space, Button, Tag, Popconfirm } from 'antd'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Helmet } from 'react-helmet'\nimport queryString from 'query-string'\nimport { useHistory, Link } from 'react-router-dom'\nimport { deleteUser, getAllUsers } from '../../../store/asyncMethod/UserMethod'\n\nconst colorRoles = [\n    {\n        role: 'user',\n        color: 'green',\n    },\n    {\n        role: 'admin',\n        color: 'volcano',\n    },\n]\nconst columns = [\n    {\n        title: 'ID',\n        dataIndex: 'id',\n    },\n    {\n        title: 'Email',\n        dataIndex: 'email',\n    },\n    {\n        title: 'Name',\n        dataIndex: 'name',\n    },\n    {\n        title: 'Role',\n        dataIndex: 'role',\n        render: (status) => (\n            <>\n                {colorRoles.map((item) => {\n                    if (item.role == status) {\n                        return (\n                            <Tag color={item.color}>{status.toLowerCase()}</Tag>\n                        )\n                    }\n                })}\n            </>\n        ),\n    },\n    {\n        title: 'Address',\n        dataIndex: 'address',\n    },\n    {\n        title: 'Phone',\n        dataIndex: 'phone',\n    },\n    {\n        title: 'Gender',\n        dataIndex: 'gender',\n    },\n    {\n        title: 'Action',\n        key: 'action',\n        render: (text, record) => (\n            <Space size=\"middle\">\n                <Link to={`/admin/edit-user/${record._id}`}>\n                    <GrEdit />\n                </Link>\n                <Popconfirm\n                    title=\"Sure to delete user?\"\n                    onConfirm={() => handleDelete(record.id)}\n                >\n                    <Link>\n                        <RiDeleteBinLine />\n                    </Link>\n                </Popconfirm>\n            </Space>\n        ),\n    },\n]\nconst handleDelete = (id) => {\n    deleteUser(id)\n}\n\nconst Index = () => {\n    const { loading } = useSelector((state) => state.AuthReducer)\n    const { users, totalDocs } = useSelector((state) => state.UserReducer)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    // eslint-disable-next-line no-restricted-globals\n    let { page = 1, page_size = 5 } = queryString.parse(location.search)\n    const pagination = {\n        position: ['none', 'bottomCenter'],\n        total: totalDocs,\n        pageSize: parseInt(page_size) ?? 5,\n        current: parseInt(page) ?? 1,\n        pageSizeOptions: ['5', '10', '20', '30', '50'],\n        showSizeChanger: true,\n        showTotal: (total) => `Total: ${totalDocs} items `,\n    }\n    const handlePagination = ({ current, pageSize }) => {\n        history.push(`/admin/users?page=${current}&page_size=${pageSize}`)\n    }\n    useEffect(() => {\n        dispatch(getAllUsers(page, page_size))\n    }, [page, page_size])\n\n    return (\n        <div className=\"user\">\n            <Helmet>\n                <title>Get all user</title>\n                <meta name=\"description\" content=\"Get all user\" />\n            </Helmet>\n            <Button\n                onClick={() => history.push('/admin/create-user')}\n                type=\"primary\"\n                style={{ background: '#39C449', borderColor: 'yellow' }}\n            >\n                Create new user\n            </Button>\n            <Table\n                columns={columns}\n                data={users}\n                pagination={pagination}\n                handlePagination={handlePagination}\n            />\n        </div>\n    )\n}\n\nexport default Index\n","import React from 'react'\nimport { Button } from 'antd'\nimport { useHistory } from 'react-router-dom'\n\nconst GoBack = () => {\n    const history = useHistory()\n    return (\n        <div>\n            <Button\n                onClick={() => history.goBack()}\n                type=\"primary\"\n                style={{ background: '#39C449', borderColor: 'yellow' }}\n            >\n                Go back\n            </Button>\n        </div>\n    )\n}\n\nexport default GoBack\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Form, Input, Select } from 'antd'\nimport toast, { Toaster } from 'react-hot-toast'\nimport { createUser } from '../../../store/asyncMethod/UserMethod'\nimport GoBack from '../../../components/Shared/GoBack'\nimport { Helmet } from 'react-helmet'\nconst { Option } = Select\n\nconst Create = (props) => {\n    const dispatch = useDispatch()\n    const [form] = Form.useForm()\n\n    const onFinish = (values) => {\n        dispatch(createUser(values))\n    }\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo)\n    }\n    const onReset = () => {\n        form.resetFields()\n    }\n\n    const onGenderChange = (value) => {\n        switch (value) {\n            case 'male':\n                form.setFieldsValue({ gender: 'male' })\n                return\n            case 'female':\n                form.setFieldsValue({ gender: 'female' })\n                return\n            case 'other':\n                form.setFieldsValue({ gender: 'other' })\n        }\n    }\n    const onRoleChange = (value) => {\n        switch (value) {\n            case 'user':\n                form.setFieldsValue({ role: 'user' })\n                return\n            case 'admin':\n                form.setFieldsValue({ role: 'admin' })\n\n                return\n        }\n    }\n    const { loading } = useSelector((state) => state.AuthReducer)\n    const { createUserError, redirect } = useSelector(\n        (state) => state.UserReducer\n    )\n\n    useEffect(() => {\n        if (redirect) {\n            props.history.push('/admin/users')\n        }\n        if (createUserError) {\n            toast.error(createUserError)\n        }\n    }, [createUserError, redirect])\n\n    return (\n        <>\n            <div>\n                <GoBack />\n                <Helmet>\n                    <title>Create new user</title>\n                    <meta name=\"description\" content=\"Create new user\" />\n                </Helmet>\n                <div>\n                    <Toaster\n                        position=\"top-right\"\n                        reverseOrder={false}\n                        gutter={8}\n                        toastOptions={{\n                            duration: 1000,\n                            style: {\n                                background: '#363636',\n                                color: '#fff',\n                                fontSize: 13,\n                            },\n                        }}\n                    />\n                    <div className=\"container\">\n                        <div className=\"form__data\">\n                            <h3 className=\"form__data__text\">\n                                Create new user\n                            </h3>\n                            <Form\n                                form={form}\n                                name=\"basic\"\n                                labelCol={{\n                                    span: 4,\n                                }}\n                                wrapperCol={{\n                                    span: 16,\n                                }}\n                                initialValues={{\n                                    remember: true,\n                                }}\n                                onFinish={onFinish}\n                                onFinishFailed={onFinishFailed}\n                                autoComplete=\"off\"\n                            >\n                                <Form.Item\n                                    label=\"Email\"\n                                    name=\"email\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            type: 'email',\n                                            message:\n                                                'The input is not valid E-mail!',\n                                        },\n                                    ]}\n                                >\n                                    <Input />\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"Username\"\n                                    name=\"name\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message:\n                                                'Please input your username!',\n                                        },\n                                    ]}\n                                >\n                                    <Input />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Password\"\n                                    name=\"password\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message:\n                                                'Please input your password!',\n                                        },\n                                    ]}\n                                >\n                                    <Input.Password />\n                                </Form.Item>\n                                <Form.Item\n                                    name=\"gender\"\n                                    label=\"Gender\"\n                                    rules={[{ required: true }]}\n                                >\n                                    <Select\n                                        placeholder=\"Select a gender and change \"\n                                        onChange={onGenderChange}\n                                        allowClear\n                                    >\n                                        <Option value=\"male\">male</Option>\n                                        <Option value=\"female\">female</Option>\n                                        <Option value=\"other\">other</Option>\n                                    </Select>\n                                </Form.Item>\n                                <Form.Item\n                                    name=\"role\"\n                                    label=\"Role\"\n                                    rules={[{ required: true }]}\n                                >\n                                    <Select\n                                        placeholder=\"Select a role and change \"\n                                        onChange={onRoleChange}\n                                        allowClear\n                                    >\n                                        <Option value=\"user\">user</Option>\n                                        <Option value=\"admin\">admin</Option>\n                                    </Select>\n                                </Form.Item>\n                                <Form.Item label=\"Address\" name=\"address\">\n                                    <Input />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Phone\"\n                                    name=\"phone\"\n                                    rules={[]}\n                                >\n                                    <Input />\n                                </Form.Item>\n                                <Form.Item\n                                    wrapperCol={{\n                                        offset: 4,\n                                        span: 16,\n                                    }}\n                                >\n                                    <Button type=\"button\" onClick={onReset}>\n                                        Cancel\n                                    </Button>\n                                    <Button\n                                        type=\"primary\"\n                                        htmlType=\"submit\"\n                                        style={{ marginLeft: 15 }}\n                                    >\n                                        Create\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Create\n","import React, { useState, useEffect } from 'react'\nimport GoBack from '../../../components/Shared/GoBack'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Form, Input, Select } from 'antd'\nimport toast, { Toaster } from 'react-hot-toast'\nimport { getUserDetail, editUser } from '../../../store/asyncMethod/UserMethod'\nimport { USER_RESET } from '../../../store/types/UserTypes.js'\nimport { REDIRECT_FALSE } from '../../../store/types/CommonTypes.js'\nimport { Helmet } from 'react-helmet'\nconst { Option } = Select\n\nconst Edit = (props) => {\n    const { id } = props.match.params\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [form] = Form.useForm()\n\n    const { loading } = useSelector((state) => state.AuthReducer)\n    const { user, userStatus, editUserError, redirect } = useSelector(\n        (state) => state.UserReducer\n    )\n\n    useEffect(() => {\n        if (userStatus) {\n            form.setFieldsValue({\n                email: user.email,\n                gender: user.gender,\n                name: user.name,\n                address: user.address,\n                role: user.role,\n                phone: user.phone,\n            })\n            dispatch({ type: USER_RESET })\n        } else {\n            dispatch(getUserDetail(id))\n        }\n    }, [user])\n\n    useEffect(() => {\n        if (redirect) {\n            dispatch({ type: REDIRECT_FALSE })\n            props.history.push('/admin/users')\n        }\n    }, [redirect])\n\n    useEffect(() => {\n        if (editUserError) {\n            toast.error(editUserError)\n        }\n    }, [editUserError])\n\n    const onFinish = (values) => {\n        console.log('value', values)\n        dispatch(editUser(id, values))\n    }\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo)\n    }\n    const onReset = () => {\n        form.resetFields()\n    }\n\n    const onGenderChange = (value) => {\n        switch (value) {\n            case 'male':\n                form.setFieldsValue({ gender: 'male' })\n                return\n            case 'female':\n                form.setFieldsValue({ gender: 'female' })\n                return\n            case 'other':\n                form.setFieldsValue({ gender: 'other' })\n        }\n    }\n    const onRoleChange = (value) => {\n        switch (value) {\n            case 'user':\n                form.setFieldsValue({ role: 'user' })\n                return\n            case 'admin':\n                form.setFieldsValue({ role: 'admin' })\n\n                return\n        }\n    }\n\n    return (\n        <>\n            <div>\n                <GoBack />\n                <Helmet>\n                    <title>Edit user</title>\n                    <meta name=\"description\" content=\"Edit user\" />\n                </Helmet>\n                <Toaster\n                    position=\"top-right\"\n                    reverseOrder={false}\n                    gutter={8}\n                    toastOptions={{\n                        duration: 1000,\n                        style: {\n                            background: '#363636',\n                            color: '#fff',\n                            fontSize: 13,\n                        },\n                    }}\n                />\n                <div className=\"container\">\n                    <div className=\"form__data\">\n                        <h3 className=\"form__data__text\">Edit user</h3>\n                        <Form\n                            form={form}\n                            name=\"basic\"\n                            labelCol={{\n                                span: 4,\n                            }}\n                            wrapperCol={{\n                                span: 16,\n                            }}\n                            initialValues={{\n                                remember: true,\n                            }}\n                            onFinish={onFinish}\n                            onFinishFailed={onFinishFailed}\n                            autoComplete=\"off\"\n                        >\n                            <Form.Item\n                                label=\"Email\"\n                                name=\"email\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        type: 'email',\n                                        message:\n                                            'The input is not valid E-mail!',\n                                    },\n                                ]}\n                            >\n                                <Input />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"Username\"\n                                name=\"name\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your username!',\n                                    },\n                                ]}\n                            >\n                                <Input />\n                            </Form.Item>\n                            <Form.Item\n                                name=\"gender\"\n                                label=\"Gender\"\n                                rules={[{ required: true }]}\n                            >\n                                <Select\n                                    placeholder=\"Select a gender and change \"\n                                    onChange={onGenderChange}\n                                    allowClear\n                                >\n                                    <Option value=\"male\">male</Option>\n                                    <Option value=\"female\">female</Option>\n                                    <Option value=\"other\">other</Option>\n                                </Select>\n                            </Form.Item>\n                            <Form.Item\n                                name=\"role\"\n                                label=\"Role\"\n                                rules={[{ required: true }]}\n                            >\n                                <Select\n                                    placeholder=\"Select a role and change \"\n                                    onChange={onRoleChange}\n                                    allowClear\n                                >\n                                    <Option value=\"user\">user</Option>\n                                    <Option value=\"admin\">admin</Option>\n                                </Select>\n                            </Form.Item>\n                            <Form.Item label=\"Address\" name=\"address\">\n                                <Input />\n                            </Form.Item>\n                            <Form.Item\n                                label=\"Phone\"\n                                name=\"phone\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your phone!',\n                                    },\n                                ]}\n                            >\n                                <Input />\n                            </Form.Item>\n                            <Form.Item\n                                wrapperCol={{\n                                    offset: 4,\n                                    span: 16,\n                                }}\n                            >\n                                <Button type=\"button\" onClick={onReset}>\n                                    Cancel\n                                </Button>\n                                <Button\n                                    type=\"primary\"\n                                    htmlType=\"submit\"\n                                    style={{ marginLeft: 15 }}\n                                >\n                                    Edit\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Edit\n","import axios from 'axios'\nimport {\n    CREATE_POST_ERROR,\n    SET_POSTS,\n    POST_DETAIL,\n    POST_REQUEST,\n    EDIT_POST_ERROR,\n} from '../types/PostTypes.js'\nimport {\n    SET_LOADER,\n    CLOSE_LOADER,\n    REMOVE_ERROR,\n    REDIRECT_TRUE,\n} from '../types/CommonTypes.js'\nimport { BASE_URL } from '../../config/index'\nimport { useHistory } from 'react-router-dom'\n\nconst token = localStorage.getItem('token')\n\nexport const getAllPosts = (page, page_size) => {\n    return async (dispatch, getState) => {\n        const {\n            AuthReducer: { token },\n        } = getState()\n        const config = {\n            headers: {\n                Authorization: `${token}`,\n            },\n        }\n        dispatch({ type: SET_LOADER })\n        try {\n            const {\n                data: { data, totalDocs, currentPage },\n            } = await axios.get(\n                `${BASE_URL}/posts?page=${page}&page_size=${page_size}`,\n                config\n            )\n            dispatch({ type: CLOSE_LOADER })\n            dispatch({\n                type: SET_POSTS,\n                payload: { data, currentPage, totalDocs },\n            })\n        } catch (error) {\n            console.log('error', error)\n            dispatch({ type: CLOSE_LOADER })\n        }\n    }\n}\n\nexport const createPost = (post) => {\n    return async (dispatch, getState) => {\n        const {\n            AuthReducer: { token },\n        } = getState()\n        const config = {\n            headers: {\n                Authorization: `${token}`,\n            },\n        }\n        dispatch({ type: SET_LOADER })\n        try {\n            const res = await axios.post(`${BASE_URL}/posts`, post, config)\n            dispatch({ type: REDIRECT_TRUE })\n            dispatch({ type: REMOVE_ERROR })\n            dispatch({ type: CLOSE_LOADER })\n        } catch (error) {\n            dispatch({ type: CLOSE_LOADER })\n            dispatch({\n                type: CREATE_POST_ERROR,\n                payload: error.response.data.message,\n            })\n            dispatch({ type: REMOVE_ERROR })\n        }\n    }\n}\nexport const getPostDetail = (id) => {\n    return async (dispatch, getState) => {\n        const {\n            AuthReducer: { token },\n        } = getState()\n        const config = {\n            headers: {\n                Authorization: `${token}`,\n            },\n        }\n        dispatch({ type: SET_LOADER })\n        try {\n            const {\n                data: { data },\n            } = await axios.get(`${BASE_URL}/posts/${id}`, config)\n            dispatch({ type: CLOSE_LOADER })\n            dispatch({ type: POST_DETAIL, payload: data })\n            dispatch({ type: POST_REQUEST })\n        } catch (error) {\n            dispatch({ type: CLOSE_LOADER })\n            console.log(error.message)\n        }\n    }\n}\n\nexport const editPost = (id, post) => {\n    return async (dispatch, getState) => {\n        const {\n            AuthReducer: { token },\n        } = getState()\n        dispatch({ type: SET_LOADER })\n        try {\n            const config = {\n                headers: {\n                    Authorization: `${token}`,\n                },\n            }\n            const res = await axios.put(`${BASE_URL}/posts/${id}`, post, config)\n            console.log(\n                '🚀 ~ file: PostMethod.js ~ line 88 ~ return ~ res',\n                res\n            )\n            dispatch({ type: REDIRECT_TRUE })\n            dispatch({ type: REMOVE_ERROR })\n            dispatch({ type: CLOSE_LOADER })\n        } catch (error) {\n            console.log('error', error)\n            dispatch({ type: CLOSE_LOADER })\n            dispatch({\n                type: EDIT_POST_ERROR,\n                payload: error.response.data.message,\n            })\n        }\n    }\n}\nexport const deletePost = async (id) => {\n    try {\n        const config = {\n            headers: {\n                Authorization: `${token}`,\n            },\n        }\n        const res = await axios.delete(`${BASE_URL}/posts/${id}`, config)\n        if (res.status === 200) {\n            window.location.reload()\n        }\n    } catch (error) {\n        console.log('error', error)\n    }\n}\n","import React, { useEffect } from 'react'\nimport queryString from 'query-string'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Table from '../../../components/Table/index'\nimport { GrEdit } from 'react-icons/gr'\nimport { RiDeleteBinLine } from 'react-icons/ri'\nimport { Space, Button, Tag, Popconfirm } from 'antd'\nimport { Helmet } from 'react-helmet'\nimport { useHistory, Link } from 'react-router-dom'\nimport { deletePost, getAllPosts } from '../../../store/asyncMethod/PostMethod'\nimport { htmlToText } from 'html-to-text'\nconst colorStatus = [\n    {\n        status: 'approved',\n        color: 'green',\n    },\n    {\n        status: 'pending',\n        color: 'blue',\n    },\n    {\n        status: 'fail',\n        color: 'volcano',\n    },\n]\nconst columns = [\n    {\n        title: 'ID',\n        dataIndex: 'id',\n        width: 20,\n    },\n    {\n        title: 'Title',\n        dataIndex: 'title',\n        width: 150,\n    },\n    {\n        title: 'Content',\n        dataIndex: 'content',\n        width: 700,\n        height: 300,\n        render: (text, record) => <>{htmlToText(text.slice(0, 600))}</>,\n    },\n    {\n        title: 'View detail',\n        width: 100,\n        render: (text, record) => (\n            <>\n                <Button\n                    type=\"primary\"\n                    shape=\"round\"\n                    onClick={() => console.log(text)}\n                >\n                    {'View more'}\n                </Button>\n            </>\n        ),\n    },\n    {\n        title: 'Image',\n        dataIndex: 'image',\n        // width: 100,\n        render: (text, record) => (\n            <img\n                width=\"150\"\n                height=\"150\"\n                style={{\n                    borderRadius: '8px',\n                    display: 'block',\n                    marginLeft: 'auto',\n                    marginRight: 'auto',\n                }}\n                src={`${record.image}`}\n            />\n        ),\n    },\n    {\n        title: 'Tags',\n        key: 'tags',\n        dataIndex: 'tags',\n        width: 100,\n        render: (tags) => (\n            <>\n                {tags.map((tag) => {\n                    let color = tag.length > 4 ? 'geekblue' : 'green'\n                    return (\n                        <Tag color={color} key={tag}>\n                            {tag.toLowerCase()}\n                        </Tag>\n                    )\n                })}\n            </>\n        ),\n    },\n    {\n        title: 'Category',\n        dataIndex: ['categoryId', 'name'],\n        width: 100,\n    },\n    {\n        title: 'Status',\n        dataIndex: 'status',\n        render: (status) => (\n            <>\n                {colorStatus.map((item) => {\n                    if (item.status == status) {\n                        return (\n                            <Tag color={item.color}>{status.toLowerCase()}</Tag>\n                        )\n                    }\n                })}\n            </>\n        ),\n    },\n    {\n        title: 'Action',\n        key: 'action',\n        render: (text, record) => (\n            <Space size=\"middle\">\n                <Link to={`/admin/edit-post/${record.slug}`}>\n                    <GrEdit />\n                </Link>\n                <Popconfirm\n                    title=\"Sure to delete post?\"\n                    onConfirm={() => handleDelete(record.id)}\n                >\n                    <Link>\n                        <RiDeleteBinLine />\n                    </Link>\n                </Popconfirm>\n            </Space>\n        ),\n    },\n]\n\nconst handleDelete = async (id) => {\n    await deletePost(id)\n}\n\nconst Index = () => {\n    const { loading } = useSelector((state) => state.AuthReducer)\n    const { posts, totalDocs } = useSelector((state) => state.PostReducer)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    // eslint-disable-next-line no-restricted-globals\n    let { page = 1, page_size = 5 } = queryString.parse(location.search)\n\n    const pagination = {\n        position: ['none', 'bottomCenter'],\n        total: totalDocs,\n        pageSize: parseInt(page_size) ?? 5,\n        current: parseInt(page) ?? 1,\n        pageSizeOptions: ['5', '10', '20', '30', '50'],\n        showSizeChanger: true,\n        showTotal: (total) => `Total: ${totalDocs} items `,\n    }\n    const handlePagination = ({ current, pageSize }) => {\n        history.push(`/admin/posts?page=${current}&page_size=${pageSize}`)\n    }\n    useEffect(() => {\n        dispatch(getAllPosts(page, page_size))\n    }, [page, page_size])\n\n    return (\n        <div className=\"post\">\n            <Helmet>\n                <title>Get all post</title>\n                <meta name=\"description\" content=\"Get all post\" />\n            </Helmet>\n            <Button\n                onClick={() => history.push('/admin/create-post')}\n                type=\"primary\"\n                style={{ background: '#39C449', borderColor: 'yellow' }}\n            >\n                Create new post\n            </Button>\n            <Table\n                columns={columns}\n                data={posts}\n                pagination={pagination}\n                handlePagination={handlePagination}\n                scroll={{ x: 'max-content' }}\n            />\n        </div>\n    )\n}\n\nexport default Index\n","import axios from 'axios'\nimport { BASE_URL } from '../../config'\nimport { SET_LOADER, CLOSE_LOADER } from '../types/CommonTypes.js'\nimport { SET_CATEGORIES } from '../types/CategoryTypes'\n\nexport const getAllCategories = (page, page_size) => {\n    return async (dispatch, getState) => {\n        const { AuthReducer: { token } } = getState();\n        const config = {\n            headers: {\n                \"Authorization\": `${token}`\n            }\n        }\n        dispatch({ type: SET_LOADER })\n        try {\n            const { data: { data, currentPage, totalDocs } } = await axios.get(`${BASE_URL}/categories?page=${page}&page_size=${page_size}`, config)\n            dispatch({ type: CLOSE_LOADER })\n            dispatch({ type: SET_CATEGORIES, payload: { currentPage, data, totalDocs } })\n        } catch (error) {\n            console.log('error', error);\n            dispatch({ type: CLOSE_LOADER })\n\n        }\n    }\n}\n","\nimport React from 'react';\nimport ReactQuill, { Quill } from 'react-quill';\nimport \"react-quill/dist/quill.snow.css\";\nimport { BASE_URL } from '../../../config'\nimport axios from 'axios';\nconst __ISMSIE__ = navigator.userAgent.match(/Trident/i) ? true : false;\n\n// Quill.register('modules/clipboard', PlainClipboard, true);\n\nconst QuillClipboard = Quill.import('modules/clipboard');\n\nclass Clipboard extends QuillClipboard {\n\n    getMetaTagElements = (stringContent) => {\n        const el = document.createElement('div');\n        el.innerHTML = stringContent;\n        return el.getElementsByTagName('meta');\n    };\n\n    async onPaste(e) {\n        let clipboardData = e.clipboardData || window.clipboardData;\n        let pastedData = await clipboardData.getData('Text');\n\n        const urlMatches = pastedData.match(/\\b(http|https)?:\\/\\/\\S+/gi) || [];\n        if (urlMatches.length > 0) {\n            e.preventDefault();\n            urlMatches.forEach(link => {\n                axios.get(link)\n                    .then(payload => {\n                        // let title, image, url, description;\n                        let title, image, url;\n                        for (let node of this.getMetaTagElements(payload)) {\n                            if (node.getAttribute(\"property\") === \"og:title\") {\n                                title = node.getAttribute(\"content\");\n                            }\n                            if (node.getAttribute(\"property\") === \"og:image\") {\n                                image = node.getAttribute(\"content\");\n                            }\n                            if (node.getAttribute(\"property\") === \"og:url\") {\n                                url = node.getAttribute(\"content\");\n                            }\n                            // if (node.getAttribute(\"property\") === \"og:description\") {\n                            //     description = node.getAttribute(\"content\");\n                            // }\n                        }\n\n                        const rendered = `<a href=${url} target=\"_blank\"><div><img src=${image} alt=${title} width=\"20%\"/><span>${title}</span></div></a>`;\n\n                        let range = this.quill.getSelection();\n                        let position = range ? range.index : 0;\n                        this.quill.pasteHTML(position, rendered, 'silent');\n                        this.quill.setSelection(position + rendered.length);\n                    })\n                    .catch(error => console.error(error));\n            });\n\n        } else {\n            //console.log('when to use this') 보통 다른 곳에서  paste 한다음에  copy하면 이쪽 걸로 한다.\n            super.onPaste(e);\n        }\n    }\n\n}\nQuill.register('modules/clipboard', Clipboard, true);\n\nconst BlockEmbed = Quill.import('blots/block/embed');\n\nclass ImageBlot extends BlockEmbed {\n\n    static create(value) {\n        const imgTag = super.create();\n        imgTag.setAttribute('src', value.src);\n        imgTag.setAttribute('alt', value.alt);\n        imgTag.setAttribute('width', '100%');\n        return imgTag;\n    }\n\n    static value(node) {\n        return { src: node.getAttribute('src'), alt: node.getAttribute('alt') };\n    }\n\n}\n\nImageBlot.blotName = 'image';\nImageBlot.tagName = 'img';\nQuill.register(ImageBlot);\n\nclass VideoBlot extends BlockEmbed {\n\n    static create(value) {\n        if (value && value.src) {\n            const videoTag = super.create();\n            videoTag.setAttribute('src', value.src);\n            videoTag.setAttribute('title', value.title);\n            videoTag.setAttribute('width', '100%');\n            videoTag.setAttribute('controls', '');\n\n            return videoTag;\n        } else {\n            const iframeTag = document.createElement('iframe');\n            iframeTag.setAttribute('src', value);\n            iframeTag.setAttribute('frameborder', '0');\n            iframeTag.setAttribute('allowfullscreen', true);\n            iframeTag.setAttribute('width', '100%');\n            return iframeTag;\n        }\n    }\n\n    static value(node) {\n        if (node.getAttribute('title')) {\n            return { src: node.getAttribute('src'), alt: node.getAttribute('title') };\n        } else {\n            return node.getAttribute('src');\n        }\n        // return { src: node.getAttribute('src'), alt: node.getAttribute('title') };\n    }\n\n}\n\nVideoBlot.blotName = 'video';\nVideoBlot.tagName = 'video';\nQuill.register(VideoBlot);\n\nclass FileBlot extends BlockEmbed {\n\n    static create(value) {\n        const prefixTag = document.createElement('span');\n        prefixTag.innerText = \"첨부파일 - \";\n\n        const bTag = document.createElement('b');\n        //위에 첨부파일 글자 옆에  파일 이름이 b 태그를 사용해서 나온다.\n        bTag.innerText = value;\n\n        const linkTag = document.createElement('a');\n        linkTag.setAttribute('href', value);\n        linkTag.setAttribute(\"target\", \"_blank\");\n        linkTag.setAttribute(\"className\", \"file-link-inner-post\");\n        linkTag.appendChild(bTag);\n        //linkTag 이런식으로 나온다 <a href=\"btn_editPic@3x.png\" target=\"_blank\" classname=\"file-link-inner-post\"><b>btn_editPic@3x.png</b></a>\n\n        const node = super.create();\n        node.appendChild(prefixTag);\n        node.appendChild(linkTag);\n\n        return node;\n    }\n\n    static value(node) {\n        const linkTag = node.querySelector('a');\n        return linkTag.getAttribute('href');\n    }\n\n}\n\nFileBlot.blotName = 'file';\nFileBlot.tagName = 'p';\nFileBlot.className = 'file-inner-post';\nQuill.register(FileBlot);\n\nclass PollBlot extends BlockEmbed {\n\n    static create(value) {\n        const prefixTag = document.createElement('span');\n        prefixTag.innerText = \"투표 - \";\n\n        const bTag = document.createElement('b');\n        bTag.innerText = value.title;\n\n        const node = super.create();\n        node.setAttribute('id', value.id);\n        node.appendChild(prefixTag);\n        node.appendChild(bTag);\n\n        return node;\n    }\n\n    static value(node) {\n        const id = node.getAttribute('id');\n        const bTag = node.querySelector('b');\n        const title = bTag.innerText;\n        return { id, title };\n    }\n\n}\n\nPollBlot.blotName = 'poll';\nPollBlot.tagName = 'p';\nPollBlot.className = 'poll-inner-post';\nQuill.register(PollBlot);\n\nclass QuillEditor extends React.Component {\n\n    bandId;\n    placeholder;\n    onEditorChange;\n    onFilesChange;\n    onPollsChange;\n    _isMounted;\n\n    value;\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            // editorHtml: __ISMSIE__ ? \"<p>&nbsp;</p>\" : \"\",\n            editorHtml: props.value || \"\",\n            files: [],\n        };\n\n        this.reactQuillRef = null;\n\n        this.inputOpenImageRef = React.createRef();\n        this.inputOpenVideoRef = React.createRef();\n        this.inputOpenFileRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    handleChange = (html) => {\n\n        this.setState({\n            editorHtml: html\n        }, () => {\n            this.props.onEditorChange(this.state.editorHtml);\n        });\n    };\n\n    imageHandler = () => {\n        this.inputOpenImageRef.current.click();\n    };\n\n    videoHandler = () => {\n        this.inputOpenVideoRef.current.click();\n    };\n\n    fileHandler = () => {\n        this.inputOpenFileRef.current.click();\n    };\n\n\n    insertImage = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (e.currentTarget && e.currentTarget.files && e.currentTarget.files.length > 0) {\n            const file = e.currentTarget.files[0];\n\n            let formData = new FormData();\n            const config = {\n                header: { 'content-type': 'multipart/form-data' }\n            }\n            formData.append(\"file\", file);\n\n            axios.post(`${BASE_URL}/common/upload-file`, formData, config)\n                .then(response => {\n                    console.log(\"🚀 ~ file: QuillEditor.js ~ line 267 ~ QuillEditor ~ response\", response)\n                    if (response.status === 200) {\n\n                        const quill = this.reactQuillRef.getEditor();\n                        quill.focus();\n\n                        let range = quill.getSelection();\n                        let position = range ? range.index : 0;\n\n                        quill.insertEmbed(position, \"image\", { src: response.data.data.url });\n                        quill.setSelection(position + 1);\n\n                        if (this._isMounted) {\n                            this.setState({\n                                files: [...this.state.files, file]\n                            }, () => { this.props.onFilesChange(this.state.files) });\n                        }\n                    } else {\n                        return alert('failed to upload file')\n                    }\n                })\n        }\n    };\n\n    insertVideo = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (e.currentTarget && e.currentTarget.files && e.currentTarget.files.length > 0) {\n            const file = e.currentTarget.files[0];\n\n            let formData = new FormData();\n            const config = {\n                header: { 'content-type': 'multipart/form-data' }\n            }\n            formData.append(\"file\", file);\n\n            axios.post(`${BASE_URL}/common/upload-file`, formData, config)\n                .then(response => {\n                    if (response.data.success) {\n\n                        const quill = this.reactQuillRef.getEditor();\n                        quill.focus();\n\n                        let range = quill.getSelection();\n                        let position = range ? range.index : 0;\n                        quill.insertEmbed(position, \"video\", { src: response.data.data.url });\n                        quill.setSelection(position + 1);\n\n                        if (this._isMounted) {\n                            this.setState({\n                                files: [...this.state.files, file]\n                            }, () => { this.props.onFilesChange(this.state.files) });\n                        }\n                    } else {\n                        return alert('failed to upload file')\n                    }\n                })\n        }\n    }\n\n    insertFile = (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n\n        if (e.currentTarget && e.currentTarget.files && e.currentTarget.files.length > 0) {\n            const file = e.currentTarget.files[0];\n            console.log(file);\n\n            let formData = new FormData();\n            const config = {\n                header: { 'content-type': 'multipart/form-data' }\n            }\n            formData.append(\"file\", file);\n\n            axios.post(`${BASE_URL}/common/upload-file`, formData, config)\n                .then(response => {\n                    if (response.data.success) {\n\n                        const quill = this.reactQuillRef.getEditor();\n                        quill.focus();\n\n                        let range = quill.getSelection();\n                        let position = range ? range.index : 0;\n\n                        quill.insertEmbed(position, \"file\", response.data.fileName);\n                        quill.setSelection(position + 1);\n\n                        if (this._isMounted) {\n                            this.setState({\n                                files: [...this.state.files, file]\n                            }, () => { this.props.onFilesChange(this.state.files) });\n                        }\n                    };\n                })\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.value !== prevProps.value) {\n            this.setState({ editorHtml: this.props.value })\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div id=\"toolbar\">\n                    {/* <select className=\"ql-header\" defaultValue={\"\"} onChange={e => e.persist()}>\n                        <option value=\"1\" />\n                        <option value=\"2\" />\n                        <option value=\"\" />\n                    </select> */}\n                    <button class=\"ql-header\" value=\"1\"></button>\n                    <button class=\"ql-header\" value=\"2\"></button>\n\n                    <span class=\"ql-header\">\n                        <select class=\"ql-font\"></select>\n                        <select class=\"ql-size\"></select>\n                    </span>\n                    <span class=\"ql-header\">\n                        <select class=\"ql-color\"></select>\n                        <select class=\"ql-background\"></select>\n                    </span>\n\n                    <span class=\"ql-header\">\n                        <button className=\"ql-bold\" />\n                        <button className=\"ql-italic\" />\n                        <button className=\"ql-underline\" />\n                        <button className=\"ql-strike\" />\n                    </span>\n\n                    <span class=\"ql-header\">\n                        <button className=\"ql-insertImage ql-image\">\n                        </button>\n                        <button className=\"ql-insertVideo ql-video\">\n                            V\n                        </button>\n                        <button className=\"ql-insertFile ql-file\">\n                            F\n                        </button>\n                    </span>\n                    <span class=\"ql-header\">\n                        <button class=\"ql-script\" value=\"sub\"></button>\n                        <button class=\"ql-script\" value=\"super\"></button>\n                    </span>\n                    <span class=\"ql-header\">\n                        <button class=\"ql-direction\" value=\"rtl\"></button>\n                        <select class=\"ql-align\"></select>\n                    </span>\n\n                    <span class=\"ql-header\">\n                        <button className=\"ql-link\" />\n                        <button className=\"ql-code-block\" />\n                        <button className=\"ql-blockquote\" />\n                        <button className=\"ql-clean\" />\n                    </span>\n\n                    <span class=\"ql-header\">\n                        <button class=\"ql-list\" value=\"ordered\"></button>\n                        <button class=\"ql-list\" value=\"bullet\"></button>\n                        <button class=\"ql-indent\" value=\"-1\"></button>\n                        <button class=\"ql-indent\" value=\"+1\"></button>\n                    </span>\n\n\n\n                </div>\n                <ReactQuill\n                    ref={(el) => { this.reactQuillRef = el }}\n                    theme={'snow'}\n                    onChange={this.handleChange}\n                    modules={this.modules}\n                    formats={this.formats}\n                    value={this.state.editorHtml}\n                    placeholder={this.props.placeholder}\n                />\n                <input type=\"file\" accept=\"image/*\" ref={this.inputOpenImageRef} style={{ display: \"none\" }} onChange={this.insertImage} />\n                <input type=\"file\" accept=\"video/*\" ref={this.inputOpenVideoRef} style={{ display: \"none\" }} onChange={this.insertVideo} />\n                <input type=\"file\" accept=\"*\" ref={this.inputOpenFileRef} style={{ display: \"none\" }} onChange={this.insertFile} />\n            </div>\n        )\n    }\n\n    modules = {\n        //syntax: true,\n        toolbar: {\n            container: \"#toolbar\",\n            handlers: {\n                insertImage: this.imageHandler,\n                insertVideo: this.videoHandler,\n                insertFile: this.fileHandler,\n                insertPoll: this.pollHandler,\n            }\n        },\n\n    };\n\n    formats = [\n        'header', 'script', 'direction', 'align',\n        'bold', 'italic', 'underline', 'strike', 'list', 'indent', 'color', 'background', 'font', 'size',\n        'image', 'video', 'file', 'link', \"code-block\", \"video\", \"blockquote\", \"clean\"\n    ];\n}\n\nexport default QuillEditor;\n","import { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport GoBack from '../../../components/Shared/GoBack'\nimport { Button, Form, Input, Select, Upload, Tag } from 'antd'\nimport toast, { Toaster } from 'react-hot-toast'\nimport { UploadOutlined, PlusOutlined } from '@ant-design/icons'\nimport { getAllCategories } from '../../../store/asyncMethod/CategoryMethod'\nimport { createPost } from '../../../store/asyncMethod/PostMethod'\nimport { BASE_URL } from '../../../config'\nimport QuillEditor from './QuillEditor'\nimport slugNpm from 'slug'\n\nimport { Helmet } from 'react-helmet'\n\nconst Create = (props) => {\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [form] = Form.useForm()\n\n    const { user, loading } = useSelector((state) => state.AuthReducer)\n    const { createPostError, redirect } = useSelector(\n        (state) => state.PostReducer\n    )\n    const { categories } = useSelector((state) => state.CategoryReducer)\n    const [tagState, setTagState] = useState({\n        tags: ['nodejs', 'reactjs'],\n        inputVisible: false,\n        inputValue: '',\n    })\n    const [value, setValue] = useState('')\n    const [content, setContent] = useState('')\n    const [files, setFiles] = useState([])\n\n    useEffect(() => {\n        dispatch(getAllCategories(1, 20))\n    }, [])\n\n    useEffect(() => {\n        if (redirect) {\n            props.history.push('/admin/posts')\n        }\n        if (createPostError) {\n            toast.error(createPostError)\n        }\n    }, [createPostError, redirect])\n\n    const uploadImagePost = (info) => {\n        return `${BASE_URL}/common/upload-file`\n    }\n\n    const handleClose = (removedTag) => {\n        const tags = tagState.tags.filter((tag) => tag !== removedTag)\n        setTagState({ tags })\n    }\n    const forMap = (tag) => {\n        const tagElem = (\n            <Tag\n                closable\n                onClose={(e) => {\n                    e.preventDefault()\n                    handleClose(tag)\n                }}\n            >\n                {tag}\n            </Tag>\n        )\n        return (\n            <span key={tag} style={{ display: 'inline-block' }}>\n                {tagElem}\n            </span>\n        )\n    }\n    const showInput = () => {\n        setTagState({ ...tagState, inputVisible: true })\n    }\n    const handleInputChange = (e) => {\n        setTagState({ ...tagState, inputValue: e.target.value })\n    }\n\n    const handleInputConfirm = () => {\n        const { inputValue } = tagState\n        let { tags } = tagState\n        if (inputValue && tags.indexOf(inputValue) === -1) {\n            tags = [...tags, inputValue]\n        }\n        setTagState({\n            tags,\n            inputVisible: false,\n            inputValue: '',\n        })\n    }\n\n    const { tags, inputVisible, inputValue } = tagState\n\n    form.setFieldsValue({ tags })\n\n    const tagChild = tags.map(forMap)\n\n    const handleTitleChange = (e) => {\n        const slug = slugNpm(e.target.value)\n\n        form.setFieldsValue({ slug })\n    }\n\n    const onEditorChange = (value) => {\n        form.setFieldsValue({ content: value })\n    }\n\n    const onFilesChange = (files) => {\n        setFiles(files)\n    }\n    const onFinish = (values) => {\n        values.userId = user._id\n        values.image = values.image.file.response.data.url\n        dispatch(createPost(values))\n    }\n\n    const onFinishFailed = (errorInfo) => {\n        console.log(errorInfo)\n    }\n    const onReset = () => {\n        form.resetFields()\n    }\n\n    return (\n        <>\n            <div className=\"post\">\n                <GoBack />\n                <Helmet>\n                    <title>Create new post</title>\n                    <meta name=\"description\" content=\"Create new post\" />\n                </Helmet>\n                <div className=\"\">\n                    <Toaster\n                        position=\"top-right\"\n                        reverseOrder={false}\n                        gutter={8}\n                        toastOptions={{\n                            duration: 1000,\n                            style: {\n                                background: '#363636',\n                                color: '#fff',\n                                fontSize: 13,\n                            },\n                        }}\n                    />\n                    <div className=\"container\">\n                        <div className=\"form__data\">\n                            <h3 className=\"form__data__text\">\n                                Create new post\n                            </h3>\n                            <Form\n                                form={form}\n                                name=\"basic\"\n                                labelCol={{\n                                    span: 2,\n                                }}\n                                wrapperCol={{\n                                    span: 20,\n                                }}\n                                initialValues={{\n                                    remember: true,\n                                }}\n                                onFinish={onFinish}\n                                onFinishFailed={onFinishFailed}\n                                autoComplete=\"off\"\n                            >\n                                <Form.Item\n                                    label=\"Title\"\n                                    name=\"title\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Please input your title!',\n                                        },\n                                    ]}\n                                >\n                                    <Input onChange={handleTitleChange} />\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"Image\"\n                                    name=\"image\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Please input your image!',\n                                        },\n                                    ]}\n                                >\n                                    <Upload\n                                        action={uploadImagePost}\n                                        listType=\"picture\"\n                                        maxCount={1}\n                                    >\n                                        <Button icon={<UploadOutlined />}>\n                                            Click to upload\n                                        </Button>\n                                    </Upload>\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Description\"\n                                    name=\"description\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message:\n                                                'Please input your description!',\n                                        },\n                                    ]}\n                                >\n                                    <Input />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Slug\"\n                                    name=\"slug\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Please input your slug!',\n                                        },\n                                    ]}\n                                >\n                                    <Input />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Content\"\n                                    name=\"content\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message:\n                                                'Please input your content!',\n                                        },\n                                    ]}\n                                >\n                                    <QuillEditor\n                                        onEditorChange={onEditorChange}\n                                        onFilesChange={onFilesChange}\n                                    />\n                                </Form.Item>\n\n                                <Form.Item\n                                    label=\"Tag\"\n                                    name=\"tags\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Please input your tags!',\n                                        },\n                                    ]}\n                                >\n                                    {tagChild}\n                                    {inputVisible && (\n                                        <Input\n                                            type=\"text\"\n                                            size=\"small\"\n                                            style={{ width: 78 }}\n                                            value={inputValue}\n                                            onChange={handleInputChange}\n                                            onBlur={handleInputConfirm}\n                                            onPressEnter={handleInputConfirm}\n                                        />\n                                    )}\n                                    {!inputVisible && (\n                                        <Tag onClick={showInput}>\n                                            <PlusOutlined /> New Tag\n                                        </Tag>\n                                    )}\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Category\"\n                                    name=\"categoryId\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message:\n                                                'Please input your category!',\n                                        },\n                                    ]}\n                                >\n                                    <Select\n                                        placeholder=\"Select a category and change \"\n                                        allowClear\n                                    >\n                                        {categories.map((category) => (\n                                            <Select.Option\n                                                key={category.id}\n                                                value={category.id}\n                                            >\n                                                {category.name}\n                                            </Select.Option>\n                                        ))}\n                                    </Select>\n                                </Form.Item>\n                                <Form.Item\n                                    wrapperCol={{\n                                        offset: 2,\n                                        span: 20,\n                                    }}\n                                >\n                                    <Button type=\"button\" onClick={onReset}>\n                                        Cancel\n                                    </Button>\n                                    <Button\n                                        type=\"primary\"\n                                        htmlType=\"submit\"\n                                        style={{ marginLeft: 15 }}\n                                    >\n                                        Create\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Create\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Form, Input, Select, Upload, Tag, Image } from 'antd'\nimport toast, { Toaster } from 'react-hot-toast'\nimport _ from 'lodash'\nimport GoBack from '../../../components/Shared/GoBack'\nimport { getPostDetail, editPost } from '../../../store/asyncMethod/PostMethod'\nimport { UploadOutlined, PlusOutlined } from '@ant-design/icons'\nimport { POST_RESET } from '../../../store/types/PostTypes.js'\nimport QuillEditor from './QuillEditor'\nimport { Helmet } from 'react-helmet'\nimport { REDIRECT_FALSE } from '../../../store/types/CommonTypes.js'\nimport { getAllCategories } from '../../../store/asyncMethod/CategoryMethod'\nimport { BASE_URL } from '../../../config'\n\nconst Edit = (props) => {\n    const { id } = props.match.params\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [form] = Form.useForm()\n    const { categories } = useSelector((state) => state.CategoryReducer)\n    const { post, postStatus, editPostError, redirect } = useSelector(\n        (state) => state.PostReducer\n    )\n    const [urlImage, setUrlImage] = useState(post?.image)\n    const [tagState, setTagState] = useState({\n        tags: !_.isEmpty(post.tags) ? post.tags : [],\n        inputVisible: false,\n        inputValue: '',\n    })\n    const { tags, inputVisible, inputValue } = tagState\n\n    const uploadImagePost = (info) => {\n        return `${BASE_URL}/common/upload-file`\n    }\n    useEffect(() => {\n        if (postStatus) {\n            form.setFieldsValue({\n                title: post.title,\n                description: post.description,\n                slug: post.slug,\n                image: post.image,\n                content: post.content,\n                categoryId: post.categoryId._id,\n                tags: post.tags,\n            })\n            setUrlImage(post.image)\n            dispatch({ type: POST_RESET })\n        } else {\n            dispatch(getPostDetail(id))\n        }\n    }, [post])\n\n    useEffect(() => {\n        dispatch(getAllCategories(1, 20))\n    }, [])\n\n    const forMap = (tag) => {\n        const tagElem = (\n            <Tag\n                closable\n                onClose={(e) => {\n                    e.preventDefault()\n                    handleClose(tag)\n                }}\n            >\n                {tag}\n            </Tag>\n        )\n        return (\n            <span key={tag} style={{ display: 'inline-block' }}>\n                {tagElem}\n            </span>\n        )\n    }\n\n    useEffect(() => {\n        if (!_.isEmpty(post.tags)) {\n            setTagState({\n                tags: post.tags,\n                inputVisible: false,\n                inputValue: '',\n            })\n        }\n    }, [post])\n\n    const handleClose = (removedTag) => {\n        const tags = tagState.tags.filter((tag) => tag !== removedTag)\n        setTagState({ tags })\n    }\n\n    const tagChild = tags?.map(forMap)\n    const showInput = () => {\n        setTagState({ ...tagState, inputVisible: true })\n    }\n    const handleInputChange = (e) => {\n        setTagState({ ...tagState, inputValue: e.target.value })\n    }\n\n    const handleInputConfirm = () => {\n        const { inputValue } = tagState\n        let { tags } = tagState\n        if (inputValue && tags.indexOf(inputValue) === -1) {\n            tags = [...tags, inputValue]\n        }\n        setTagState({\n            tags,\n            inputVisible: false,\n            inputValue: '',\n        })\n    }\n\n    useEffect(() => {\n        if (redirect) {\n            dispatch({ type: REDIRECT_FALSE })\n            props.history.push('/admin/posts')\n        }\n    }, [redirect])\n\n    useEffect(() => {\n        if (editPostError) {\n            toast.error(editPostError)\n        }\n    }, [editPostError])\n\n    const handleUpload = (info) => {\n        if (info.file.status === 'done') {\n            setUrlImage(info.file.response.data.url)\n            console.log(\n                '🚀 ~ file: edit.jsx ~ line 139 ~ handleUpload ~ setUrlImage',\n                setUrlImage\n            )\n            // form.setFieldsValue('image', info.file.response.data.url)\n            form.setFieldsValue('image', urlImage)\n        } else if (info.file.status === 'error') {\n            toast.error(`${info.file.name} file upload failed.`)\n        }\n    }\n\n    const onFinish = (values) => {\n        values.image = urlImage\n        dispatch(editPost(id, values))\n    }\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo)\n    }\n    const onReset = () => {\n        form.resetFields()\n    }\n\n    const onEditorChange = (value) => {\n        // console.log(value)\n        form.setFieldsValue({ content: value })\n    }\n\n    const onFilesChange = (files) => {\n        // eslint-disable-next-line no-undef\n        setFiles(files)\n    }\n\n    return (\n        <div>\n            <GoBack />\n            <Helmet>\n                <title>Edit post</title>\n                <meta name=\"description\" content=\"Edit post\" />\n            </Helmet>\n            <div>\n                <Toaster\n                    position=\"top-right\"\n                    reverseOrder={false}\n                    gutter={8}\n                    toastOptions={{\n                        duration: 1000,\n                        style: {\n                            background: '#363636',\n                            color: '#fff',\n                            fontSize: 13,\n                        },\n                    }}\n                />\n                <div className=\"container\">\n                    <div className=\"form__data\">\n                        <h3 className=\"form__data__text\">Edit post</h3>\n                        <Form\n                            form={form}\n                            name=\"basic\"\n                            className=\"formCreatePost\"\n                            labelCol={{\n                                span: 2,\n                            }}\n                            wrapperCol={{\n                                span: 20,\n                            }}\n                            initialValues={{\n                                remember: true,\n                            }}\n                            onFinish={onFinish}\n                            onFinishFailed={onFinishFailed}\n                            autoComplete=\"off\"\n                        >\n                            <Form.Item\n                                label=\"Title\"\n                                name=\"title\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your title!',\n                                    },\n                                ]}\n                            >\n                                <Input />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"Image\"\n                                name=\"image\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your image!',\n                                    },\n                                ]}\n                            >\n                                <Image width={200} src={urlImage} />\n                                <Upload\n                                    action={uploadImagePost}\n                                    onChange={handleUpload}\n                                    listType=\"picture\"\n                                    maxCount={1}\n                                >\n                                    <Button\n                                        style={{\n                                            marginTop: '2rem',\n                                        }}\n                                        icon={<UploadOutlined />}\n                                    >\n                                        Click to upload\n                                    </Button>\n                                </Upload>\n                            </Form.Item>\n                            <Form.Item\n                                label=\"Description\"\n                                name=\"description\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message:\n                                            'Please input your description!',\n                                    },\n                                ]}\n                            >\n                                <Input />\n                            </Form.Item>\n                            <Form.Item\n                                label=\"Slug\"\n                                name=\"slug\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your slug!',\n                                    },\n                                ]}\n                            >\n                                <Input />\n                            </Form.Item>\n                            <Form.Item\n                                label=\"Content\"\n                                name=\"content\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your content!',\n                                    },\n                                ]}\n                            >\n                                <QuillEditor\n                                    value={post.content}\n                                    onEditorChange={onEditorChange}\n                                    onFilesChange={onFilesChange}\n                                />\n                            </Form.Item>\n\n                            {\n                                <Form.Item\n                                    label=\"Tag\"\n                                    name=\"tags\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message: 'Please input your tags!',\n                                        },\n                                    ]}\n                                >\n                                    {tagChild}\n                                    {inputVisible && (\n                                        <Input\n                                            type=\"text\"\n                                            size=\"small\"\n                                            style={{ width: 78 }}\n                                            value={inputValue}\n                                            onChange={handleInputChange}\n                                            onBlur={handleInputConfirm}\n                                            onPressEnter={handleInputConfirm}\n                                        />\n                                    )}\n                                    {!inputVisible && (\n                                        <Tag onClick={showInput}>\n                                            <PlusOutlined /> New Tag\n                                        </Tag>\n                                    )}\n                                </Form.Item>\n                            }\n                            <Form.Item\n                                label=\"Category\"\n                                name=\"categoryId\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your category!',\n                                    },\n                                ]}\n                            >\n                                <Select\n                                    placeholder=\"Select a category and change \"\n                                    allowClear\n                                >\n                                    {categories.map((category) => (\n                                        <Select.Option\n                                            key={category.id}\n                                            value={category.id}\n                                        >\n                                            {category.name}\n                                        </Select.Option>\n                                    ))}\n                                </Select>\n                            </Form.Item>\n                            <Form.Item\n                                wrapperCol={{\n                                    offset: 2,\n                                    span: 20,\n                                }}\n                            >\n                                <Button type=\"button\" onClick={onReset}>\n                                    Cancel\n                                </Button>\n                                <Button\n                                    type=\"primary\"\n                                    htmlType=\"submit\"\n                                    style={{ marginLeft: 15 }}\n                                >\n                                    Edit\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Edit\n","import { BASE_URL } from '../../config'\nimport { SET_COMMENTS, CREATE_COMMENT_ERROR, COMMENT_DETAIL, COMMENT_REQUEST, EDIT_COMMENT_ERROR, DELETE_COMMENT_ERROR } from '../types/CommentTypes.js'\nimport { SET_LOADER, CLOSE_LOADER, REMOVE_ERROR, REDIRECT_TRUE } from '../types/CommonTypes.js'\n\nimport axios from 'axios';\n\nconst token = localStorage.getItem('token')\nexport const getAllComments = (page, page_size) => {\n    return async (dispatch, getState) => {\n        const { AuthReducer: { token } } = getState();\n        dispatch({ type: SET_LOADER })\n        try {\n            const config = {\n                headers: {\n                    \"Authorization\": `${token}`\n                }\n            }\n            const { data: { data, totalDocs, currentPage } } = await axios.get(`${BASE_URL}/comments?page=${page}&page_size=${page_size}`, config)\n            dispatch({ type: CLOSE_LOADER })\n            dispatch({ type: SET_COMMENTS, payload: { data, currentPage, totalDocs } })\n        } catch (error) {\n            console.log('error', error);\n            dispatch({ type: CLOSE_LOADER })\n\n        }\n    }\n}\nexport const createComment = (comment) => {\n    return async (dispatch, getState) => {\n        const { AuthReducer: { token } } = getState();\n        dispatch({ type: SET_LOADER })\n        try {\n            const config = {\n                headers: {\n                    \"Authorization\": `${token}`\n                }\n            }\n            const res = await axios.post(`${BASE_URL}/comments`, comment, config)\n            dispatch({ type: REDIRECT_TRUE })\n            dispatch({ type: REMOVE_ERROR })\n            dispatch({ type: CLOSE_LOADER })\n        } catch (error) {\n            console.log('error', error);\n            dispatch({ type: CLOSE_LOADER })\n            dispatch({ type: CREATE_COMMENT_ERROR, payload: error.response.data.message })\n            dispatch({ type: REMOVE_ERROR })\n        }\n    }\n}\nexport const getCommentDetail = (id) => {\n    return async (dispatch, getState) => {\n        const {\n            AuthReducer: { token },\n        } = getState();\n        const config = {\n            headers: {\n                Authorization: `Bearer ${token}`,\n            },\n        };\n        dispatch({ type: SET_LOADER });\n        try {\n            const {\n                data:\n                { data }\n            } = await axios.get(`${BASE_URL}/comments/${id}`, config);\n            dispatch({ type: CLOSE_LOADER });\n            dispatch({ type: COMMENT_DETAIL, payload: data });\n            dispatch({ type: COMMENT_REQUEST });\n        } catch (error) {\n            dispatch({ type: CLOSE_LOADER });\n            console.log(error.message);\n        }\n    };\n};\n\nexport const editComment = (id, Comment) => {\n    return async (dispatch, getState) => {\n        const { AuthReducer: { token } } = getState();\n        dispatch({ type: SET_LOADER })\n        try {\n            const config = {\n                headers: {\n                    \"Authorization\": `${token}`\n                }\n            }\n            const res = await axios.put(`${BASE_URL}/admin/Comments/${id}`, Comment, config)\n            dispatch({ type: REDIRECT_TRUE })\n            dispatch({ type: REMOVE_ERROR })\n            dispatch({ type: CLOSE_LOADER })\n        } catch (error) {\n            console.log('error', error);\n            dispatch({ type: CLOSE_LOADER })\n            dispatch({ type: EDIT_COMMENT_ERROR, payload: error.response.data.message })\n        }\n    }\n}\nexport const deleteComment = async (id) => {\n    try {\n        const config = {\n            headers: {\n                \"Authorization\": `${token}`\n            }\n        }\n        const res = await axios.delete(`${BASE_URL}/comments/${id}`, config)\n        if (res.status === 200) {\n            window.location.reload();\n        }\n\n    } catch (error) {\n        console.log('error', error);\n    }\n}","import React, { useEffect } from 'react'\nimport Table from '../../../components/Table/index'\nimport { GrEdit } from 'react-icons/gr'\nimport { RiDeleteBinLine } from 'react-icons/ri'\nimport { Space, Button, Tag, Popconfirm } from 'antd'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Helmet } from 'react-helmet'\nimport queryString from 'query-string'\nimport { useHistory, Link } from 'react-router-dom'\nimport {\n    deleteComment,\n    getAllComments,\n} from '../../../store/asyncMethod/CommentMethod'\nconst columns = [\n    {\n        title: 'ID',\n        dataIndex: 'id',\n    },\n    {\n        title: 'Content',\n        dataIndex: 'content',\n    },\n    {\n        title: 'Author',\n        dataIndex: ['userId', 'name'],\n    },\n    {\n        title: 'Post',\n        dataIndex: ['postId', 'title'],\n    },\n    {\n        title: 'Action',\n        key: 'action',\n        render: (text, record) => (\n            <Space size=\"middle\">\n                <Popconfirm\n                    title=\"Sure to delete comment?\"\n                    onConfirm={() => handleDelete(record.id)}\n                >\n                    <Link>\n                        <RiDeleteBinLine />\n                    </Link>\n                </Popconfirm>\n            </Space>\n        ),\n    },\n]\nconst handleDelete = (id) => {\n    deleteComment(id)\n}\n\nconst Index = () => {\n    const { loading } = useSelector((state) => state.AuthReducer)\n    const { comments, totalDocs } = useSelector((state) => state.CommentReducer)\n    const history = useHistory()\n    const dispatch = useDispatch()\n    // eslint-disable-next-line no-restricted-globals\n    let { page = 1, page_size = 5 } = queryString.parse(location.search)\n    const pagination = {\n        position: ['none', 'bottomCenter'],\n        total: totalDocs,\n        pageSize: parseInt(page_size) ?? 5,\n        current: parseInt(page) ?? 1,\n        pageSizeOptions: ['5', '10', '20', '30', '50'],\n        showSizeChanger: true,\n        showTotal: (total) => `Total: ${totalDocs} items `,\n    }\n    const handlePagination = ({ current, pageSize }) => {\n        history.push(`/admin/comments?page=${current}&page_size=${pageSize}`)\n    }\n    useEffect(() => {\n        dispatch(getAllComments(page, page_size))\n    }, [page, page_size])\n\n    return (\n        <div className=\"comment\">\n            <Helmet>\n                <title>Get all comment</title>\n                <meta name=\"description\" content=\"Get all comment\" />\n            </Helmet>\n            <Table\n                columns={columns}\n                data={comments}\n                pagination={pagination}\n                handlePagination={handlePagination}\n            />\n        </div>\n    )\n}\n\nexport default Index\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Space, Button, Form, Input, Select } from 'antd'\nimport toast, { Toaster } from 'react-hot-toast'\nimport { changePassword } from '../../store/asyncMethod/AuthMethod'\n\nimport { Helmet } from 'react-helmet'\n\nconst ChangePassword = (props) => {\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [form] = Form.useForm()\n\n    const onFinish = async (values) => {\n        delete values.confirm_password\n\n        await changePassword(values).catch((error) => {\n            toast.error(error)\n        })\n    }\n\n    const onFinishFailed = (errorInfo) => {\n        console.log(errorInfo)\n    }\n    const onReset = () => {\n        form.resetFields()\n    }\n\n    return (\n        <>\n            <div className=\"change-password\">\n                <Button\n                    onClick={() => history.goBack()}\n                    type=\"primary\"\n                    style={{ background: '#39C449', borderColor: 'yellow' }}\n                >\n                    Go back\n                </Button>\n                <Helmet>\n                    <title>Change password</title>\n                    <meta name=\"description\" content=\"Change password\" />\n                </Helmet>\n                <div className=\"\">\n                    <Toaster\n                        position=\"top-right\"\n                        reverseOrder={false}\n                        gutter={8}\n                        toastOptions={{\n                            duration: 1000,\n                            style: {\n                                background: '#363636',\n                                color: '#fff',\n                                fontSize: 13,\n                            },\n                        }}\n                    />\n                    <div className=\"container\">\n                        <div className=\"form__data\">\n                            <h3 className=\"form__data__text\">\n                                Change password\n                            </h3>\n                            <Form\n                                form={form}\n                                name=\"basic\"\n                                labelCol={{\n                                    span: 4,\n                                }}\n                                wrapperCol={{\n                                    span: 16,\n                                }}\n                                initialValues={{\n                                    remember: true,\n                                }}\n                                onFinish={onFinish}\n                                onFinishFailed={onFinishFailed}\n                                autoComplete=\"off\"\n                            >\n                                <Form.Item\n                                    label=\"Password\"\n                                    name=\"password\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message:\n                                                'Please input your current password!',\n                                        },\n                                    ]}\n                                >\n                                    <Input.Password />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"New password\"\n                                    name=\"new_password\"\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message:\n                                                'Please input your new password!',\n                                        },\n                                    ]}\n                                >\n                                    <Input.Password />\n                                </Form.Item>\n                                <Form.Item\n                                    label=\"Confirm password\"\n                                    name=\"confirm_password\"\n                                    dependencies={['new_password']}\n                                    hasFeedback\n                                    rules={[\n                                        {\n                                            required: true,\n                                            message:\n                                                'Please confirm your password!',\n                                        },\n                                        ({ getFieldValue }) => ({\n                                            validator(_, value) {\n                                                if (\n                                                    !value ||\n                                                    getFieldValue(\n                                                        'new_password'\n                                                    ) === value\n                                                ) {\n                                                    return Promise.resolve()\n                                                }\n                                                return Promise.reject(\n                                                    new Error(\n                                                        'The two passwords that you entered do not match!'\n                                                    )\n                                                )\n                                            },\n                                        }),\n                                    ]}\n                                >\n                                    <Input.Password />\n                                </Form.Item>\n\n                                <Form.Item\n                                    wrapperCol={{\n                                        offset: 4,\n                                        span: 16,\n                                    }}\n                                >\n                                    <Button type=\"button\" onClick={onReset}>\n                                        Cancel\n                                    </Button>\n                                    <Button\n                                        type=\"primary\"\n                                        htmlType=\"submit\"\n                                        style={{ marginLeft: 15 }}\n                                    >\n                                        Change Password\n                                    </Button>\n                                </Form.Item>\n                            </Form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default ChangePassword\n","import React, { useState, useEffect } from 'react'\nimport GoBack from '../../../components/Shared/GoBack'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button, Form, Input, Select } from 'antd'\nimport toast, { Toaster } from 'react-hot-toast'\nimport { getUserDetail, editUser } from '../../../store/asyncMethod/UserMethod'\nimport { USER_RESET } from '../../../store/types/UserTypes.js'\nimport { REDIRECT_FALSE } from '../../../store/types/CommonTypes.js'\nimport { Helmet } from 'react-helmet'\nconst { Option } = Select\n\nconst Index = (props) => {\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const [form] = Form.useForm()\n\n    const userData = useSelector((state) => state.AuthReducer.user)\n    const { user, userStatus, editUserError, redirect } = useSelector(\n        (state) => state.UserReducer\n    )\n    useEffect(() => {\n        if (userStatus) {\n            form.setFieldsValue({\n                email: user.email,\n                gender: user.gender,\n                name: user.name,\n                address: user.address,\n                role: user.role,\n                phone: user.phone,\n            })\n            dispatch({ type: USER_RESET })\n        } else {\n            dispatch(getUserDetail(userData._id))\n        }\n    }, [user])\n\n    useEffect(() => {\n        if (redirect) {\n            dispatch({ type: REDIRECT_FALSE })\n            props.history.push('/admin/users')\n        }\n    }, [redirect])\n\n    useEffect(() => {\n        if (editUserError) {\n            toast.error(editUserError)\n        }\n    }, [editUserError])\n\n    const onFinish = (values) => {\n        console.log('value', values)\n        dispatch(editUser(userData._id, values))\n    }\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo)\n    }\n    const onReset = () => {\n        form.resetFields()\n    }\n\n    const onGenderChange = (value) => {\n        switch (value) {\n            case 'male':\n                form.setFieldsValue({ gender: 'male' })\n                return\n            case 'female':\n                form.setFieldsValue({ gender: 'female' })\n                return\n            case 'other':\n                form.setFieldsValue({ gender: 'other' })\n        }\n    }\n    const onRoleChange = (value) => {\n        switch (value) {\n            case 'user':\n                form.setFieldsValue({ role: 'user' })\n                return\n            case 'admin':\n                form.setFieldsValue({ role: 'admin' })\n\n                return\n        }\n    }\n\n    return (\n        <>\n            <div>\n                <GoBack />\n                <Helmet>\n                    <title>Edit user</title>\n                    <meta name=\"description\" content=\"Edit user\" />\n                </Helmet>\n                <Toaster\n                    position=\"top-right\"\n                    reverseOrder={false}\n                    gutter={8}\n                    toastOptions={{\n                        duration: 1000,\n                        style: {\n                            background: '#363636',\n                            color: '#fff',\n                            fontSize: 13,\n                        },\n                    }}\n                />\n                <div className=\"container\">\n                    <div className=\"form__data\">\n                        <h3 className=\"form__data__text\">My profile</h3>\n                        <Form\n                            form={form}\n                            name=\"basic\"\n                            labelCol={{\n                                span: 4,\n                            }}\n                            wrapperCol={{\n                                span: 16,\n                            }}\n                            initialValues={{\n                                remember: true,\n                            }}\n                            onFinish={onFinish}\n                            onFinishFailed={onFinishFailed}\n                            autoComplete=\"off\"\n                        >\n                            <Form.Item label=\"Email\" name=\"email\">\n                                <Input disabled={true} />\n                            </Form.Item>\n\n                            <Form.Item\n                                label=\"Username\"\n                                name=\"name\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your username!',\n                                    },\n                                ]}\n                            >\n                                <Input />\n                            </Form.Item>\n                            <Form.Item\n                                name=\"gender\"\n                                label=\"Gender\"\n                                rules={[{ required: true }]}\n                            >\n                                <Select\n                                    placeholder=\"Select a gender and change \"\n                                    onChange={onGenderChange}\n                                    allowClear\n                                >\n                                    <Option value=\"male\">male</Option>\n                                    <Option value=\"female\">female</Option>\n                                    <Option value=\"other\">other</Option>\n                                </Select>\n                            </Form.Item>\n                            <Form.Item\n                                name=\"role\"\n                                label=\"Role\"\n                                rules={[{ required: true }]}\n                            >\n                                <Select\n                                    placeholder=\"Select a role and change \"\n                                    onChange={onRoleChange}\n                                    allowClear\n                                >\n                                    <Option value=\"user\">user</Option>\n                                    <Option value=\"admin\">admin</Option>\n                                </Select>\n                            </Form.Item>\n                            <Form.Item label=\"Address\" name=\"address\">\n                                <Input />\n                            </Form.Item>\n                            <Form.Item\n                                label=\"Phone\"\n                                name=\"phone\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: 'Please input your phone!',\n                                    },\n                                ]}\n                            >\n                                <Input />\n                            </Form.Item>\n                            <Form.Item\n                                wrapperCol={{\n                                    offset: 4,\n                                    span: 16,\n                                }}\n                            >\n                                <Button type=\"button\" onClick={onReset}>\n                                    Cancel\n                                </Button>\n                                <Button\n                                    type=\"primary\"\n                                    htmlType=\"submit\"\n                                    style={{ marginLeft: 15 }}\n                                >\n                                    Edit\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Index\n","import { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport './scss/main.scss'\nimport { Provider } from 'react-redux'\nimport PrivateRoute from './private/PrivateRoute'\nimport RouteLinks from './private/RouteLinks'\nimport Store from './store'\nimport Register from './pages/Auth/Register'\nimport Login from './pages/Auth/Login'\nimport AdminHeader from './components/Shared/AdminHeader'\nimport AdminSidebar from './components/Shared/AdminSidebar'\nimport AdminDashboard from './pages/Admin'\nimport NotFound from './components/NotFound'\nimport AdminUser from './pages/Admin/User'\nimport AdminCreateUser from './pages/Admin/User/create'\nimport AdminEditUser from './pages/Admin/User/edit'\nimport AdminPost from './pages/Admin/Post'\nimport AdminCreatePost from './pages/Admin/Post/create'\nimport AdminEditPost from './pages/Admin/Post/edit'\nimport AdminComment from './pages/Admin/Comment'\nimport ChangePassword from './pages/Auth/ChangePassword'\nimport AdminProfile from './pages/Admin/Profile'\n\nfunction App() {\n  return (\n    <Provider store={Store}>\n      <Router>\n        <Switch>\n          <RouteLinks path=\"/admin/register\" component={Register} />\n          <RouteLinks path=\"/admin/login\" component={Login} />\n          <div className=\"d-flex\">\n            <AdminSidebar />\n            <div className=\"col-10\">\n              <AdminHeader />\n              <PrivateRoute path='/admin/dashboard' exact={true} component={AdminDashboard} />\n              <PrivateRoute path='/admin/users' component={AdminUser} />\n              <PrivateRoute path='/admin/create-user' component={AdminCreateUser} />\n              <PrivateRoute path='/admin/edit-user/:id' component={AdminEditUser} />\n              <PrivateRoute path='/admin/posts' component={AdminPost} />\n              <PrivateRoute path='/admin/create-post' component={AdminCreatePost} />\n              <PrivateRoute path='/admin/edit-post/:id' component={AdminEditPost} />\n              <PrivateRoute path='/admin/comments' component={AdminComment} />\n              <PrivateRoute path='/admin/change-password' component={ChangePassword} />\n              <PrivateRoute path='/admin/profile' component={AdminProfile} />\n            </div>\n          </div>\n\n          {/* <Route path='*' exact={true} component={NotFound} /> */}\n        </Switch>\n      </Router>\n\n    </Provider>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}